#
# obj.pashm
#
# The Pashmak Project
# Copyright 2020-2021 parsa shahmaleki <parsampsh@gmail.com>
#
# This file is part of Pashmak.
#
# Pashmak is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Pashmak is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Pashmak.  If not, see <https://www.gnu.org/licenses/>.
#########################################################################

@doc """\
Is parent of all of classes.\
"""
class Object
    func __init__
    endfunc

    func __str__
        return '[PashmakObject name="' + $this->__name__ + '"]'
    endfunc

    @doc """\
    Checks is this object instance of a class.\n\
    Gets that class as argument(You can pass class name as string or class object).\
    """
    func isinstanceof($args)
        $args = format_args($args)
        $class = $args[0]
        if typeof($class) != str
            $class = $class->__name__
        endif

        return $class in $this->__inheritance_tree__
    endfunc
endclass

@doc "Returns value of a variable by name of variable as string"
func get($args)
    $args = format_args($args)
    python("self.mem = self.get_var(self.get_var('args')[0])")
endfunc

@doc """\
Sets value of a variable by name of variable as first argument as string\
And value as second argument\
"""
func set($args)
    $args = format_args($args)
    python("self.set_var(self.get_var('args')[0], self.get_var('args')[1])")
endfunc

func isset($args)
    $args = format_args($args)
    python('self.mem = self.variable_exists(self.get_var("args")[0])')
endfunc

func free($args)
    $args = format_args($args)
    python('try:\n\tdel self.all_vars()[self.get_var("args")[0]]\nexcept KeyError:\n\tpass')
endfunc
