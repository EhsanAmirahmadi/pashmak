#
# modules.py
#
# The Pashmak Project
# Copyright 2020-2021 parsa shahmaleki <parsampsh@gmail.com>
#
# This file is part of Pashmak.
#
# Pashmak is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Pashmak is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Pashmak.  If not, see <https://www.gnu.org/licenses/>.
#########################################################################

""" Internal modules """

# This file is auto generated by `make module`.
# Do Not change this file
# The modules in `src/` folder with `.pashm` extension will be mixed here
# to be accessible in the python code for interpreter cores

modules = {}
""" The builtin modules as dictionary """

modules["compiler"] = [{'str': '@doc "The Mixer class gets a file path and crawls in that, finds imports and mixes them\\nExample:    $mixer = Mixer(\'/path/to/file.pashm\')    # then, finally generated code is accessible:    println($mixer->total_content)"', 'command': '@doc', 'args_str': '"The Mixer class gets a file path and crawls in that, finds imports and mixes them\\nExample:    $mixer = Mixer(\'/path/to/file.pashm\')    # then, finally generated code is accessible:    println($mixer->total_content)"', 'args': ['"The', 'Mixer', 'class', 'gets', 'a', 'file', 'path', 'and', 'crawls', 'in', 'that,', 'finds', 'imports', 'and', 'mixes', 'them\\nExample:', '$mixer', '=', "Mixer('/path/to/file.pashm')", '#', 'then,', 'finally', 'generated', 'code', 'is', 'accessible:', 'println($mixer->total_content)"'], 'file_path': '@compiler', 'line_number': 1, 'strings': [[False, '@doc '], [True, '"The Mixer class gets a file path and crawls in that, finds imports and mixes them\\nExample:    $mixer = Mixer(\'/path/to/file.pashm\')    # then, finally generated code is accessible:    println($mixer->total_content)"'], [False, '']], 'arg_strings': [[False, ''], [True, '"The Mixer class gets a file path and crawls in that, finds imports and mixes them\\nExample:    $mixer = Mixer(\'/path/to/file.pashm\')    # then, finally generated code is accessible:    println($mixer->total_content)"'], [False, '']]}, {'str': 'class Mixer', 'command': 'class', 'args_str': 'Mixer', 'args': ['Mixer'], 'file_path': '@compiler', 'line_number': 2, 'strings': [[False, 'class Mixer']], 'arg_strings': [[False, 'Mixer']]}, {'str': 'func __init__(string $path)', 'command': 'func', 'args_str': '__init__(string $path)', 'args': ['__init__(string', '$path)'], 'file_path': '@compiler', 'line_number': 3, 'strings': [[False, 'func __init__(string $path)']], 'arg_strings': [[False, '__init__(string $path)']]}, {'str': "$this->total_content = ''", 'command': '$this->total_content', 'args_str': "= ''", 'args': ['=', "''"], 'file_path': '@compiler', 'line_number': 4, 'strings': [[False, '$this->total_content = '], [True, "''"], [False, '']], 'arg_strings': [[False, '= '], [True, "''"], [False, '']]}, {'str': '$this->imported_files = []', 'command': '$this->imported_files', 'args_str': '= []', 'args': ['=', '[]'], 'file_path': '@compiler', 'line_number': 5, 'strings': [[False, '$this->imported_files = []']], 'arg_strings': [[False, '= []']]}, {'str': "$this->last_is_main = 'True'", 'command': '$this->last_is_main', 'args_str': "= 'True'", 'args': ['=', "'True'"], 'file_path': '@compiler', 'line_number': 6, 'strings': [[False, '$this->last_is_main = '], [True, "'True'"], [False, '']], 'arg_strings': [[False, '= '], [True, "'True'"], [False, '']]}, {'str': '$this->crawl ($path)', 'command': '$this->crawl', 'args_str': '($path)', 'args': ['($path)'], 'file_path': '@compiler', 'line_number': 7, 'strings': [[False, '$this->crawl ($path)']], 'arg_strings': [[False, '($path)']]}, {'str': '$parsed_code = parser.parse($this->total_content, filepath=$path, only_parse=True)', 'command': '$parsed_code', 'args_str': '= parser.parse($this->total_content, filepath=$path, only_parse=True)', 'args': ['=', 'parser.parse($this->total_content,', 'filepath=$path,', 'only_parse=True)'], 'file_path': '@compiler', 'line_number': 8, 'strings': [[False, '$parsed_code = parser.parse($this->total_content, filepath=$path, only_parse=True)']], 'arg_strings': [[False, '= parser.parse($this->total_content, filepath=$path, only_parse=True)']]}, {'str': "$new_content = '#!/usr/bin/env pashmak\\n'", 'command': '$new_content', 'args_str': "= '#!/usr/bin/env pashmak\\n'", 'args': ['=', "'#!/usr/bin/env", "pashmak\\n'"], 'file_path': '@compiler', 'line_number': 9, 'strings': [[False, '$new_content = '], [True, "'#!/usr/bin/env pashmak\\n'"], [False, '']], 'arg_strings': [[False, '= '], [True, "'#!/usr/bin/env pashmak\\n'"], [False, '']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@compiler', 'line_number': 10, 'strings': [[False, '$i = 0']], 'arg_strings': [[False, '= 0']]}, {'str': 'while $i < len($parsed_code)', 'command': 'while', 'args_str': '$i < len($parsed_code)', 'args': ['$i', '<', 'len($parsed_code)'], 'file_path': '@compiler', 'line_number': 11, 'strings': [[False, 'while $i < len($parsed_code)']], 'arg_strings': [[False, '$i < len($parsed_code)']]}, {'str': "$new_content = $new_content + $parsed_code[$i]['str'] + ';'", 'command': '$new_content', 'args_str': "= $new_content + $parsed_code[$i]['str'] + ';'", 'args': ['=', '$new_content', '+', "$parsed_code[$i]['str']", '+', "';'"], 'file_path': '@compiler', 'line_number': 12, 'strings': [[False, '$new_content = $new_content + $parsed_code[$i]['], [True, "'str'"], [False, '] + '], [True, "';'"], [False, '']], 'arg_strings': [[False, '= $new_content + $parsed_code[$i]['], [True, "'str'"], [False, '] + '], [True, "';'"], [False, '']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@compiler', 'line_number': 13, 'strings': [[False, '$i = $i + 1']], 'arg_strings': [[False, '= $i + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 14, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': '$this->total_content = $new_content->strip()', 'command': '$this->total_content', 'args_str': '= $new_content->strip()', 'args': ['=', '$new_content->strip()'], 'file_path': '@compiler', 'line_number': 15, 'strings': [[False, '$this->total_content = $new_content->strip()']], 'arg_strings': [[False, '= $new_content->strip()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 16, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "    Crawls in a path and finds imports    \\n    This method is called recursively    "', 'command': '@doc', 'args_str': '"    Crawls in a path and finds imports    \\n    This method is called recursively    "', 'args': ['"', 'Crawls', 'in', 'a', 'path', 'and', 'finds', 'imports', '\\n', 'This', 'method', 'is', 'called', 'recursively', '"'], 'file_path': '@compiler', 'line_number': 17, 'strings': [[False, '@doc '], [True, '"    Crawls in a path and finds imports    \\n    This method is called recursively    "'], [False, '']], 'arg_strings': [[False, ''], [True, '"    Crawls in a path and finds imports    \\n    This method is called recursively    "'], [False, '']]}, {'str': 'func crawl(string $path)', 'command': 'func', 'args_str': 'crawl(string $path)', 'args': ['crawl(string', '$path)'], 'file_path': '@compiler', 'line_number': 18, 'strings': [[False, 'func crawl(string $path)']], 'arg_strings': [[False, 'crawl(string $path)']]}, {'str': '$path = os.path.abspath($path)', 'command': '$path', 'args_str': '= os.path.abspath($path)', 'args': ['=', 'os.path.abspath($path)'], 'file_path': '@compiler', 'line_number': 19, 'strings': [[False, '$path = os.path.abspath($path)']], 'arg_strings': [[False, '= os.path.abspath($path)']]}, {'str': 'if os.path.isdir($path)', 'command': 'if', 'args_str': 'os.path.isdir($path)', 'args': ['os.path.isdir($path)'], 'file_path': '@compiler', 'line_number': 20, 'strings': [[False, 'if os.path.isdir($path)']], 'arg_strings': [[False, 'os.path.isdir($path)']]}, {'str': 'mem not (os.path.isdir($path))', 'command': 'mem', 'args_str': 'not (os.path.isdir($path))', 'args': ['not', '(os.path.isdir($path))'], 'file_path': '<system>', 'line_number': 19, 'strings': [[False, 'mem not (os.path.isdir($path))']], 'arg_strings': [[False, 'not (os.path.isdir($path))']]}, {'str': 'gotoif tmplabelif0_2', 'command': 'gotoif', 'args_str': 'tmplabelif0_2', 'args': ['tmplabelif0_2'], 'file_path': '<system>', 'line_number': 19, 'strings': [[False, 'gotoif tmplabelif0_2']], 'arg_strings': [[False, 'tmplabelif0_2']]}, {'str': "$path = $path + '/__init__.pashm'", 'command': '$path', 'args_str': "= $path + '/__init__.pashm'", 'args': ['=', '$path', '+', "'/__init__.pashm'"], 'file_path': '@compiler', 'line_number': 21, 'strings': [[False, '$path = $path + '], [True, "'/__init__.pashm'"], [False, '']], 'arg_strings': [[False, '= $path + '], [True, "'/__init__.pashm'"], [False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 22, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif0_2', 'command': 'label', 'args_str': 'tmplabelif0_2', 'args': ['tmplabelif0_2'], 'file_path': '<system>', 'line_number': 23, 'strings': [[False, 'label tmplabelif0_2']], 'arg_strings': [[False, 'tmplabelif0_2']]}, {'str': 'label tmplabelif0_end', 'command': 'label', 'args_str': 'tmplabelif0_end', 'args': ['tmplabelif0_end'], 'file_path': '<system>', 'line_number': 23, 'strings': [[False, 'label tmplabelif0_end']], 'arg_strings': [[False, 'tmplabelif0_end']]}, {'str': "$f = open($path, 'r')", 'command': '$f', 'args_str': "= open($path, 'r')", 'args': ['=', 'open($path,', "'r')"], 'file_path': '@compiler', 'line_number': 23, 'strings': [[False, '$f = open($path, '], [True, "'r'"], [False, ')']], 'arg_strings': [[False, '= open($path, '], [True, "'r'"], [False, ')']]}, {'str': '$content = $f->read()', 'command': '$content', 'args_str': '= $f->read()', 'args': ['=', '$f->read()'], 'file_path': '@compiler', 'line_number': 24, 'strings': [[False, '$content = $f->read()']], 'arg_strings': [[False, '= $f->read()']]}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@compiler', 'line_number': 25, 'strings': [[False, '$f->close ()']], 'arg_strings': [[False, '()']]}, {'str': '$parsed_code = parser.parse($content, filepath=$path, only_parse=True)', 'command': '$parsed_code', 'args_str': '= parser.parse($content, filepath=$path, only_parse=True)', 'args': ['=', 'parser.parse($content,', 'filepath=$path,', 'only_parse=True)'], 'file_path': '@compiler', 'line_number': 26, 'strings': [[False, '$parsed_code = parser.parse($content, filepath=$path, only_parse=True)']], 'arg_strings': [[False, '= parser.parse($content, filepath=$path, only_parse=True)']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@compiler', 'line_number': 27, 'strings': [[False, '$i = 0']], 'arg_strings': [[False, '= 0']]}, {'str': 'while $i < len($parsed_code)', 'command': 'while', 'args_str': '$i < len($parsed_code)', 'args': ['$i', '<', 'len($parsed_code)'], 'file_path': '@compiler', 'line_number': 28, 'strings': [[False, 'while $i < len($parsed_code)']], 'arg_strings': [[False, '$i < len($parsed_code)']]}, {'str': "if $parsed_code[$i]['command'] == 'import' or $parsed_code[$i]['command'] == 'import_once'", 'command': 'if', 'args_str': "$parsed_code[$i]['command'] == 'import' or $parsed_code[$i]['command'] == 'import_once'", 'args': ["$parsed_code[$i]['command']", '==', "'import'", 'or', "$parsed_code[$i]['command']", '==', "'import_once'"], 'file_path': '@compiler', 'line_number': 29, 'strings': [[False, 'if $parsed_code[$i]['], [True, "'command'"], [False, '] == '], [True, "'import'"], [False, ' or $parsed_code[$i]['], [True, "'command'"], [False, '] == '], [True, "'import_once'"], [False, '']], 'arg_strings': [[False, '$parsed_code[$i]['], [True, "'command'"], [False, '] == '], [True, "'import'"], [False, ' or $parsed_code[$i]['], [True, "'command'"], [False, '] == '], [True, "'import_once'"], [False, '']]}, {'str': "mem not ($parsed_code[$i]['command'] == 'import' or $parsed_code[$i]['command'] == 'import_once')", 'command': 'mem', 'args_str': "not ($parsed_code[$i]['command'] == 'import' or $parsed_code[$i]['command'] == 'import_once')", 'args': ['not', "($parsed_code[$i]['command']", '==', "'import'", 'or', "$parsed_code[$i]['command']", '==', "'import_once')"], 'file_path': '<system>', 'line_number': 32, 'strings': [[False, 'mem not ($parsed_code[$i]['], [True, "'command'"], [False, '] == '], [True, "'import'"], [False, ' or $parsed_code[$i]['], [True, "'command'"], [False, '] == '], [True, "'import_once'"], [False, ')']], 'arg_strings': [[False, 'not ($parsed_code[$i]['], [True, "'command'"], [False, '] == '], [True, "'import'"], [False, ' or $parsed_code[$i]['], [True, "'command'"], [False, '] == '], [True, "'import_once'"], [False, ')']]}, {'str': 'gotoif tmplabelif1_2', 'command': 'gotoif', 'args_str': 'tmplabelif1_2', 'args': ['tmplabelif1_2'], 'file_path': '<system>', 'line_number': 32, 'strings': [[False, 'gotoif tmplabelif1_2']], 'arg_strings': [[False, 'tmplabelif1_2']]}, {'str': '$import_cmd_arg = False', 'command': '$import_cmd_arg', 'args_str': '= False', 'args': ['=', 'False'], 'file_path': '@compiler', 'line_number': 30, 'strings': [[False, '$import_cmd_arg = False']], 'arg_strings': [[False, '= False']]}, {'str': 'try error', 'command': 'try', 'args_str': 'error', 'args': ['error'], 'file_path': '@compiler', 'line_number': 31, 'strings': [[False, 'try error']], 'arg_strings': [[False, 'error']]}, {'str': '$__old_dir__ = $__dir__', 'command': '$__old_dir__', 'args_str': '= $__dir__', 'args': ['=', '$__dir__'], 'file_path': '@compiler', 'line_number': 32, 'strings': [[False, '$__old_dir__ = $__dir__']], 'arg_strings': [[False, '= $__dir__']]}, {'str': '$__old_file__ = $__file__', 'command': '$__old_file__', 'args_str': '= $__file__', 'args': ['=', '$__file__'], 'file_path': '@compiler', 'line_number': 33, 'strings': [[False, '$__old_file__ = $__file__']], 'arg_strings': [[False, '= $__file__']]}, {'str': '$__dir__ = os.path.dirname($path)', 'command': '$__dir__', 'args_str': '= os.path.dirname($path)', 'args': ['=', 'os.path.dirname($path)'], 'file_path': '@compiler', 'line_number': 34, 'strings': [[False, '$__dir__ = os.path.dirname($path)']], 'arg_strings': [[False, '= os.path.dirname($path)']]}, {'str': '$__file__ = $path', 'command': '$__file__', 'args_str': '= $path', 'args': ['=', '$path'], 'file_path': '@compiler', 'line_number': 35, 'strings': [[False, '$__file__ = $path']], 'arg_strings': [[False, '= $path']]}, {'str': "$import_cmd_arg = python('self.mem = self.eval(' + repr($parsed_code[$i]['args_str']) + ')')", 'command': '$import_cmd_arg', 'args_str': "= python('self.mem = self.eval(' + repr($parsed_code[$i]['args_str']) + ')')", 'args': ['=', "python('self.mem", '=', "self.eval('", '+', "repr($parsed_code[$i]['args_str'])", '+', "')')"], 'file_path': '@compiler', 'line_number': 36, 'strings': [[False, '$import_cmd_arg = python('], [True, "'self.mem = self.eval('"], [False, ' + repr($parsed_code[$i]['], [True, "'args_str'"], [False, ']) + '], [True, "')'"], [False, ')']], 'arg_strings': [[False, '= python('], [True, "'self.mem = self.eval('"], [False, ' + repr($parsed_code[$i]['], [True, "'args_str'"], [False, ']) + '], [True, "')'"], [False, ')']]}, {'str': '$__dir__ = $__old_dir__', 'command': '$__dir__', 'args_str': '= $__old_dir__', 'args': ['=', '$__old_dir__'], 'file_path': '@compiler', 'line_number': 37, 'strings': [[False, '$__dir__ = $__old_dir__']], 'arg_strings': [[False, '= $__old_dir__']]}, {'str': '$__file__ = $__old_file__', 'command': '$__file__', 'args_str': '= $__old_file__', 'args': ['=', '$__old_file__'], 'file_path': '@compiler', 'line_number': 38, 'strings': [[False, '$__file__ = $__old_file__']], 'arg_strings': [[False, '= $__old_file__']]}, {'str': 'endtry ', 'command': 'endtry', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 39, 'strings': [[False, 'endtry']], 'arg_strings': [[False, '']]}, {'str': 'goto after_error', 'command': 'goto', 'args_str': 'after_error', 'args': ['after_error'], 'file_path': '@compiler', 'line_number': 39, 'strings': [[False, 'goto after_error']], 'arg_strings': [[False, 'after_error']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'arg_strings': [[False, '']]}, {'str': 'label error', 'command': 'label', 'args_str': 'error', 'args': ['error'], 'file_path': '@compiler', 'line_number': 39, 'strings': [[False, 'label error']], 'arg_strings': [[False, 'error']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'arg_strings': [[False, '']]}, {'str': 'label after_error', 'command': 'label', 'args_str': 'after_error', 'args': ['after_error'], 'file_path': '@compiler', 'line_number': 40, 'strings': [[False, 'label after_error']], 'arg_strings': [[False, 'after_error']]}, {'str': 'if $import_cmd_arg != False', 'command': 'if', 'args_str': '$import_cmd_arg != False', 'args': ['$import_cmd_arg', '!=', 'False'], 'file_path': '@compiler', 'line_number': 41, 'strings': [[False, 'if $import_cmd_arg != False']], 'arg_strings': [[False, '$import_cmd_arg != False']]}, {'str': 'mem not ($import_cmd_arg != False)', 'command': 'mem', 'args_str': 'not ($import_cmd_arg != False)', 'args': ['not', '($import_cmd_arg', '!=', 'False)'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'mem not ($import_cmd_arg != False)']], 'arg_strings': [[False, 'not ($import_cmd_arg != False)']]}, {'str': 'gotoif tmplabelif2_2', 'command': 'gotoif', 'args_str': 'tmplabelif2_2', 'args': ['tmplabelif2_2'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'gotoif tmplabelif2_2']], 'arg_strings': [[False, 'tmplabelif2_2']]}, {'str': 'if typeof($import_cmd_arg) != tuple', 'command': 'if', 'args_str': 'typeof($import_cmd_arg) != tuple', 'args': ['typeof($import_cmd_arg)', '!=', 'tuple'], 'file_path': '@compiler', 'line_number': 42, 'strings': [[False, 'if typeof($import_cmd_arg) != tuple']], 'arg_strings': [[False, 'typeof($import_cmd_arg) != tuple']]}, {'str': 'mem not (typeof($import_cmd_arg) != tuple)', 'command': 'mem', 'args_str': 'not (typeof($import_cmd_arg) != tuple)', 'args': ['not', '(typeof($import_cmd_arg)', '!=', 'tuple)'], 'file_path': '<system>', 'line_number': 53, 'strings': [[False, 'mem not (typeof($import_cmd_arg) != tuple)']], 'arg_strings': [[False, 'not (typeof($import_cmd_arg) != tuple)']]}, {'str': 'gotoif tmplabelif3_2', 'command': 'gotoif', 'args_str': 'tmplabelif3_2', 'args': ['tmplabelif3_2'], 'file_path': '<system>', 'line_number': 53, 'strings': [[False, 'gotoif tmplabelif3_2']], 'arg_strings': [[False, 'tmplabelif3_2']]}, {'str': '$import_cmd_arg = $import_cmd_arg,', 'command': '$import_cmd_arg', 'args_str': '= $import_cmd_arg,', 'args': ['=', '$import_cmd_arg,'], 'file_path': '@compiler', 'line_number': 43, 'strings': [[False, '$import_cmd_arg = $import_cmd_arg,']], 'arg_strings': [[False, '= $import_cmd_arg,']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 44, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif3_2', 'command': 'label', 'args_str': 'tmplabelif3_2', 'args': ['tmplabelif3_2'], 'file_path': '<system>', 'line_number': 57, 'strings': [[False, 'label tmplabelif3_2']], 'arg_strings': [[False, 'tmplabelif3_2']]}, {'str': 'label tmplabelif3_end', 'command': 'label', 'args_str': 'tmplabelif3_end', 'args': ['tmplabelif3_end'], 'file_path': '<system>', 'line_number': 57, 'strings': [[False, 'label tmplabelif3_end']], 'arg_strings': [[False, 'tmplabelif3_end']]}, {'str': '$import_cmd_arg = list($import_cmd_arg)', 'command': '$import_cmd_arg', 'args_str': '= list($import_cmd_arg)', 'args': ['=', 'list($import_cmd_arg)'], 'file_path': '@compiler', 'line_number': 45, 'strings': [[False, '$import_cmd_arg = list($import_cmd_arg)']], 'arg_strings': [[False, '= list($import_cmd_arg)']]}, {'str': '$x = 0', 'command': '$x', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@compiler', 'line_number': 46, 'strings': [[False, '$x = 0']], 'arg_strings': [[False, '= 0']]}, {'str': 'while $x < len($import_cmd_arg)', 'command': 'while', 'args_str': '$x < len($import_cmd_arg)', 'args': ['$x', '<', 'len($import_cmd_arg)'], 'file_path': '@compiler', 'line_number': 47, 'strings': [[False, 'while $x < len($import_cmd_arg)']], 'arg_strings': [[False, '$x < len($import_cmd_arg)']]}, {'str': 'if $import_cmd_arg[$x]', 'command': 'if', 'args_str': '$import_cmd_arg[$x]', 'args': ['$import_cmd_arg[$x]'], 'file_path': '@compiler', 'line_number': 48, 'strings': [[False, 'if $import_cmd_arg[$x]']], 'arg_strings': [[False, '$import_cmd_arg[$x]']]}, {'str': 'mem not ($import_cmd_arg[$x])', 'command': 'mem', 'args_str': 'not ($import_cmd_arg[$x])', 'args': ['not', '($import_cmd_arg[$x])'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'mem not ($import_cmd_arg[$x])']], 'arg_strings': [[False, 'not ($import_cmd_arg[$x])']]}, {'str': 'gotoif tmplabelif4_2', 'command': 'gotoif', 'args_str': 'tmplabelif4_2', 'args': ['tmplabelif4_2'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'gotoif tmplabelif4_2']], 'arg_strings': [[False, 'tmplabelif4_2']]}, {'str': "if $import_cmd_arg[$x][0] == '@'", 'command': 'if', 'args_str': "$import_cmd_arg[$x][0] == '@'", 'args': ['$import_cmd_arg[$x][0]', '==', "'@'"], 'file_path': '@compiler', 'line_number': 49, 'strings': [[False, 'if $import_cmd_arg[$x][0] == '], [True, "'@'"], [False, '']], 'arg_strings': [[False, '$import_cmd_arg[$x][0] == '], [True, "'@'"], [False, '']]}, {'str': "mem not ($import_cmd_arg[$x][0] == '@')", 'command': 'mem', 'args_str': "not ($import_cmd_arg[$x][0] == '@')", 'args': ['not', '($import_cmd_arg[$x][0]', '==', "'@')"], 'file_path': '<system>', 'line_number': 66, 'strings': [[False, 'mem not ($import_cmd_arg[$x][0] == '], [True, "'@'"], [False, ')']], 'arg_strings': [[False, 'not ($import_cmd_arg[$x][0] == '], [True, "'@'"], [False, ')']]}, {'str': 'gotoif tmplabelif5_2', 'command': 'gotoif', 'args_str': 'tmplabelif5_2', 'args': ['tmplabelif5_2'], 'file_path': '<system>', 'line_number': 66, 'strings': [[False, 'gotoif tmplabelif5_2']], 'arg_strings': [[False, 'tmplabelif5_2']]}, {'str': "$this->total_content = $this->total_content + $parsed_code[$i]['str'] + '\\n'", 'command': '$this->total_content', 'args_str': "= $this->total_content + $parsed_code[$i]['str'] + '\\n'", 'args': ['=', '$this->total_content', '+', "$parsed_code[$i]['str']", '+', "'\\n'"], 'file_path': '@compiler', 'line_number': 50, 'strings': [[False, '$this->total_content = $this->total_content + $parsed_code[$i]['], [True, "'str'"], [False, '] + '], [True, "'\\n'"], [False, '']], 'arg_strings': [[False, '= $this->total_content + $parsed_code[$i]['], [True, "'str'"], [False, '] + '], [True, "'\\n'"], [False, '']]}, {'str': '$x = $x + 1', 'command': '$x', 'args_str': '= $x + 1', 'args': ['=', '$x', '+', '1'], 'file_path': '@compiler', 'line_number': 51, 'strings': [[False, '$x = $x + 1']], 'arg_strings': [[False, '= $x + 1']]}, {'str': 'continue ', 'command': 'continue', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 52, 'strings': [[False, 'continue']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 53, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif5_2', 'command': 'label', 'args_str': 'tmplabelif5_2', 'args': ['tmplabelif5_2'], 'file_path': '<system>', 'line_number': 72, 'strings': [[False, 'label tmplabelif5_2']], 'arg_strings': [[False, 'tmplabelif5_2']]}, {'str': 'label tmplabelif5_end', 'command': 'label', 'args_str': 'tmplabelif5_end', 'args': ['tmplabelif5_end'], 'file_path': '<system>', 'line_number': 72, 'strings': [[False, 'label tmplabelif5_end']], 'arg_strings': [[False, 'tmplabelif5_end']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 54, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif4_2', 'command': 'label', 'args_str': 'tmplabelif4_2', 'args': ['tmplabelif4_2'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'label tmplabelif4_2']], 'arg_strings': [[False, 'tmplabelif4_2']]}, {'str': 'label tmplabelif4_end', 'command': 'label', 'args_str': 'tmplabelif4_end', 'args': ['tmplabelif4_end'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'label tmplabelif4_end']], 'arg_strings': [[False, 'tmplabelif4_end']]}, {'str': '$import_cmd_arg[$x] = os.path.abspath($import_cmd_arg[$x])', 'command': '$import_cmd_arg[$x]', 'args_str': '= os.path.abspath($import_cmd_arg[$x])', 'args': ['=', 'os.path.abspath($import_cmd_arg[$x])'], 'file_path': '@compiler', 'line_number': 55, 'strings': [[False, '$import_cmd_arg[$x] = os.path.abspath($import_cmd_arg[$x])']], 'arg_strings': [[False, '= os.path.abspath($import_cmd_arg[$x])']]}, {'str': "if ($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['command'] != 'import_once'", 'command': 'if', 'args_str': "($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['command'] != 'import_once'", 'args': ['($import_cmd_arg[$x]', 'not', 'in', '$this->imported_files)', 'or', "$parsed_code[$i]['command']", '!=', "'import_once'"], 'file_path': '@compiler', 'line_number': 56, 'strings': [[False, 'if ($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['], [True, "'command'"], [False, '] != '], [True, "'import_once'"], [False, '']], 'arg_strings': [[False, '($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['], [True, "'command'"], [False, '] != '], [True, "'import_once'"], [False, '']]}, {'str': "mem not (($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['command'] != 'import_once')", 'command': 'mem', 'args_str': "not (($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['command'] != 'import_once')", 'args': ['not', '(($import_cmd_arg[$x]', 'not', 'in', '$this->imported_files)', 'or', "$parsed_code[$i]['command']", '!=', "'import_once')"], 'file_path': '<system>', 'line_number': 79, 'strings': [[False, 'mem not (($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['], [True, "'command'"], [False, '] != '], [True, "'import_once'"], [False, ')']], 'arg_strings': [[False, 'not (($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['], [True, "'command'"], [False, '] != '], [True, "'import_once'"], [False, ')']]}, {'str': 'gotoif tmplabelif6_2', 'command': 'gotoif', 'args_str': 'tmplabelif6_2', 'args': ['tmplabelif6_2'], 'file_path': '<system>', 'line_number': 79, 'strings': [[False, 'gotoif tmplabelif6_2']], 'arg_strings': [[False, 'tmplabelif6_2']]}, {'str': "$this->total_content = $this->total_content + '$__ismain__ = False\\n'", 'command': '$this->total_content', 'args_str': "= $this->total_content + '$__ismain__ = False\\n'", 'args': ['=', '$this->total_content', '+', "'$__ismain__", '=', "False\\n'"], 'file_path': '@compiler', 'line_number': 57, 'strings': [[False, '$this->total_content = $this->total_content + '], [True, "'$__ismain__ = False\\n'"], [False, '']], 'arg_strings': [[False, '= $this->total_content + '], [True, "'$__ismain__ = False\\n'"], [False, '']]}, {'str': '$tmp_last_is_main = $this->last_is_main', 'command': '$tmp_last_is_main', 'args_str': '= $this->last_is_main', 'args': ['=', '$this->last_is_main'], 'file_path': '@compiler', 'line_number': 58, 'strings': [[False, '$tmp_last_is_main = $this->last_is_main']], 'arg_strings': [[False, '= $this->last_is_main']]}, {'str': "$this->last_is_main = 'False'", 'command': '$this->last_is_main', 'args_str': "= 'False'", 'args': ['=', "'False'"], 'file_path': '@compiler', 'line_number': 59, 'strings': [[False, '$this->last_is_main = '], [True, "'False'"], [False, '']], 'arg_strings': [[False, '= '], [True, "'False'"], [False, '']]}, {'str': '$this->crawl ($import_cmd_arg[$x])', 'command': '$this->crawl', 'args_str': '($import_cmd_arg[$x])', 'args': ['($import_cmd_arg[$x])'], 'file_path': '@compiler', 'line_number': 60, 'strings': [[False, '$this->crawl ($import_cmd_arg[$x])']], 'arg_strings': [[False, '($import_cmd_arg[$x])']]}, {'str': '$this->imported_files->append ($import_cmd_arg[$x])', 'command': '$this->imported_files->append', 'args_str': '($import_cmd_arg[$x])', 'args': ['($import_cmd_arg[$x])'], 'file_path': '@compiler', 'line_number': 61, 'strings': [[False, '$this->imported_files->append ($import_cmd_arg[$x])']], 'arg_strings': [[False, '($import_cmd_arg[$x])']]}, {'str': "$this->total_content = $this->total_content + '$__ismain__ = ' + $tmp_last_is_main + '\\n'", 'command': '$this->total_content', 'args_str': "= $this->total_content + '$__ismain__ = ' + $tmp_last_is_main + '\\n'", 'args': ['=', '$this->total_content', '+', "'$__ismain__", '=', "'", '+', '$tmp_last_is_main', '+', "'\\n'"], 'file_path': '@compiler', 'line_number': 62, 'strings': [[False, '$this->total_content = $this->total_content + '], [True, "'$__ismain__ = '"], [False, ' + $tmp_last_is_main + '], [True, "'\\n'"], [False, '']], 'arg_strings': [[False, '= $this->total_content + '], [True, "'$__ismain__ = '"], [False, ' + $tmp_last_is_main + '], [True, "'\\n'"], [False, '']]}, {'str': '$this->last_is_main = $tmp_last_is_main', 'command': '$this->last_is_main', 'args_str': '= $tmp_last_is_main', 'args': ['=', '$tmp_last_is_main'], 'file_path': '@compiler', 'line_number': 63, 'strings': [[False, '$this->last_is_main = $tmp_last_is_main']], 'arg_strings': [[False, '= $tmp_last_is_main']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 64, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif6_2', 'command': 'label', 'args_str': 'tmplabelif6_2', 'args': ['tmplabelif6_2'], 'file_path': '<system>', 'line_number': 89, 'strings': [[False, 'label tmplabelif6_2']], 'arg_strings': [[False, 'tmplabelif6_2']]}, {'str': 'label tmplabelif6_end', 'command': 'label', 'args_str': 'tmplabelif6_end', 'args': ['tmplabelif6_end'], 'file_path': '<system>', 'line_number': 89, 'strings': [[False, 'label tmplabelif6_end']], 'arg_strings': [[False, 'tmplabelif6_end']]}, {'str': '$x = $x + 1', 'command': '$x', 'args_str': '= $x + 1', 'args': ['=', '$x', '+', '1'], 'file_path': '@compiler', 'line_number': 65, 'strings': [[False, '$x = $x + 1']], 'arg_strings': [[False, '= $x + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 66, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 67, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif2_2', 'command': 'label', 'args_str': 'tmplabelif2_2', 'args': ['tmplabelif2_2'], 'file_path': '<system>', 'line_number': 94, 'strings': [[False, 'label tmplabelif2_2']], 'arg_strings': [[False, 'tmplabelif2_2']]}, {'str': 'label tmplabelif2_end', 'command': 'label', 'args_str': 'tmplabelif2_end', 'args': ['tmplabelif2_end'], 'file_path': '<system>', 'line_number': 94, 'strings': [[False, 'label tmplabelif2_end']], 'arg_strings': [[False, 'tmplabelif2_end']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 68, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif1_end', 'command': 'goto', 'args_str': 'tmplabelif1_end', 'args': ['tmplabelif1_end'], 'file_path': '<system>', 'line_number': 97, 'strings': [[False, 'goto tmplabelif1_end']], 'arg_strings': [[False, 'tmplabelif1_end']]}, {'str': 'label tmplabelif1_2', 'command': 'label', 'args_str': 'tmplabelif1_2', 'args': ['tmplabelif1_2'], 'file_path': '<system>', 'line_number': 97, 'strings': [[False, 'label tmplabelif1_2']], 'arg_strings': [[False, 'tmplabelif1_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 97, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif1_3', 'command': 'gotoif', 'args_str': 'tmplabelif1_3', 'args': ['tmplabelif1_3'], 'file_path': '<system>', 'line_number': 97, 'strings': [[False, 'gotoif tmplabelif1_3']], 'arg_strings': [[False, 'tmplabelif1_3']]}, {'str': "$this->total_content = $this->total_content + $parsed_code[$i]['str'] + '\\n'", 'command': '$this->total_content', 'args_str': "= $this->total_content + $parsed_code[$i]['str'] + '\\n'", 'args': ['=', '$this->total_content', '+', "$parsed_code[$i]['str']", '+', "'\\n'"], 'file_path': '@compiler', 'line_number': 69, 'strings': [[False, '$this->total_content = $this->total_content + $parsed_code[$i]['], [True, "'str'"], [False, '] + '], [True, "'\\n'"], [False, '']], 'arg_strings': [[False, '= $this->total_content + $parsed_code[$i]['], [True, "'str'"], [False, '] + '], [True, "'\\n'"], [False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 70, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif1_3', 'command': 'label', 'args_str': 'tmplabelif1_3', 'args': ['tmplabelif1_3'], 'file_path': '<system>', 'line_number': 103, 'strings': [[False, 'label tmplabelif1_3']], 'arg_strings': [[False, 'tmplabelif1_3']]}, {'str': 'label tmplabelif1_end', 'command': 'label', 'args_str': 'tmplabelif1_end', 'args': ['tmplabelif1_end'], 'file_path': '<system>', 'line_number': 103, 'strings': [[False, 'label tmplabelif1_end']], 'arg_strings': [[False, 'tmplabelif1_end']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@compiler', 'line_number': 71, 'strings': [[False, '$i = $i + 1']], 'arg_strings': [[False, '= $i + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 72, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 73, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endclass ', 'command': 'endclass', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 74, 'strings': [[False, 'endclass']], 'arg_strings': [[False, '']]}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@compiler', 'line_number': 75, 'strings': [[False, 'if $__ismain__']], 'arg_strings': [[False, '$__ismain__']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 110, 'strings': [[False, 'mem not ($__ismain__)']], 'arg_strings': [[False, 'not ($__ismain__)']]}, {'str': 'gotoif tmplabelif7_2', 'command': 'gotoif', 'args_str': 'tmplabelif7_2', 'args': ['tmplabelif7_2'], 'file_path': '<system>', 'line_number': 110, 'strings': [[False, 'gotoif tmplabelif7_2']], 'arg_strings': [[False, 'tmplabelif7_2']]}, {'str': 'if len($argv) <= 1', 'command': 'if', 'args_str': 'len($argv) <= 1', 'args': ['len($argv)', '<=', '1'], 'file_path': '@compiler', 'line_number': 76, 'strings': [[False, 'if len($argv) <= 1']], 'arg_strings': [[False, 'len($argv) <= 1']]}, {'str': 'mem not (len($argv) <= 1)', 'command': 'mem', 'args_str': 'not (len($argv) <= 1)', 'args': ['not', '(len($argv)', '<=', '1)'], 'file_path': '<system>', 'line_number': 113, 'strings': [[False, 'mem not (len($argv) <= 1)']], 'arg_strings': [[False, 'not (len($argv) <= 1)']]}, {'str': 'gotoif tmplabelif8_2', 'command': 'gotoif', 'args_str': 'tmplabelif8_2', 'args': ['tmplabelif8_2'], 'file_path': '<system>', 'line_number': 113, 'strings': [[False, 'gotoif tmplabelif8_2']], 'arg_strings': [[False, 'tmplabelif8_2']]}, {'str': "println ('ERROR: script filename is required')", 'command': 'println', 'args_str': "('ERROR: script filename is required')", 'args': ["('ERROR:", 'script', 'filename', 'is', "required')"], 'file_path': '@compiler', 'line_number': 77, 'strings': [[False, 'println ('], [True, "'ERROR: script filename is required'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'ERROR: script filename is required'"], [False, ')']]}, {'str': 'exit (1)', 'command': 'exit', 'args_str': '(1)', 'args': ['(1)'], 'file_path': '@compiler', 'line_number': 78, 'strings': [[False, 'exit (1)']], 'arg_strings': [[False, '(1)']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 79, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif8_2', 'command': 'label', 'args_str': 'tmplabelif8_2', 'args': ['tmplabelif8_2'], 'file_path': '<system>', 'line_number': 118, 'strings': [[False, 'label tmplabelif8_2']], 'arg_strings': [[False, 'tmplabelif8_2']]}, {'str': 'label tmplabelif8_end', 'command': 'label', 'args_str': 'tmplabelif8_end', 'args': ['tmplabelif8_end'], 'file_path': '<system>', 'line_number': 118, 'strings': [[False, 'label tmplabelif8_end']], 'arg_strings': [[False, 'tmplabelif8_end']]}, {'str': '$mix = Mixer($argv[1])', 'command': '$mix', 'args_str': '= Mixer($argv[1])', 'args': ['=', 'Mixer($argv[1])'], 'file_path': '@compiler', 'line_number': 80, 'strings': [[False, '$mix = Mixer($argv[1])']], 'arg_strings': [[False, '= Mixer($argv[1])']]}, {'str': 'if len($argv) <= 2', 'command': 'if', 'args_str': 'len($argv) <= 2', 'args': ['len($argv)', '<=', '2'], 'file_path': '@compiler', 'line_number': 81, 'strings': [[False, 'if len($argv) <= 2']], 'arg_strings': [[False, 'len($argv) <= 2']]}, {'str': 'mem not (len($argv) <= 2)', 'command': 'mem', 'args_str': 'not (len($argv) <= 2)', 'args': ['not', '(len($argv)', '<=', '2)'], 'file_path': '<system>', 'line_number': 122, 'strings': [[False, 'mem not (len($argv) <= 2)']], 'arg_strings': [[False, 'not (len($argv) <= 2)']]}, {'str': 'gotoif tmplabelif9_2', 'command': 'gotoif', 'args_str': 'tmplabelif9_2', 'args': ['tmplabelif9_2'], 'file_path': '<system>', 'line_number': 122, 'strings': [[False, 'gotoif tmplabelif9_2']], 'arg_strings': [[False, 'tmplabelif9_2']]}, {'str': 'println ($mix->total_content)', 'command': 'println', 'args_str': '($mix->total_content)', 'args': ['($mix->total_content)'], 'file_path': '@compiler', 'line_number': 82, 'strings': [[False, 'println ($mix->total_content)']], 'arg_strings': [[False, '($mix->total_content)']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 83, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif9_end', 'command': 'goto', 'args_str': 'tmplabelif9_end', 'args': ['tmplabelif9_end'], 'file_path': '<system>', 'line_number': 126, 'strings': [[False, 'goto tmplabelif9_end']], 'arg_strings': [[False, 'tmplabelif9_end']]}, {'str': 'label tmplabelif9_2', 'command': 'label', 'args_str': 'tmplabelif9_2', 'args': ['tmplabelif9_2'], 'file_path': '<system>', 'line_number': 126, 'strings': [[False, 'label tmplabelif9_2']], 'arg_strings': [[False, 'tmplabelif9_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 126, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif9_3', 'command': 'gotoif', 'args_str': 'tmplabelif9_3', 'args': ['tmplabelif9_3'], 'file_path': '<system>', 'line_number': 126, 'strings': [[False, 'gotoif tmplabelif9_3']], 'arg_strings': [[False, 'tmplabelif9_3']]}, {'str': '$out_file_path = $argv[2]', 'command': '$out_file_path', 'args_str': '= $argv[2]', 'args': ['=', '$argv[2]'], 'file_path': '@compiler', 'line_number': 84, 'strings': [[False, '$out_file_path = $argv[2]']], 'arg_strings': [[False, '= $argv[2]']]}, {'str': "$f = open($out_file_path, 'w')", 'command': '$f', 'args_str': "= open($out_file_path, 'w')", 'args': ['=', 'open($out_file_path,', "'w')"], 'file_path': '@compiler', 'line_number': 85, 'strings': [[False, '$f = open($out_file_path, '], [True, "'w'"], [False, ')']], 'arg_strings': [[False, '= open($out_file_path, '], [True, "'w'"], [False, ')']]}, {'str': '$f->write ($mix->total_content)', 'command': '$f->write', 'args_str': '($mix->total_content)', 'args': ['($mix->total_content)'], 'file_path': '@compiler', 'line_number': 86, 'strings': [[False, '$f->write ($mix->total_content)']], 'arg_strings': [[False, '($mix->total_content)']]}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@compiler', 'line_number': 87, 'strings': [[False, '$f->close ()']], 'arg_strings': [[False, '()']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 88, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif9_3', 'command': 'label', 'args_str': 'tmplabelif9_3', 'args': ['tmplabelif9_3'], 'file_path': '<system>', 'line_number': 135, 'strings': [[False, 'label tmplabelif9_3']], 'arg_strings': [[False, 'tmplabelif9_3']]}, {'str': 'label tmplabelif9_end', 'command': 'label', 'args_str': 'tmplabelif9_end', 'args': ['tmplabelif9_end'], 'file_path': '<system>', 'line_number': 135, 'strings': [[False, 'label tmplabelif9_end']], 'arg_strings': [[False, 'tmplabelif9_end']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 89, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif7_2', 'command': 'label', 'args_str': 'tmplabelif7_2', 'args': ['tmplabelif7_2'], 'file_path': '<system>', 'line_number': 138, 'strings': [[False, 'label tmplabelif7_2']], 'arg_strings': [[False, 'tmplabelif7_2']]}, {'str': 'label tmplabelif7_end', 'command': 'label', 'args_str': 'tmplabelif7_end', 'args': ['tmplabelif7_end'], 'file_path': '<system>', 'line_number': 138, 'strings': [[False, 'label tmplabelif7_end']], 'arg_strings': [[False, 'tmplabelif7_end']]}]
modules["hash"] = [{'str': 'namespace hash', 'command': 'namespace', 'args_str': 'hash', 'args': ['hash'], 'file_path': '@hash', 'line_number': 1, 'strings': [[False, 'namespace hash']], 'arg_strings': [[False, 'hash']]}, {'str': '@doc """    Calculates blake2b hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates blake2b hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'blake2b', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 2, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates blake2b hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates blake2b hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::blake2b(string $value)', 'command': 'func', 'args_str': 'string::blake2b(string $value)', 'args': ['string::blake2b(string', '$value)'], 'file_path': '@hash', 'line_number': 3, 'strings': [[False, 'func string::blake2b(string $value)']], 'arg_strings': [[False, 'string::blake2b(string $value)']]}, {'str': "py_load_module ('hashlib')->blake2b($value->encode())->hexdigest()", 'command': 'py_load_module', 'args_str': "('hashlib')->blake2b($value->encode())->hexdigest()", 'args': ["('hashlib')->blake2b($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 4, 'strings': [[False, 'py_load_module ('], [True, "'hashlib'"], [False, ')->blake2b($value->encode())->hexdigest()']], 'arg_strings': [[False, '('], [True, "'hashlib'"], [False, ')->blake2b($value->encode())->hexdigest()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 5, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates blake2s hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates blake2s hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'blake2s', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 6, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates blake2s hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates blake2s hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::blake2s(string $value)', 'command': 'func', 'args_str': 'string::blake2s(string $value)', 'args': ['string::blake2s(string', '$value)'], 'file_path': '@hash', 'line_number': 7, 'strings': [[False, 'func string::blake2s(string $value)']], 'arg_strings': [[False, 'string::blake2s(string $value)']]}, {'str': "return py_load_module('hashlib')->blake2s($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->blake2s($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->blake2s($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 8, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->blake2s($value->encode())->hexdigest()']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->blake2s($value->encode())->hexdigest()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 9, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates md5 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates md5 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'md5', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 10, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates md5 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates md5 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::md5(string $value)', 'command': 'func', 'args_str': 'string::md5(string $value)', 'args': ['string::md5(string', '$value)'], 'file_path': '@hash', 'line_number': 11, 'strings': [[False, 'func string::md5(string $value)']], 'arg_strings': [[False, 'string::md5(string $value)']]}, {'str': "return py_load_module('hashlib')->md5($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->md5($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->md5($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 12, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->md5($value->encode())->hexdigest()']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->md5($value->encode())->hexdigest()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 13, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates sha1 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha1 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha1', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 14, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha1 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates sha1 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::sha1(string $value)', 'command': 'func', 'args_str': 'string::sha1(string $value)', 'args': ['string::sha1(string', '$value)'], 'file_path': '@hash', 'line_number': 15, 'strings': [[False, 'func string::sha1(string $value)']], 'arg_strings': [[False, 'string::sha1(string $value)']]}, {'str': "return py_load_module('hashlib')->sha1($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha1($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha1($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 16, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha1($value->encode())->hexdigest()']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->sha1($value->encode())->hexdigest()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 17, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates sha224 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha224 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha224', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 18, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha224 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates sha224 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::sha224(string $value)', 'command': 'func', 'args_str': 'string::sha224(string $value)', 'args': ['string::sha224(string', '$value)'], 'file_path': '@hash', 'line_number': 19, 'strings': [[False, 'func string::sha224(string $value)']], 'arg_strings': [[False, 'string::sha224(string $value)']]}, {'str': "return py_load_module('hashlib')->sha224($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha224($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha224($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 20, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha224($value->encode())->hexdigest()']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->sha224($value->encode())->hexdigest()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 21, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates sha256 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha256 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha256', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 22, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha256 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates sha256 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::sha256(string $value)', 'command': 'func', 'args_str': 'string::sha256(string $value)', 'args': ['string::sha256(string', '$value)'], 'file_path': '@hash', 'line_number': 23, 'strings': [[False, 'func string::sha256(string $value)']], 'arg_strings': [[False, 'string::sha256(string $value)']]}, {'str': "return py_load_module('hashlib')->sha256($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha256($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha256($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 24, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha256($value->encode())->hexdigest()']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->sha256($value->encode())->hexdigest()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 25, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates sha384 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha384 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha384', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 26, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha384 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates sha384 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::sha384(string $value)', 'command': 'func', 'args_str': 'string::sha384(string $value)', 'args': ['string::sha384(string', '$value)'], 'file_path': '@hash', 'line_number': 27, 'strings': [[False, 'func string::sha384(string $value)']], 'arg_strings': [[False, 'string::sha384(string $value)']]}, {'str': "return py_load_module('hashlib')->sha384($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha384($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha384($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 28, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha384($value->encode())->hexdigest()']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->sha384($value->encode())->hexdigest()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 29, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates sha3_224 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha3_224 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha3_224', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 30, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha3_224 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates sha3_224 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::sha3_224(string $value)', 'command': 'func', 'args_str': 'string::sha3_224(string $value)', 'args': ['string::sha3_224(string', '$value)'], 'file_path': '@hash', 'line_number': 31, 'strings': [[False, 'func string::sha3_224(string $value)']], 'arg_strings': [[False, 'string::sha3_224(string $value)']]}, {'str': "return py_load_module('hashlib')->sha3_224($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha3_224($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha3_224($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 32, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha3_224($value->encode())->hexdigest()']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->sha3_224($value->encode())->hexdigest()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 33, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates sha3_256 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha3_256 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha3_256', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 34, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha3_256 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates sha3_256 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::sha3_256(string $value)', 'command': 'func', 'args_str': 'string::sha3_256(string $value)', 'args': ['string::sha3_256(string', '$value)'], 'file_path': '@hash', 'line_number': 35, 'strings': [[False, 'func string::sha3_256(string $value)']], 'arg_strings': [[False, 'string::sha3_256(string $value)']]}, {'str': "return py_load_module('hashlib')->sha3_256($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha3_256($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha3_256($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 36, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha3_256($value->encode())->hexdigest()']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->sha3_256($value->encode())->hexdigest()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 37, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates sha3_384 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha3_384 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha3_384', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 38, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha3_384 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates sha3_384 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::sha3_384(string $value)', 'command': 'func', 'args_str': 'string::sha3_384(string $value)', 'args': ['string::sha3_384(string', '$value)'], 'file_path': '@hash', 'line_number': 39, 'strings': [[False, 'func string::sha3_384(string $value)']], 'arg_strings': [[False, 'string::sha3_384(string $value)']]}, {'str': "return py_load_module('hashlib')->sha3_384($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha3_384($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha3_384($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 40, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha3_384($value->encode())->hexdigest()']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->sha3_384($value->encode())->hexdigest()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 41, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates sha3_512 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha3_512 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha3_512', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 42, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha3_512 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates sha3_512 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::sha3_512(string $value)', 'command': 'func', 'args_str': 'string::sha3_512(string $value)', 'args': ['string::sha3_512(string', '$value)'], 'file_path': '@hash', 'line_number': 43, 'strings': [[False, 'func string::sha3_512(string $value)']], 'arg_strings': [[False, 'string::sha3_512(string $value)']]}, {'str': "return py_load_module('hashlib')->sha3_512($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha3_512($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha3_512($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 44, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha3_512($value->encode())->hexdigest()']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->sha3_512($value->encode())->hexdigest()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 45, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates sha512 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha512 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha512', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 46, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha512 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates sha512 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::sha512(string $value)', 'command': 'func', 'args_str': 'string::sha512(string $value)', 'args': ['string::sha512(string', '$value)'], 'file_path': '@hash', 'line_number': 47, 'strings': [[False, 'func string::sha512(string $value)']], 'arg_strings': [[False, 'string::sha512(string $value)']]}, {'str': "return py_load_module('hashlib')->sha512($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha512($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha512($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 48, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha512($value->encode())->hexdigest()']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->sha512($value->encode())->hexdigest()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 49, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates shake_128 hash    \\n    Args:        0. value: value that you want to hash        1. length    """', 'command': '@doc', 'args_str': '"""    Calculates shake_128 hash    \\n    Args:        0. value: value that you want to hash        1. length    """', 'args': ['"""', 'Calculates', 'shake_128', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '1.', 'length', '"""'], 'file_path': '@hash', 'line_number': 50, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates shake_128 hash    \\n    Args:        0. value: value that you want to hash        1. length    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates shake_128 hash    \\n    Args:        0. value: value that you want to hash        1. length    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::shake_128(string $value, int $length)', 'command': 'func', 'args_str': 'string::shake_128(string $value, int $length)', 'args': ['string::shake_128(string', '$value,', 'int', '$length)'], 'file_path': '@hash', 'line_number': 51, 'strings': [[False, 'func string::shake_128(string $value, int $length)']], 'arg_strings': [[False, 'string::shake_128(string $value, int $length)']]}, {'str': "return py_load_module('hashlib')->shake_128(str($value).encode()).hexdigest($length)", 'command': 'return', 'args_str': "py_load_module('hashlib')->shake_128(str($value).encode()).hexdigest($length)", 'args': ["py_load_module('hashlib')->shake_128(str($value).encode()).hexdigest($length)"], 'file_path': '@hash', 'line_number': 52, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->shake_128(str($value).encode()).hexdigest($length)']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->shake_128(str($value).encode()).hexdigest($length)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 53, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Calculates shake_256 hash    \\n    Args:        0. value: value that you want to hash        1. length    """', 'command': '@doc', 'args_str': '"""    Calculates shake_256 hash    \\n    Args:        0. value: value that you want to hash        1. length    """', 'args': ['"""', 'Calculates', 'shake_256', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '1.', 'length', '"""'], 'file_path': '@hash', 'line_number': 54, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates shake_256 hash    \\n    Args:        0. value: value that you want to hash        1. length    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Calculates shake_256 hash    \\n    Args:        0. value: value that you want to hash        1. length    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::shake_256(string $value, int $length)', 'command': 'func', 'args_str': 'string::shake_256(string $value, int $length)', 'args': ['string::shake_256(string', '$value,', 'int', '$length)'], 'file_path': '@hash', 'line_number': 55, 'strings': [[False, 'func string::shake_256(string $value, int $length)']], 'arg_strings': [[False, 'string::shake_256(string $value, int $length)']]}, {'str': "return py_load_module('hashlib')->shake_256(str($value).encode()).hexdigest($length)", 'command': 'return', 'args_str': "py_load_module('hashlib')->shake_256(str($value).encode()).hexdigest($length)", 'args': ["py_load_module('hashlib')->shake_256(str($value).encode()).hexdigest($length)"], 'file_path': '@hash', 'line_number': 56, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->shake_256(str($value).encode()).hexdigest($length)']], 'arg_strings': [[False, 'py_load_module('], [True, "'hashlib'"], [False, ')->shake_256(str($value).encode()).hexdigest($length)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 57, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 58, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}]
modules["helloworld"] = [{'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@helloworld', 'line_number': 1, 'strings': [[False, 'if $__ismain__']], 'arg_strings': [[False, '$__ismain__']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'mem not ($__ismain__)']], 'arg_strings': [[False, 'not ($__ismain__)']]}, {'str': 'gotoif tmplabelif10_2', 'command': 'gotoif', 'args_str': 'tmplabelif10_2', 'args': ['tmplabelif10_2'], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'gotoif tmplabelif10_2']], 'arg_strings': [[False, 'tmplabelif10_2']]}, {'str': "println ('Hello world!')", 'command': 'println', 'args_str': "('Hello world!')", 'args': ["('Hello", "world!')"], 'file_path': '@helloworld', 'line_number': 2, 'strings': [[False, 'println ('], [True, "'Hello world!'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'Hello world!'"], [False, ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@helloworld', 'line_number': 3, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif10_2', 'command': 'label', 'args_str': 'tmplabelif10_2', 'args': ['tmplabelif10_2'], 'file_path': '<system>', 'line_number': 4, 'strings': [[False, 'label tmplabelif10_2']], 'arg_strings': [[False, 'tmplabelif10_2']]}, {'str': 'label tmplabelif10_end', 'command': 'label', 'args_str': 'tmplabelif10_end', 'args': ['tmplabelif10_end'], 'file_path': '<system>', 'line_number': 4, 'strings': [[False, 'label tmplabelif10_end']], 'arg_strings': [[False, 'tmplabelif10_end']]}]
modules["math"] = [{'str': 'ns math', 'command': 'ns', 'args_str': 'math', 'args': ['math'], 'file_path': '@math', 'line_number': 1, 'strings': [[False, 'ns math']], 'arg_strings': [[False, 'math']]}, {'str': '@doc """    Returns the arc cosine of a number. Recives a number between `1` and `-1`.    """', 'command': '@doc', 'args_str': '"""    Returns the arc cosine of a number. Recives a number between `1` and `-1`.    """', 'args': ['"""', 'Returns', 'the', 'arc', 'cosine', 'of', 'a', 'number.', 'Recives', 'a', 'number', 'between', '`1`', 'and', '`-1`.', '"""'], 'file_path': '@math', 'line_number': 2, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns the arc cosine of a number. Recives a number between `1` and `-1`.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Returns the arc cosine of a number. Recives a number between `1` and `-1`.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func acos($num)', 'command': 'func', 'args_str': 'acos($num)', 'args': ['acos($num)'], 'file_path': '@math', 'line_number': 3, 'strings': [[False, 'func acos($num)']], 'arg_strings': [[False, 'acos($num)']]}, {'str': "return py_load_module('math')->acos($num)", 'command': 'return', 'args_str': "py_load_module('math')->acos($num)", 'args': ["py_load_module('math')->acos($num)"], 'file_path': '@math', 'line_number': 4, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->acos($num)']], 'arg_strings': [[False, 'py_load_module('], [True, "'math'"], [False, ')->acos($num)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 5, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Returns the inverse hyperbolic cosine of a number.    """', 'command': '@doc', 'args_str': '"""    Returns the inverse hyperbolic cosine of a number.    """', 'args': ['"""', 'Returns', 'the', 'inverse', 'hyperbolic', 'cosine', 'of', 'a', 'number.', '"""'], 'file_path': '@math', 'line_number': 6, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns the inverse hyperbolic cosine of a number.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Returns the inverse hyperbolic cosine of a number.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func acosh($num)', 'command': 'func', 'args_str': 'acosh($num)', 'args': ['acosh($num)'], 'file_path': '@math', 'line_number': 7, 'strings': [[False, 'func acosh($num)']], 'arg_strings': [[False, 'acosh($num)']]}, {'str': "return py_load_module('math')->acosh($num)", 'command': 'return', 'args_str': "py_load_module('math')->acosh($num)", 'args': ["py_load_module('math')->acosh($num)"], 'file_path': '@math', 'line_number': 8, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->acosh($num)']], 'arg_strings': [[False, 'py_load_module('], [True, "'math'"], [False, ')->acosh($num)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 9, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Rounds a number upward to its nearest integer.    """', 'command': '@doc', 'args_str': '"""    Rounds a number upward to its nearest integer.    """', 'args': ['"""', 'Rounds', 'a', 'number', 'upward', 'to', 'its', 'nearest', 'integer.', '"""'], 'file_path': '@math', 'line_number': 10, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Rounds a number upward to its nearest integer.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Rounds a number upward to its nearest integer.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func ceil($num)', 'command': 'func', 'args_str': 'ceil($num)', 'args': ['ceil($num)'], 'file_path': '@math', 'line_number': 11, 'strings': [[False, 'func ceil($num)']], 'arg_strings': [[False, 'ceil($num)']]}, {'str': "return py_load_module('math')->ceil($num)", 'command': 'return', 'args_str': "py_load_module('math')->ceil($num)", 'args': ["py_load_module('math')->ceil($num)"], 'file_path': '@math', 'line_number': 12, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->ceil($num)']], 'arg_strings': [[False, 'py_load_module('], [True, "'math'"], [False, ')->ceil($num)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 13, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Finds the cosine of a number.    """', 'command': '@doc', 'args_str': '"""    Finds the cosine of a number.    """', 'args': ['"""', 'Finds', 'the', 'cosine', 'of', 'a', 'number.', '"""'], 'file_path': '@math', 'line_number': 14, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Finds the cosine of a number.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Finds the cosine of a number.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func cos($num)', 'command': 'func', 'args_str': 'cos($num)', 'args': ['cos($num)'], 'file_path': '@math', 'line_number': 15, 'strings': [[False, 'func cos($num)']], 'arg_strings': [[False, 'cos($num)']]}, {'str': "return py_load_module('math')->cos($num)", 'command': 'return', 'args_str': "py_load_module('math')->cos($num)", 'args': ["py_load_module('math')->cos($num)"], 'file_path': '@math', 'line_number': 16, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->cos($num)']], 'arg_strings': [[False, 'py_load_module('], [True, "'math'"], [False, ')->cos($num)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 17, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Converts angles from radians to degrees.    """', 'command': '@doc', 'args_str': '"""    Converts angles from radians to degrees.    """', 'args': ['"""', 'Converts', 'angles', 'from', 'radians', 'to', 'degrees.', '"""'], 'file_path': '@math', 'line_number': 18, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Converts angles from radians to degrees.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Converts angles from radians to degrees.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func degrees($num)', 'command': 'func', 'args_str': 'degrees($num)', 'args': ['degrees($num)'], 'file_path': '@math', 'line_number': 19, 'strings': [[False, 'func degrees($num)']], 'arg_strings': [[False, 'degrees($num)']]}, {'str': "return py_load_module('math')->degrees($num)", 'command': 'return', 'args_str': "py_load_module('math')->degrees($num)", 'args': ["py_load_module('math')->degrees($num)"], 'file_path': '@math', 'line_number': 20, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->degrees($num)']], 'arg_strings': [[False, 'py_load_module('], [True, "'math'"], [False, ')->degrees($num)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 21, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Finds the factorial of a number.    """', 'command': '@doc', 'args_str': '"""    Finds the factorial of a number.    """', 'args': ['"""', 'Finds', 'the', 'factorial', 'of', 'a', 'number.', '"""'], 'file_path': '@math', 'line_number': 22, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Finds the factorial of a number.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Finds the factorial of a number.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func factorial($num)', 'command': 'func', 'args_str': 'factorial($num)', 'args': ['factorial($num)'], 'file_path': '@math', 'line_number': 23, 'strings': [[False, 'func factorial($num)']], 'arg_strings': [[False, 'factorial($num)']]}, {'str': "return py_load_module('math')->factorial($num)", 'command': 'return', 'args_str': "py_load_module('math')->factorial($num)", 'args': ["py_load_module('math')->factorial($num)"], 'file_path': '@math', 'line_number': 24, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->factorial($num)']], 'arg_strings': [[False, 'py_load_module('], [True, "'math'"], [False, ')->factorial($num)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 25, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Rounds numbers down to the nearest integer.    """', 'command': '@doc', 'args_str': '"""    Rounds numbers down to the nearest integer.    """', 'args': ['"""', 'Rounds', 'numbers', 'down', 'to', 'the', 'nearest', 'integer.', '"""'], 'file_path': '@math', 'line_number': 26, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Rounds numbers down to the nearest integer.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Rounds numbers down to the nearest integer.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func floor($num)', 'command': 'func', 'args_str': 'floor($num)', 'args': ['floor($num)'], 'file_path': '@math', 'line_number': 27, 'strings': [[False, 'func floor($num)']], 'arg_strings': [[False, 'floor($num)']]}, {'str': "return py_load_module('math')->floor($num)", 'command': 'return', 'args_str': "py_load_module('math')->floor($num)", 'args': ["py_load_module('math')->floor($num)"], 'file_path': '@math', 'line_number': 28, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->floor($num)']], 'arg_strings': [[False, 'py_load_module('], [True, "'math'"], [False, ')->floor($num)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 29, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': "$pi = py_load_module('math')->pi", 'command': '$pi', 'args_str': "= py_load_module('math')->pi", 'args': ['=', "py_load_module('math')->pi"], 'file_path': '@math', 'line_number': 30, 'strings': [[False, '$pi = py_load_module('], [True, "'math'"], [False, ')->pi']], 'arg_strings': [[False, '= py_load_module('], [True, "'math'"], [False, ')->pi']]}, {'str': '@doc """    Finds the value of x raised to the power of y.\\n    Example: math.pow(9, 3)    """', 'command': '@doc', 'args_str': '"""    Finds the value of x raised to the power of y.\\n    Example: math.pow(9, 3)    """', 'args': ['"""', 'Finds', 'the', 'value', 'of', 'x', 'raised', 'to', 'the', 'power', 'of', 'y.\\n', 'Example:', 'math.pow(9,', '3)', '"""'], 'file_path': '@math', 'line_number': 31, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Finds the value of x raised to the power of y.\\n    Example: math.pow(9, 3)    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Finds the value of x raised to the power of y.\\n    Example: math.pow(9, 3)    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func pow($num, $nextnum)', 'command': 'func', 'args_str': 'pow($num, $nextnum)', 'args': ['pow($num,', '$nextnum)'], 'file_path': '@math', 'line_number': 32, 'strings': [[False, 'func pow($num, $nextnum)']], 'arg_strings': [[False, 'pow($num, $nextnum)']]}, {'str': "return py_load_module('math')->pow($num, self.get_var('nextnum'))", 'command': 'return', 'args_str': "py_load_module('math')->pow($num, self.get_var('nextnum'))", 'args': ["py_load_module('math')->pow($num,", "self.get_var('nextnum'))"], 'file_path': '@math', 'line_number': 33, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->pow($num, self.get_var('], [True, "'nextnum'"], [False, '))']], 'arg_strings': [[False, 'py_load_module('], [True, "'math'"], [False, ')->pow($num, self.get_var('], [True, "'nextnum'"], [False, '))']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 34, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Finds the sine of a number.    """', 'command': '@doc', 'args_str': '"""    Finds the sine of a number.    """', 'args': ['"""', 'Finds', 'the', 'sine', 'of', 'a', 'number.', '"""'], 'file_path': '@math', 'line_number': 35, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Finds the sine of a number.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Finds the sine of a number.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func sin($num)', 'command': 'func', 'args_str': 'sin($num)', 'args': ['sin($num)'], 'file_path': '@math', 'line_number': 36, 'strings': [[False, 'func sin($num)']], 'arg_strings': [[False, 'sin($num)']]}, {'str': "return py_load_module('math')->sin($num)", 'command': 'return', 'args_str': "py_load_module('math')->sin($num)", 'args': ["py_load_module('math')->sin($num)"], 'file_path': '@math', 'line_number': 37, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->sin($num)']], 'arg_strings': [[False, 'py_load_module('], [True, "'math'"], [False, ')->sin($num)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 38, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Finds the tangent of a number (angle).    """', 'command': '@doc', 'args_str': '"""    Finds the tangent of a number (angle).    """', 'args': ['"""', 'Finds', 'the', 'tangent', 'of', 'a', 'number', '(angle).', '"""'], 'file_path': '@math', 'line_number': 39, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Finds the tangent of a number (angle).    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Finds the tangent of a number (angle).    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func tan($num)', 'command': 'func', 'args_str': 'tan($num)', 'args': ['tan($num)'], 'file_path': '@math', 'line_number': 40, 'strings': [[False, 'func tan($num)']], 'arg_strings': [[False, 'tan($num)']]}, {'str': "return py_load_module('math')->tan($num)", 'command': 'return', 'args_str': "py_load_module('math')->tan($num)", 'args': ["py_load_module('math')->tan($num)"], 'file_path': '@math', 'line_number': 41, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->tan($num)']], 'arg_strings': [[False, 'py_load_module('], [True, "'math'"], [False, ')->tan($num)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 42, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 43, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}]
modules["os"] = [{'str': 'namespace os', 'command': 'namespace', 'args_str': 'os', 'args': ['os'], 'file_path': '@os', 'line_number': 1, 'strings': [[False, 'namespace os']], 'arg_strings': [[False, 'os']]}, {'str': "$env = py_load_module('os')->environ", 'command': '$env', 'args_str': "= py_load_module('os')->environ", 'args': ['=', "py_load_module('os')->environ"], 'file_path': '@os', 'line_number': 2, 'strings': [[False, '$env = py_load_module('], [True, "'os'"], [False, ')->environ']], 'arg_strings': [[False, '= py_load_module('], [True, "'os'"], [False, ')->environ']]}, {'str': '@doc """    Changes program working directory to new path.\\n    Gets path as string.    """', 'command': '@doc', 'args_str': '"""    Changes program working directory to new path.\\n    Gets path as string.    """', 'args': ['"""', 'Changes', 'program', 'working', 'directory', 'to', 'new', 'path.\\n', 'Gets', 'path', 'as', 'string.', '"""'], 'file_path': '@os', 'line_number': 3, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Changes program working directory to new path.\\n    Gets path as string.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Changes program working directory to new path.\\n    Gets path as string.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func chdir(string $dirpath)', 'command': 'func', 'args_str': 'chdir(string $dirpath)', 'args': ['chdir(string', '$dirpath)'], 'file_path': '@os', 'line_number': 4, 'strings': [[False, 'func chdir(string $dirpath)']], 'arg_strings': [[False, 'chdir(string $dirpath)']]}, {'str': "py_load_module ('os')->chdir($dirpath)", 'command': 'py_load_module', 'args_str': "('os')->chdir($dirpath)", 'args': ["('os')->chdir($dirpath)"], 'file_path': '@os', 'line_number': 5, 'strings': [[False, 'py_load_module ('], [True, "'os'"], [False, ')->chdir($dirpath)']], 'arg_strings': [[False, '('], [True, "'os'"], [False, ')->chdir($dirpath)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 6, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Returns CPU count.    """', 'command': '@doc', 'args_str': '"""    Returns CPU count.    """', 'args': ['"""', 'Returns', 'CPU', 'count.', '"""'], 'file_path': '@os', 'line_number': 7, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns CPU count.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Returns CPU count.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func cpu_count()', 'command': 'func', 'args_str': 'cpu_count()', 'args': ['cpu_count()'], 'file_path': '@os', 'line_number': 8, 'strings': [[False, 'func cpu_count()']], 'arg_strings': [[False, 'cpu_count()']]}, {'str': "return py_load_module('os')->cpu_count()", 'command': 'return', 'args_str': "py_load_module('os')->cpu_count()", 'args': ["py_load_module('os')->cpu_count()"], 'file_path': '@os', 'line_number': 9, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->cpu_count()']], 'arg_strings': [[False, 'py_load_module('], [True, "'os'"], [False, ')->cpu_count()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 10, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Makes a directory.\\n    Gets directory path as string.    """', 'command': '@doc', 'args_str': '"""    Makes a directory.\\n    Gets directory path as string.    """', 'args': ['"""', 'Makes', 'a', 'directory.\\n', 'Gets', 'directory', 'path', 'as', 'string.', '"""'], 'file_path': '@os', 'line_number': 11, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Makes a directory.\\n    Gets directory path as string.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Makes a directory.\\n    Gets directory path as string.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func mkdir(string $dirpath)', 'command': 'func', 'args_str': 'mkdir(string $dirpath)', 'args': ['mkdir(string', '$dirpath)'], 'file_path': '@os', 'line_number': 12, 'strings': [[False, 'func mkdir(string $dirpath)']], 'arg_strings': [[False, 'mkdir(string $dirpath)']]}, {'str': "py_load_module ('os')->mkdir($dirpath)", 'command': 'py_load_module', 'args_str': "('os')->mkdir($dirpath)", 'args': ["('os')->mkdir($dirpath)"], 'file_path': '@os', 'line_number': 13, 'strings': [[False, 'py_load_module ('], [True, "'os'"], [False, ')->mkdir($dirpath)']], 'arg_strings': [[False, '('], [True, "'os'"], [False, ')->mkdir($dirpath)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 14, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': "$curdir = py_load_module('os')->curdir", 'command': '$curdir', 'args_str': "= py_load_module('os')->curdir", 'args': ['=', "py_load_module('os')->curdir"], 'file_path': '@os', 'line_number': 15, 'strings': [[False, '$curdir = py_load_module('], [True, "'os'"], [False, ')->curdir']], 'arg_strings': [[False, '= py_load_module('], [True, "'os'"], [False, ')->curdir']]}, {'str': '@doc """    Kills a process.\\n    First argument is process ID as int.\\n    Second argument is the signal.    """', 'command': '@doc', 'args_str': '"""    Kills a process.\\n    First argument is process ID as int.\\n    Second argument is the signal.    """', 'args': ['"""', 'Kills', 'a', 'process.\\n', 'First', 'argument', 'is', 'process', 'ID', 'as', 'int.\\n', 'Second', 'argument', 'is', 'the', 'signal.', '"""'], 'file_path': '@os', 'line_number': 16, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Kills a process.\\n    First argument is process ID as int.\\n    Second argument is the signal.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Kills a process.\\n    First argument is process ID as int.\\n    Second argument is the signal.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func kill(int $pid, int $signal=1)', 'command': 'func', 'args_str': 'kill(int $pid, int $signal=1)', 'args': ['kill(int', '$pid,', 'int', '$signal=1)'], 'file_path': '@os', 'line_number': 17, 'strings': [[False, 'func kill(int $pid, int $signal=1)']], 'arg_strings': [[False, 'kill(int $pid, int $signal=1)']]}, {'str': "return py_load_module('os')->kill($pid, $signal)", 'command': 'return', 'args_str': "py_load_module('os')->kill($pid, $signal)", 'args': ["py_load_module('os')->kill($pid,", '$signal)'], 'file_path': '@os', 'line_number': 18, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->kill($pid, $signal)']], 'arg_strings': [[False, 'py_load_module('], [True, "'os'"], [False, ')->kill($pid, $signal)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 19, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Removes a directory.\\n    Gets directory path as string.    """', 'command': '@doc', 'args_str': '"""    Removes a directory.\\n    Gets directory path as string.    """', 'args': ['"""', 'Removes', 'a', 'directory.\\n', 'Gets', 'directory', 'path', 'as', 'string.', '"""'], 'file_path': '@os', 'line_number': 20, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Removes a directory.\\n    Gets directory path as string.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Removes a directory.\\n    Gets directory path as string.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func rmdir(string $dirpath)', 'command': 'func', 'args_str': 'rmdir(string $dirpath)', 'args': ['rmdir(string', '$dirpath)'], 'file_path': '@os', 'line_number': 21, 'strings': [[False, 'func rmdir(string $dirpath)']], 'arg_strings': [[False, 'rmdir(string $dirpath)']]}, {'str': "return py_load_module('os')->rmdir($dirpath)", 'command': 'return', 'args_str': "py_load_module('os')->rmdir($dirpath)", 'args': ["py_load_module('os')->rmdir($dirpath)"], 'file_path': '@os', 'line_number': 22, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->rmdir($dirpath)']], 'arg_strings': [[False, 'py_load_module('], [True, "'os'"], [False, ')->rmdir($dirpath)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 23, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': "$osname = py_load_module('os')->name", 'command': '$osname', 'args_str': "= py_load_module('os')->name", 'args': ['=', "py_load_module('os')->name"], 'file_path': '@os', 'line_number': 24, 'strings': [[False, '$osname = py_load_module('], [True, "'os'"], [False, ')->name']], 'arg_strings': [[False, '= py_load_module('], [True, "'os'"], [False, ')->name']]}, {'str': "$pardir = py_load_module('os')->path->pardir", 'command': '$pardir', 'args_str': "= py_load_module('os')->path->pardir", 'args': ['=', "py_load_module('os')->path->pardir"], 'file_path': '@os', 'line_number': 25, 'strings': [[False, '$pardir = py_load_module('], [True, "'os'"], [False, ')->path->pardir']], 'arg_strings': [[False, '= py_load_module('], [True, "'os'"], [False, ')->path->pardir']]}, {'str': '@doc """    Checks is a path directory.\\n    Gets path as string.\\n    Returns Boolean.\\n    """', 'command': '@doc', 'args_str': '"""    Checks is a path directory.\\n    Gets path as string.\\n    Returns Boolean.\\n    """', 'args': ['"""', 'Checks', 'is', 'a', 'path', 'directory.\\n', 'Gets', 'path', 'as', 'string.\\n', 'Returns', 'Boolean.\\n', '"""'], 'file_path': '@os', 'line_number': 26, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Checks is a path directory.\\n    Gets path as string.\\n    Returns Boolean.\\n    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Checks is a path directory.\\n    Gets path as string.\\n    Returns Boolean.\\n    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func bool::isdir(string $dirpath)', 'command': 'func', 'args_str': 'bool::isdir(string $dirpath)', 'args': ['bool::isdir(string', '$dirpath)'], 'file_path': '@os', 'line_number': 27, 'strings': [[False, 'func bool::isdir(string $dirpath)']], 'arg_strings': [[False, 'bool::isdir(string $dirpath)']]}, {'str': "return py_load_module('os')->path->isdir($dirpath)", 'command': 'return', 'args_str': "py_load_module('os')->path->isdir($dirpath)", 'args': ["py_load_module('os')->path->isdir($dirpath)"], 'file_path': '@os', 'line_number': 28, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->path->isdir($dirpath)']], 'arg_strings': [[False, 'py_load_module('], [True, "'os'"], [False, ')->path->isdir($dirpath)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 29, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Checks is a path file.\\n    Gets path as string.\\n    Returns Boolean.\\n    """', 'command': '@doc', 'args_str': '"""    Checks is a path file.\\n    Gets path as string.\\n    Returns Boolean.\\n    """', 'args': ['"""', 'Checks', 'is', 'a', 'path', 'file.\\n', 'Gets', 'path', 'as', 'string.\\n', 'Returns', 'Boolean.\\n', '"""'], 'file_path': '@os', 'line_number': 30, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Checks is a path file.\\n    Gets path as string.\\n    Returns Boolean.\\n    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Checks is a path file.\\n    Gets path as string.\\n    Returns Boolean.\\n    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func bool::isfile(string $path)', 'command': 'func', 'args_str': 'bool::isfile(string $path)', 'args': ['bool::isfile(string', '$path)'], 'file_path': '@os', 'line_number': 31, 'strings': [[False, 'func bool::isfile(string $path)']], 'arg_strings': [[False, 'bool::isfile(string $path)']]}, {'str': "return py_load_module('os')->path->isfile($path)", 'command': 'return', 'args_str': "py_load_module('os')->path->isfile($path)", 'args': ["py_load_module('os')->path->isfile($path)"], 'file_path': '@os', 'line_number': 32, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->path->isfile($path)']], 'arg_strings': [[False, 'py_load_module('], [True, "'os'"], [False, ')->path->isfile($path)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 33, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Checks a path exists.\\n    Gets path as string.\\n    Returns Boolean.    """', 'command': '@doc', 'args_str': '"""    Checks a path exists.\\n    Gets path as string.\\n    Returns Boolean.    """', 'args': ['"""', 'Checks', 'a', 'path', 'exists.\\n', 'Gets', 'path', 'as', 'string.\\n', 'Returns', 'Boolean.', '"""'], 'file_path': '@os', 'line_number': 34, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Checks a path exists.\\n    Gets path as string.\\n    Returns Boolean.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Checks a path exists.\\n    Gets path as string.\\n    Returns Boolean.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func bool::exists(string $path)', 'command': 'func', 'args_str': 'bool::exists(string $path)', 'args': ['bool::exists(string', '$path)'], 'file_path': '@os', 'line_number': 35, 'strings': [[False, 'func bool::exists(string $path)']], 'arg_strings': [[False, 'bool::exists(string $path)']]}, {'str': "return py_load_module('os')->path->exists($path)", 'command': 'return', 'args_str': "py_load_module('os')->path->exists($path)", 'args': ["py_load_module('os')->path->exists($path)"], 'file_path': '@os', 'line_number': 36, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->path->exists($path)']], 'arg_strings': [[False, 'py_load_module('], [True, "'os'"], [False, ')->path->exists($path)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 37, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Returns program current working directory as string.    """', 'command': '@doc', 'args_str': '"""    Returns program current working directory as string.    """', 'args': ['"""', 'Returns', 'program', 'current', 'working', 'directory', 'as', 'string.', '"""'], 'file_path': '@os', 'line_number': 38, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns program current working directory as string.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Returns program current working directory as string.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::cwd()', 'command': 'func', 'args_str': 'string::cwd()', 'args': ['string::cwd()'], 'file_path': '@os', 'line_number': 39, 'strings': [[False, 'func string::cwd()']], 'arg_strings': [[False, 'string::cwd()']]}, {'str': "return py_load_module('os')->getcwd()", 'command': 'return', 'args_str': "py_load_module('os')->getcwd()", 'args': ["py_load_module('os')->getcwd()"], 'file_path': '@os', 'line_number': 40, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->getcwd()']], 'arg_strings': [[False, 'py_load_module('], [True, "'os'"], [False, ')->getcwd()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 41, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endnamespace ', 'command': 'endnamespace', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 42, 'strings': [[False, 'endnamespace']], 'arg_strings': [[False, '']]}]
modules["pit"] = [{'str': 'namespace pit', 'command': 'namespace', 'args_str': 'pit', 'args': ['pit'], 'file_path': '@pit', 'line_number': 1, 'strings': [[False, 'namespace pit']], 'arg_strings': [[False, 'pit']]}, {'str': 'func include(string $path, dict $htmldata={})', 'command': 'func', 'args_str': 'include(string $path, dict $htmldata={})', 'args': ['include(string', '$path,', 'dict', '$htmldata={})'], 'file_path': '@pit', 'line_number': 2, 'strings': [[False, 'func include(string $path, dict $htmldata={})']], 'arg_strings': [[False, 'include(string $path, dict $htmldata={})']]}, {'str': 'run_file ($path, True, $htmldata)', 'command': 'run_file', 'args_str': '($path, True, $htmldata)', 'args': ['($path,', 'True,', '$htmldata)'], 'file_path': '@pit', 'line_number': 3, 'strings': [[False, 'run_file ($path, True, $htmldata)']], 'arg_strings': [[False, '($path, True, $htmldata)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 4, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func run_file(string $path, bool $realtime_run=true, dict $htmldata={})', 'command': 'func', 'args_str': 'run_file(string $path, bool $realtime_run=true, dict $htmldata={})', 'args': ['run_file(string', '$path,', 'bool', '$realtime_run=true,', 'dict', '$htmldata={})'], 'file_path': '@pit', 'line_number': 5, 'strings': [[False, 'func run_file(string $path, bool $realtime_run=true, dict $htmldata={})']], 'arg_strings': [[False, 'run_file(string $path, bool $realtime_run=true, dict $htmldata={})']]}, {'str': "$f = fopen($path, 'r')", 'command': '$f', 'args_str': "= fopen($path, 'r')", 'args': ['=', 'fopen($path,', "'r')"], 'file_path': '@pit', 'line_number': 6, 'strings': [[False, '$f = fopen($path, '], [True, "'r'"], [False, ')']], 'arg_strings': [[False, '= fopen($path, '], [True, "'r'"], [False, ')']]}, {'str': '$content = $f->read()', 'command': '$content', 'args_str': '= $f->read()', 'args': ['=', '$f->read()'], 'file_path': '@pit', 'line_number': 7, 'strings': [[False, '$content = $f->read()']], 'arg_strings': [[False, '= $f->read()']]}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@pit', 'line_number': 8, 'strings': [[False, '$f->close ()']], 'arg_strings': [[False, '()']]}, {'str': 'return run($content, $realtime_run, $path, $htmldata)', 'command': 'return', 'args_str': 'run($content, $realtime_run, $path, $htmldata)', 'args': ['run($content,', '$realtime_run,', '$path,', '$htmldata)'], 'file_path': '@pit', 'line_number': 9, 'strings': [[False, 'return run($content, $realtime_run, $path, $htmldata)']], 'arg_strings': [[False, 'run($content, $realtime_run, $path, $htmldata)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 10, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func run(string $content, bool $realtime_run=false, string $path=null, dict $htmldata={})', 'command': 'func', 'args_str': 'run(string $content, bool $realtime_run=false, string $path=null, dict $htmldata={})', 'args': ['run(string', '$content,', 'bool', '$realtime_run=false,', 'string', '$path=null,', 'dict', '$htmldata={})'], 'file_path': '@pit', 'line_number': 11, 'strings': [[False, 'func run(string $content, bool $realtime_run=false, string $path=null, dict $htmldata={})']], 'arg_strings': [[False, 'run(string $content, bool $realtime_run=false, string $path=null, dict $htmldata={})']]}, {'str': '$__htmldir__ = $__dir__', 'command': '$__htmldir__', 'args_str': '= $__dir__', 'args': ['=', '$__dir__'], 'file_path': '@pit', 'line_number': 12, 'strings': [[False, '$__htmldir__ = $__dir__']], 'arg_strings': [[False, '= $__dir__']]}, {'str': "$__htmlfile__ = $__htmldir__ + '/-'", 'command': '$__htmlfile__', 'args_str': "= $__htmldir__ + '/-'", 'args': ['=', '$__htmldir__', '+', "'/-'"], 'file_path': '@pit', 'line_number': 13, 'strings': [[False, '$__htmlfile__ = $__htmldir__ + '], [True, "'/-'"], [False, '']], 'arg_strings': [[False, '= $__htmldir__ + '], [True, "'/-'"], [False, '']]}, {'str': "$content = $content->split('\\n', 1)", 'command': '$content', 'args_str': "= $content->split('\\n', 1)", 'args': ['=', "$content->split('\\n',", '1)'], 'file_path': '@pit', 'line_number': 14, 'strings': [[False, '$content = $content->split('], [True, "'\\n'"], [False, ', 1)']], 'arg_strings': [[False, '= $content->split('], [True, "'\\n'"], [False, ', 1)']]}, {'str': 'if len($content) > 1', 'command': 'if', 'args_str': 'len($content) > 1', 'args': ['len($content)', '>', '1'], 'file_path': '@pit', 'line_number': 15, 'strings': [[False, 'if len($content) > 1']], 'arg_strings': [[False, 'len($content) > 1']]}, {'str': 'mem not (len($content) > 1)', 'command': 'mem', 'args_str': 'not (len($content) > 1)', 'args': ['not', '(len($content)', '>', '1)'], 'file_path': '<system>', 'line_number': 14, 'strings': [[False, 'mem not (len($content) > 1)']], 'arg_strings': [[False, 'not (len($content) > 1)']]}, {'str': 'gotoif tmplabelif11_2', 'command': 'gotoif', 'args_str': 'tmplabelif11_2', 'args': ['tmplabelif11_2'], 'file_path': '<system>', 'line_number': 14, 'strings': [[False, 'gotoif tmplabelif11_2']], 'arg_strings': [[False, 'tmplabelif11_2']]}, {'str': "if $content[0]->startswith('#!/')", 'command': 'if', 'args_str': "$content[0]->startswith('#!/')", 'args': ["$content[0]->startswith('#!/')"], 'file_path': '@pit', 'line_number': 16, 'strings': [[False, 'if $content[0]->startswith('], [True, "'#!/'"], [False, ')']], 'arg_strings': [[False, '$content[0]->startswith('], [True, "'#!/'"], [False, ')']]}, {'str': "mem not ($content[0]->startswith('#!/'))", 'command': 'mem', 'args_str': "not ($content[0]->startswith('#!/'))", 'args': ['not', "($content[0]->startswith('#!/'))"], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'mem not ($content[0]->startswith('], [True, "'#!/'"], [False, '))']], 'arg_strings': [[False, 'not ($content[0]->startswith('], [True, "'#!/'"], [False, '))']]}, {'str': 'gotoif tmplabelif12_2', 'command': 'gotoif', 'args_str': 'tmplabelif12_2', 'args': ['tmplabelif12_2'], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'gotoif tmplabelif12_2']], 'arg_strings': [[False, 'tmplabelif12_2']]}, {'str': '$content = $content[1]', 'command': '$content', 'args_str': '= $content[1]', 'args': ['=', '$content[1]'], 'file_path': '@pit', 'line_number': 17, 'strings': [[False, '$content = $content[1]']], 'arg_strings': [[False, '= $content[1]']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 18, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif12_end', 'command': 'goto', 'args_str': 'tmplabelif12_end', 'args': ['tmplabelif12_end'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'goto tmplabelif12_end']], 'arg_strings': [[False, 'tmplabelif12_end']]}, {'str': 'label tmplabelif12_2', 'command': 'label', 'args_str': 'tmplabelif12_2', 'args': ['tmplabelif12_2'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'label tmplabelif12_2']], 'arg_strings': [[False, 'tmplabelif12_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif12_3', 'command': 'gotoif', 'args_str': 'tmplabelif12_3', 'args': ['tmplabelif12_3'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'gotoif tmplabelif12_3']], 'arg_strings': [[False, 'tmplabelif12_3']]}, {'str': "$content = '\\n'->join($content)", 'command': '$content', 'args_str': "= '\\n'->join($content)", 'args': ['=', "'\\n'->join($content)"], 'file_path': '@pit', 'line_number': 19, 'strings': [[False, '$content = '], [True, "'\\n'"], [False, '->join($content)']], 'arg_strings': [[False, '= '], [True, "'\\n'"], [False, '->join($content)']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 20, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif12_3', 'command': 'label', 'args_str': 'tmplabelif12_3', 'args': ['tmplabelif12_3'], 'file_path': '<system>', 'line_number': 27, 'strings': [[False, 'label tmplabelif12_3']], 'arg_strings': [[False, 'tmplabelif12_3']]}, {'str': 'label tmplabelif12_end', 'command': 'label', 'args_str': 'tmplabelif12_end', 'args': ['tmplabelif12_end'], 'file_path': '<system>', 'line_number': 27, 'strings': [[False, 'label tmplabelif12_end']], 'arg_strings': [[False, 'tmplabelif12_end']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 21, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif11_end', 'command': 'goto', 'args_str': 'tmplabelif11_end', 'args': ['tmplabelif11_end'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'goto tmplabelif11_end']], 'arg_strings': [[False, 'tmplabelif11_end']]}, {'str': 'label tmplabelif11_2', 'command': 'label', 'args_str': 'tmplabelif11_2', 'args': ['tmplabelif11_2'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'label tmplabelif11_2']], 'arg_strings': [[False, 'tmplabelif11_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif11_3', 'command': 'gotoif', 'args_str': 'tmplabelif11_3', 'args': ['tmplabelif11_3'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'gotoif tmplabelif11_3']], 'arg_strings': [[False, 'tmplabelif11_3']]}, {'str': '$content = $content[0]', 'command': '$content', 'args_str': '= $content[0]', 'args': ['=', '$content[0]'], 'file_path': '@pit', 'line_number': 22, 'strings': [[False, '$content = $content[0]']], 'arg_strings': [[False, '= $content[0]']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 23, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif11_3', 'command': 'label', 'args_str': 'tmplabelif11_3', 'args': ['tmplabelif11_3'], 'file_path': '<system>', 'line_number': 36, 'strings': [[False, 'label tmplabelif11_3']], 'arg_strings': [[False, 'tmplabelif11_3']]}, {'str': 'label tmplabelif11_end', 'command': 'label', 'args_str': 'tmplabelif11_end', 'args': ['tmplabelif11_end'], 'file_path': '<system>', 'line_number': 36, 'strings': [[False, 'label tmplabelif11_end']], 'arg_strings': [[False, 'tmplabelif11_end']]}, {'str': 'if $path != null', 'command': 'if', 'args_str': '$path != null', 'args': ['$path', '!=', 'null'], 'file_path': '@pit', 'line_number': 24, 'strings': [[False, 'if $path != null']], 'arg_strings': [[False, '$path != null']]}, {'str': 'mem not ($path != null)', 'command': 'mem', 'args_str': 'not ($path != null)', 'args': ['not', '($path', '!=', 'null)'], 'file_path': '<system>', 'line_number': 39, 'strings': [[False, 'mem not ($path != null)']], 'arg_strings': [[False, 'not ($path != null)']]}, {'str': 'gotoif tmplabelif13_2', 'command': 'gotoif', 'args_str': 'tmplabelif13_2', 'args': ['tmplabelif13_2'], 'file_path': '<system>', 'line_number': 39, 'strings': [[False, 'gotoif tmplabelif13_2']], 'arg_strings': [[False, 'tmplabelif13_2']]}, {'str': '$__htmlfile__ = os.path.abspath($path)', 'command': '$__htmlfile__', 'args_str': '= os.path.abspath($path)', 'args': ['=', 'os.path.abspath($path)'], 'file_path': '@pit', 'line_number': 25, 'strings': [[False, '$__htmlfile__ = os.path.abspath($path)']], 'arg_strings': [[False, '= os.path.abspath($path)']]}, {'str': '$__htmldir__ = os.path.dirname($__htmlfile__)', 'command': '$__htmldir__', 'args_str': '= os.path.dirname($__htmlfile__)', 'args': ['=', 'os.path.dirname($__htmlfile__)'], 'file_path': '@pit', 'line_number': 26, 'strings': [[False, '$__htmldir__ = os.path.dirname($__htmlfile__)']], 'arg_strings': [[False, '= os.path.dirname($__htmlfile__)']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 27, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif13_2', 'command': 'label', 'args_str': 'tmplabelif13_2', 'args': ['tmplabelif13_2'], 'file_path': '<system>', 'line_number': 44, 'strings': [[False, 'label tmplabelif13_2']], 'arg_strings': [[False, 'tmplabelif13_2']]}, {'str': 'label tmplabelif13_end', 'command': 'label', 'args_str': 'tmplabelif13_end', 'args': ['tmplabelif13_end'], 'file_path': '<system>', 'line_number': 44, 'strings': [[False, 'label tmplabelif13_end']], 'arg_strings': [[False, 'tmplabelif13_end']]}, {'str': "$randstr_1 = '<<<therandomstringforpit' + str(time.time()) + str(random.random()) + '>>>'", 'command': '$randstr_1', 'args_str': "= '<<<therandomstringforpit' + str(time.time()) + str(random.random()) + '>>>'", 'args': ['=', "'<<<therandomstringforpit'", '+', 'str(time.time())', '+', 'str(random.random())', '+', "'>>>'"], 'file_path': '@pit', 'line_number': 28, 'strings': [[False, '$randstr_1 = '], [True, "'<<<therandomstringforpit'"], [False, ' + str(time.time()) + str(random.random()) + '], [True, "'>>>'"], [False, '']], 'arg_strings': [[False, '= '], [True, "'<<<therandomstringforpit'"], [False, ' + str(time.time()) + str(random.random()) + '], [True, "'>>>'"], [False, '']]}, {'str': "$randstr_2 = '<<<therandomstringforpit' + str(time.time()) + str(random.random()) + '>>>'", 'command': '$randstr_2', 'args_str': "= '<<<therandomstringforpit' + str(time.time()) + str(random.random()) + '>>>'", 'args': ['=', "'<<<therandomstringforpit'", '+', 'str(time.time())', '+', 'str(random.random())', '+', "'>>>'"], 'file_path': '@pit', 'line_number': 29, 'strings': [[False, '$randstr_2 = '], [True, "'<<<therandomstringforpit'"], [False, ' + str(time.time()) + str(random.random()) + '], [True, "'>>>'"], [False, '']], 'arg_strings': [[False, '= '], [True, "'<<<therandomstringforpit'"], [False, ' + str(time.time()) + str(random.random()) + '], [True, "'>>>'"], [False, '']]}, {'str': "$content = $content->replace('\\{', $randstr_1)", 'command': '$content', 'args_str': "= $content->replace('\\{', $randstr_1)", 'args': ['=', "$content->replace('\\{',", '$randstr_1)'], 'file_path': '@pit', 'line_number': 30, 'strings': [[False, '$content = $content->replace('], [True, "'\\{'"], [False, ', $randstr_1)']], 'arg_strings': [[False, '= $content->replace('], [True, "'\\{'"], [False, ', $randstr_1)']]}, {'str': "$content = $content->replace('\\}', $randstr_2)", 'command': '$content', 'args_str': "= $content->replace('\\}', $randstr_2)", 'args': ['=', "$content->replace('\\}',", '$randstr_2)'], 'file_path': '@pit', 'line_number': 31, 'strings': [[False, '$content = $content->replace('], [True, "'\\}'"], [False, ', $randstr_2)']], 'arg_strings': [[False, '= $content->replace('], [True, "'\\}'"], [False, ', $randstr_2)']]}, {'str': "$content = $content->replace('{{', '{=')", 'command': '$content', 'args_str': "= $content->replace('{{', '{=')", 'args': ['=', "$content->replace('{{',", "'{=')"], 'file_path': '@pit', 'line_number': 32, 'strings': [[False, '$content = $content->replace('], [True, "'{{'"], [False, ', '], [True, "'{='"], [False, ')']], 'arg_strings': [[False, '= $content->replace('], [True, "'{{'"], [False, ', '], [True, "'{='"], [False, ')']]}, {'str': "$content = $content->replace('}}', '}')", 'command': '$content', 'args_str': "= $content->replace('}}', '}')", 'args': ['=', "$content->replace('}}',", "'}')"], 'file_path': '@pit', 'line_number': 33, 'strings': [[False, '$content = $content->replace('], [True, "'}}'"], [False, ', '], [True, "'}'"], [False, ')']], 'arg_strings': [[False, '= $content->replace('], [True, "'}}'"], [False, ', '], [True, "'}'"], [False, ')']]}, {'str': "$parts = $content->split('{')", 'command': '$parts', 'args_str': "= $content->split('{')", 'args': ['=', "$content->split('{')"], 'file_path': '@pit', 'line_number': 34, 'strings': [[False, '$parts = $content->split('], [True, "'{'"], [False, ')']], 'arg_strings': [[False, '= $content->split('], [True, "'{'"], [False, ')']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@pit', 'line_number': 35, 'strings': [[False, '$i = 0']], 'arg_strings': [[False, '= 0']]}, {'str': '$new_parts = []', 'command': '$new_parts', 'args_str': '= []', 'args': ['=', '[]'], 'file_path': '@pit', 'line_number': 36, 'strings': [[False, '$new_parts = []']], 'arg_strings': [[False, '= []']]}, {'str': 'while $i < len($parts)', 'command': 'while', 'args_str': '$i < len($parts)', 'args': ['$i', '<', 'len($parts)'], 'file_path': '@pit', 'line_number': 37, 'strings': [[False, 'while $i < len($parts)']], 'arg_strings': [[False, '$i < len($parts)']]}, {'str': "$tmp = $parts[$i]->split('}', 1)", 'command': '$tmp', 'args_str': "= $parts[$i]->split('}', 1)", 'args': ['=', "$parts[$i]->split('}',", '1)'], 'file_path': '@pit', 'line_number': 38, 'strings': [[False, '$tmp = $parts[$i]->split('], [True, "'}'"], [False, ', 1)']], 'arg_strings': [[False, '= $parts[$i]->split('], [True, "'}'"], [False, ', 1)']]}, {'str': 'if len($tmp) > 1', 'command': 'if', 'args_str': 'len($tmp) > 1', 'args': ['len($tmp)', '>', '1'], 'file_path': '@pit', 'line_number': 39, 'strings': [[False, 'if len($tmp) > 1']], 'arg_strings': [[False, 'len($tmp) > 1']]}, {'str': 'mem not (len($tmp) > 1)', 'command': 'mem', 'args_str': 'not (len($tmp) > 1)', 'args': ['not', '(len($tmp)', '>', '1)'], 'file_path': '<system>', 'line_number': 58, 'strings': [[False, 'mem not (len($tmp) > 1)']], 'arg_strings': [[False, 'not (len($tmp) > 1)']]}, {'str': 'gotoif tmplabelif14_2', 'command': 'gotoif', 'args_str': 'tmplabelif14_2', 'args': ['tmplabelif14_2'], 'file_path': '<system>', 'line_number': 58, 'strings': [[False, 'gotoif tmplabelif14_2']], 'arg_strings': [[False, 'tmplabelif14_2']]}, {'str': "$new_parts->append ([True, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'command': '$new_parts->append', 'args_str': "([True, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'args': ['([True,', '$tmp[0]->replace($randstr_1,', "'{')->replace($randstr_2,", "'}')])"], 'file_path': '@pit', 'line_number': 40, 'strings': [[False, '$new_parts->append ([True, $tmp[0]->replace($randstr_1, '], [True, "'{'"], [False, ')->replace($randstr_2, '], [True, "'}'"], [False, ')])']], 'arg_strings': [[False, '([True, $tmp[0]->replace($randstr_1, '], [True, "'{'"], [False, ')->replace($randstr_2, '], [True, "'}'"], [False, ')])']]}, {'str': "$new_parts->append ([False, $tmp[1]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'command': '$new_parts->append', 'args_str': "([False, $tmp[1]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'args': ['([False,', '$tmp[1]->replace($randstr_1,', "'{')->replace($randstr_2,", "'}')])"], 'file_path': '@pit', 'line_number': 41, 'strings': [[False, '$new_parts->append ([False, $tmp[1]->replace($randstr_1, '], [True, "'{'"], [False, ')->replace($randstr_2, '], [True, "'}'"], [False, ')])']], 'arg_strings': [[False, '([False, $tmp[1]->replace($randstr_1, '], [True, "'{'"], [False, ')->replace($randstr_2, '], [True, "'}'"], [False, ')])']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 42, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif14_end', 'command': 'goto', 'args_str': 'tmplabelif14_end', 'args': ['tmplabelif14_end'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'goto tmplabelif14_end']], 'arg_strings': [[False, 'tmplabelif14_end']]}, {'str': 'label tmplabelif14_2', 'command': 'label', 'args_str': 'tmplabelif14_2', 'args': ['tmplabelif14_2'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'label tmplabelif14_2']], 'arg_strings': [[False, 'tmplabelif14_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif14_3', 'command': 'gotoif', 'args_str': 'tmplabelif14_3', 'args': ['tmplabelif14_3'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'gotoif tmplabelif14_3']], 'arg_strings': [[False, 'tmplabelif14_3']]}, {'str': "$new_parts->append ([False, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'command': '$new_parts->append', 'args_str': "([False, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'args': ['([False,', '$tmp[0]->replace($randstr_1,', "'{')->replace($randstr_2,", "'}')])"], 'file_path': '@pit', 'line_number': 43, 'strings': [[False, '$new_parts->append ([False, $tmp[0]->replace($randstr_1, '], [True, "'{'"], [False, ')->replace($randstr_2, '], [True, "'}'"], [False, ')])']], 'arg_strings': [[False, '([False, $tmp[0]->replace($randstr_1, '], [True, "'{'"], [False, ')->replace($randstr_2, '], [True, "'}'"], [False, ')])']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 44, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif14_3', 'command': 'label', 'args_str': 'tmplabelif14_3', 'args': ['tmplabelif14_3'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'label tmplabelif14_3']], 'arg_strings': [[False, 'tmplabelif14_3']]}, {'str': 'label tmplabelif14_end', 'command': 'label', 'args_str': 'tmplabelif14_end', 'args': ['tmplabelif14_end'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'label tmplabelif14_end']], 'arg_strings': [[False, 'tmplabelif14_end']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@pit', 'line_number': 45, 'strings': [[False, '$i = $i + 1']], 'arg_strings': [[False, '= $i + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 46, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': '$pit_i = 0', 'command': '$pit_i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@pit', 'line_number': 48, 'strings': [[False, '$pit_i = 0']], 'arg_strings': [[False, '= 0']]}, {'str': '$pit_parts = $new_parts', 'command': '$pit_parts', 'args_str': '= $new_parts', 'args': ['=', '$new_parts'], 'file_path': '@pit', 'line_number': 49, 'strings': [[False, '$pit_parts = $new_parts']], 'arg_strings': [[False, '= $new_parts']]}, {'str': "$pit_code = ''", 'command': '$pit_code', 'args_str': "= ''", 'args': ['=', "''"], 'file_path': '@pit', 'line_number': 50, 'strings': [[False, '$pit_code = '], [True, "''"], [False, '']], 'arg_strings': [[False, '= '], [True, "''"], [False, '']]}, {'str': "free ('i')", 'command': 'free', 'args_str': "('i')", 'args': ["('i')"], 'file_path': '@pit', 'line_number': 51, 'strings': [[False, 'free ('], [True, "'i'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'i'"], [False, ')']]}, {'str': "free ('new_parts')", 'command': 'free', 'args_str': "('new_parts')", 'args': ["('new_parts')"], 'file_path': '@pit', 'line_number': 52, 'strings': [[False, 'free ('], [True, "'new_parts'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'new_parts'"], [False, ')']]}, {'str': "free ('parts')", 'command': 'free', 'args_str': "('parts')", 'args': ["('parts')"], 'file_path': '@pit', 'line_number': 53, 'strings': [[False, 'free ('], [True, "'parts'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'parts'"], [False, ')']]}, {'str': "free ('content')", 'command': 'free', 'args_str': "('content')", 'args': ["('content')"], 'file_path': '@pit', 'line_number': 54, 'strings': [[False, 'free ('], [True, "'content'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'content'"], [False, ')']]}, {'str': "free ('randstr_1')", 'command': 'free', 'args_str': "('randstr_1')", 'args': ["('randstr_1')"], 'file_path': '@pit', 'line_number': 55, 'strings': [[False, 'free ('], [True, "'randstr_1'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'randstr_1'"], [False, ')']]}, {'str': "free ('randstr_2')", 'command': 'free', 'args_str': "('randstr_2')", 'args': ["('randstr_2')"], 'file_path': '@pit', 'line_number': 56, 'strings': [[False, 'free ('], [True, "'randstr_2'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'randstr_2'"], [False, ')']]}, {'str': "free ('tmp')", 'command': 'free', 'args_str': "('tmp')", 'args': ["('tmp')"], 'file_path': '@pit', 'line_number': 57, 'strings': [[False, 'free ('], [True, "'tmp'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'tmp'"], [False, ')']]}, {'str': 'while $pit_i < len($pit_parts)', 'command': 'while', 'args_str': '$pit_i < len($pit_parts)', 'args': ['$pit_i', '<', 'len($pit_parts)'], 'file_path': '@pit', 'line_number': 58, 'strings': [[False, 'while $pit_i < len($pit_parts)']], 'arg_strings': [[False, '$pit_i < len($pit_parts)']]}, {'str': 'if $pit_parts[$pit_i][0] == True', 'command': 'if', 'args_str': '$pit_parts[$pit_i][0] == True', 'args': ['$pit_parts[$pit_i][0]', '==', 'True'], 'file_path': '@pit', 'line_number': 59, 'strings': [[False, 'if $pit_parts[$pit_i][0] == True']], 'arg_strings': [[False, '$pit_parts[$pit_i][0] == True']]}, {'str': 'mem not ($pit_parts[$pit_i][0] == True)', 'command': 'mem', 'args_str': 'not ($pit_parts[$pit_i][0] == True)', 'args': ['not', '($pit_parts[$pit_i][0]', '==', 'True)'], 'file_path': '<system>', 'line_number': 85, 'strings': [[False, 'mem not ($pit_parts[$pit_i][0] == True)']], 'arg_strings': [[False, 'not ($pit_parts[$pit_i][0] == True)']]}, {'str': 'gotoif tmplabelif15_2', 'command': 'gotoif', 'args_str': 'tmplabelif15_2', 'args': ['tmplabelif15_2'], 'file_path': '<system>', 'line_number': 85, 'strings': [[False, 'gotoif tmplabelif15_2']], 'arg_strings': [[False, 'tmplabelif15_2']]}, {'str': 'if $pit_parts[$pit_i][1]', 'command': 'if', 'args_str': '$pit_parts[$pit_i][1]', 'args': ['$pit_parts[$pit_i][1]'], 'file_path': '@pit', 'line_number': 60, 'strings': [[False, 'if $pit_parts[$pit_i][1]']], 'arg_strings': [[False, '$pit_parts[$pit_i][1]']]}, {'str': 'mem not ($pit_parts[$pit_i][1])', 'command': 'mem', 'args_str': 'not ($pit_parts[$pit_i][1])', 'args': ['not', '($pit_parts[$pit_i][1])'], 'file_path': '<system>', 'line_number': 88, 'strings': [[False, 'mem not ($pit_parts[$pit_i][1])']], 'arg_strings': [[False, 'not ($pit_parts[$pit_i][1])']]}, {'str': 'gotoif tmplabelif16_2', 'command': 'gotoif', 'args_str': 'tmplabelif16_2', 'args': ['tmplabelif16_2'], 'file_path': '<system>', 'line_number': 88, 'strings': [[False, 'gotoif tmplabelif16_2']], 'arg_strings': [[False, 'tmplabelif16_2']]}, {'str': "if $pit_parts[$pit_i][1][0] == '='", 'command': 'if', 'args_str': "$pit_parts[$pit_i][1][0] == '='", 'args': ['$pit_parts[$pit_i][1][0]', '==', "'='"], 'file_path': '@pit', 'line_number': 61, 'strings': [[False, 'if $pit_parts[$pit_i][1][0] == '], [True, "'='"], [False, '']], 'arg_strings': [[False, '$pit_parts[$pit_i][1][0] == '], [True, "'='"], [False, '']]}, {'str': "mem not ($pit_parts[$pit_i][1][0] == '=')", 'command': 'mem', 'args_str': "not ($pit_parts[$pit_i][1][0] == '=')", 'args': ['not', '($pit_parts[$pit_i][1][0]', '==', "'=')"], 'file_path': '<system>', 'line_number': 91, 'strings': [[False, 'mem not ($pit_parts[$pit_i][1][0] == '], [True, "'='"], [False, ')']], 'arg_strings': [[False, 'not ($pit_parts[$pit_i][1][0] == '], [True, "'='"], [False, ')']]}, {'str': 'gotoif tmplabelif17_2', 'command': 'gotoif', 'args_str': 'tmplabelif17_2', 'args': ['tmplabelif17_2'], 'file_path': '<system>', 'line_number': 91, 'strings': [[False, 'gotoif tmplabelif17_2']], 'arg_strings': [[False, 'tmplabelif17_2']]}, {'str': "$pit_code = $pit_code + ('\\nprint(' + $pit_parts[$pit_i][1][1:] + ')')", 'command': '$pit_code', 'args_str': "= $pit_code + ('\\nprint(' + $pit_parts[$pit_i][1][1:] + ')')", 'args': ['=', '$pit_code', '+', "('\\nprint('", '+', '$pit_parts[$pit_i][1][1:]', '+', "')')"], 'file_path': '@pit', 'line_number': 62, 'strings': [[False, '$pit_code = $pit_code + ('], [True, "'\\nprint('"], [False, ' + $pit_parts[$pit_i][1][1:] + '], [True, "')'"], [False, ')']], 'arg_strings': [[False, '= $pit_code + ('], [True, "'\\nprint('"], [False, ' + $pit_parts[$pit_i][1][1:] + '], [True, "')'"], [False, ')']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 63, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif17_end', 'command': 'goto', 'args_str': 'tmplabelif17_end', 'args': ['tmplabelif17_end'], 'file_path': '<system>', 'line_number': 95, 'strings': [[False, 'goto tmplabelif17_end']], 'arg_strings': [[False, 'tmplabelif17_end']]}, {'str': 'label tmplabelif17_2', 'command': 'label', 'args_str': 'tmplabelif17_2', 'args': ['tmplabelif17_2'], 'file_path': '<system>', 'line_number': 95, 'strings': [[False, 'label tmplabelif17_2']], 'arg_strings': [[False, 'tmplabelif17_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 95, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif17_3', 'command': 'gotoif', 'args_str': 'tmplabelif17_3', 'args': ['tmplabelif17_3'], 'file_path': '<system>', 'line_number': 95, 'strings': [[False, 'gotoif tmplabelif17_3']], 'arg_strings': [[False, 'tmplabelif17_3']]}, {'str': "$pit_code = $pit_code + ('\\n' + $pit_parts[$pit_i][1])", 'command': '$pit_code', 'args_str': "= $pit_code + ('\\n' + $pit_parts[$pit_i][1])", 'args': ['=', '$pit_code', '+', "('\\n'", '+', '$pit_parts[$pit_i][1])'], 'file_path': '@pit', 'line_number': 64, 'strings': [[False, '$pit_code = $pit_code + ('], [True, "'\\n'"], [False, ' + $pit_parts[$pit_i][1])']], 'arg_strings': [[False, '= $pit_code + ('], [True, "'\\n'"], [False, ' + $pit_parts[$pit_i][1])']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 65, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif17_3', 'command': 'label', 'args_str': 'tmplabelif17_3', 'args': ['tmplabelif17_3'], 'file_path': '<system>', 'line_number': 101, 'strings': [[False, 'label tmplabelif17_3']], 'arg_strings': [[False, 'tmplabelif17_3']]}, {'str': 'label tmplabelif17_end', 'command': 'label', 'args_str': 'tmplabelif17_end', 'args': ['tmplabelif17_end'], 'file_path': '<system>', 'line_number': 101, 'strings': [[False, 'label tmplabelif17_end']], 'arg_strings': [[False, 'tmplabelif17_end']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 66, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif16_2', 'command': 'label', 'args_str': 'tmplabelif16_2', 'args': ['tmplabelif16_2'], 'file_path': '<system>', 'line_number': 104, 'strings': [[False, 'label tmplabelif16_2']], 'arg_strings': [[False, 'tmplabelif16_2']]}, {'str': 'label tmplabelif16_end', 'command': 'label', 'args_str': 'tmplabelif16_end', 'args': ['tmplabelif16_end'], 'file_path': '<system>', 'line_number': 104, 'strings': [[False, 'label tmplabelif16_end']], 'arg_strings': [[False, 'tmplabelif16_end']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 67, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif15_end', 'command': 'goto', 'args_str': 'tmplabelif15_end', 'args': ['tmplabelif15_end'], 'file_path': '<system>', 'line_number': 107, 'strings': [[False, 'goto tmplabelif15_end']], 'arg_strings': [[False, 'tmplabelif15_end']]}, {'str': 'label tmplabelif15_2', 'command': 'label', 'args_str': 'tmplabelif15_2', 'args': ['tmplabelif15_2'], 'file_path': '<system>', 'line_number': 107, 'strings': [[False, 'label tmplabelif15_2']], 'arg_strings': [[False, 'tmplabelif15_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 107, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif15_3', 'command': 'gotoif', 'args_str': 'tmplabelif15_3', 'args': ['tmplabelif15_3'], 'file_path': '<system>', 'line_number': 107, 'strings': [[False, 'gotoif tmplabelif15_3']], 'arg_strings': [[False, 'tmplabelif15_3']]}, {'str': '$pit_code = $pit_code + (\'\\nprint(base64.b64decode("\' + base64.b64encode($pit_parts[$pit_i][1]->encode())->decode() + \'")->decode())\')', 'command': '$pit_code', 'args_str': '= $pit_code + (\'\\nprint(base64.b64decode("\' + base64.b64encode($pit_parts[$pit_i][1]->encode())->decode() + \'")->decode())\')', 'args': ['=', '$pit_code', '+', '(\'\\nprint(base64.b64decode("\'', '+', 'base64.b64encode($pit_parts[$pit_i][1]->encode())->decode()', '+', '\'")->decode())\')'], 'file_path': '@pit', 'line_number': 68, 'strings': [[False, '$pit_code = $pit_code + ('], [True, '\'\\nprint(base64.b64decode("\''], [False, ' + base64.b64encode($pit_parts[$pit_i][1]->encode())->decode() + '], [True, '\'")->decode())\''], [False, ')']], 'arg_strings': [[False, '= $pit_code + ('], [True, '\'\\nprint(base64.b64decode("\''], [False, ' + base64.b64encode($pit_parts[$pit_i][1]->encode())->decode() + '], [True, '\'")->decode())\''], [False, ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 69, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif15_3', 'command': 'label', 'args_str': 'tmplabelif15_3', 'args': ['tmplabelif15_3'], 'file_path': '<system>', 'line_number': 113, 'strings': [[False, 'label tmplabelif15_3']], 'arg_strings': [[False, 'tmplabelif15_3']]}, {'str': 'label tmplabelif15_end', 'command': 'label', 'args_str': 'tmplabelif15_end', 'args': ['tmplabelif15_end'], 'file_path': '<system>', 'line_number': 113, 'strings': [[False, 'label tmplabelif15_end']], 'arg_strings': [[False, 'tmplabelif15_end']]}, {'str': '$pit_i = $pit_i + 1', 'command': '$pit_i', 'args_str': '= $pit_i + 1', 'args': ['=', '$pit_i', '+', '1'], 'file_path': '@pit', 'line_number': 70, 'strings': [[False, '$pit_i = $pit_i + 1']], 'arg_strings': [[False, '= $pit_i + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 71, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': "free ('pit_i')", 'command': 'free', 'args_str': "('pit_i')", 'args': ["('pit_i')"], 'file_path': '@pit', 'line_number': 72, 'strings': [[False, 'free ('], [True, "'pit_i'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'pit_i'"], [False, ')']]}, {'str': "free ('pit_parts')", 'command': 'free', 'args_str': "('pit_parts')", 'args': ["('pit_parts')"], 'file_path': '@pit', 'line_number': 73, 'strings': [[False, 'free ('], [True, "'pit_parts'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'pit_parts'"], [False, ')']]}, {'str': 'if $realtime_run', 'command': 'if', 'args_str': '$realtime_run', 'args': ['$realtime_run'], 'file_path': '@pit', 'line_number': 74, 'strings': [[False, 'if $realtime_run']], 'arg_strings': [[False, '$realtime_run']]}, {'str': 'mem not ($realtime_run)', 'command': 'mem', 'args_str': 'not ($realtime_run)', 'args': ['not', '($realtime_run)'], 'file_path': '<system>', 'line_number': 120, 'strings': [[False, 'mem not ($realtime_run)']], 'arg_strings': [[False, 'not ($realtime_run)']]}, {'str': 'gotoif tmplabelif18_2', 'command': 'gotoif', 'args_str': 'tmplabelif18_2', 'args': ['tmplabelif18_2'], 'file_path': '<system>', 'line_number': 120, 'strings': [[False, 'gotoif tmplabelif18_2']], 'arg_strings': [[False, 'tmplabelif18_2']]}, {'str': 'eval ($pit_code)', 'command': 'eval', 'args_str': '($pit_code)', 'args': ['($pit_code)'], 'file_path': '@pit', 'line_number': 75, 'strings': [[False, 'eval ($pit_code)']], 'arg_strings': [[False, '($pit_code)']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 76, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif18_end', 'command': 'goto', 'args_str': 'tmplabelif18_end', 'args': ['tmplabelif18_end'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'goto tmplabelif18_end']], 'arg_strings': [[False, 'tmplabelif18_end']]}, {'str': 'label tmplabelif18_2', 'command': 'label', 'args_str': 'tmplabelif18_2', 'args': ['tmplabelif18_2'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'label tmplabelif18_2']], 'arg_strings': [[False, 'tmplabelif18_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif18_3', 'command': 'gotoif', 'args_str': 'tmplabelif18_3', 'args': ['tmplabelif18_3'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'gotoif tmplabelif18_3']], 'arg_strings': [[False, 'tmplabelif18_3']]}, {'str': 'out_start ()', 'command': 'out_start', 'args_str': '()', 'args': ['()'], 'file_path': '@pit', 'line_number': 77, 'strings': [[False, 'out_start ()']], 'arg_strings': [[False, '()']]}, {'str': 'eval ($pit_code)', 'command': 'eval', 'args_str': '($pit_code)', 'args': ['($pit_code)'], 'file_path': '@pit', 'line_number': 78, 'strings': [[False, 'eval ($pit_code)']], 'arg_strings': [[False, '($pit_code)']]}, {'str': 'out_end ()', 'command': 'out_end', 'args_str': '()', 'args': ['()'], 'file_path': '@pit', 'line_number': 79, 'strings': [[False, 'out_end ()']], 'arg_strings': [[False, '()']]}, {'str': 'return out_get_clean()', 'command': 'return', 'args_str': 'out_get_clean()', 'args': ['out_get_clean()'], 'file_path': '@pit', 'line_number': 80, 'strings': [[False, 'return out_get_clean()']], 'arg_strings': [[False, 'out_get_clean()']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 81, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif18_3', 'command': 'label', 'args_str': 'tmplabelif18_3', 'args': ['tmplabelif18_3'], 'file_path': '<system>', 'line_number': 133, 'strings': [[False, 'label tmplabelif18_3']], 'arg_strings': [[False, 'tmplabelif18_3']]}, {'str': 'label tmplabelif18_end', 'command': 'label', 'args_str': 'tmplabelif18_end', 'args': ['tmplabelif18_end'], 'file_path': '<system>', 'line_number': 133, 'strings': [[False, 'label tmplabelif18_end']], 'arg_strings': [[False, 'tmplabelif18_end']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 82, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 83, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@pit', 'line_number': 84, 'strings': [[False, 'if $__ismain__']], 'arg_strings': [[False, '$__ismain__']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 138, 'strings': [[False, 'mem not ($__ismain__)']], 'arg_strings': [[False, 'not ($__ismain__)']]}, {'str': 'gotoif tmplabelif19_2', 'command': 'gotoif', 'args_str': 'tmplabelif19_2', 'args': ['tmplabelif19_2'], 'file_path': '<system>', 'line_number': 138, 'strings': [[False, 'gotoif tmplabelif19_2']], 'arg_strings': [[False, 'tmplabelif19_2']]}, {'str': 'if len($argv) > 1', 'command': 'if', 'args_str': 'len($argv) > 1', 'args': ['len($argv)', '>', '1'], 'file_path': '@pit', 'line_number': 85, 'strings': [[False, 'if len($argv) > 1']], 'arg_strings': [[False, 'len($argv) > 1']]}, {'str': 'mem not (len($argv) > 1)', 'command': 'mem', 'args_str': 'not (len($argv) > 1)', 'args': ['not', '(len($argv)', '>', '1)'], 'file_path': '<system>', 'line_number': 141, 'strings': [[False, 'mem not (len($argv) > 1)']], 'arg_strings': [[False, 'not (len($argv) > 1)']]}, {'str': 'gotoif tmplabelif20_2', 'command': 'gotoif', 'args_str': 'tmplabelif20_2', 'args': ['tmplabelif20_2'], 'file_path': '<system>', 'line_number': 141, 'strings': [[False, 'gotoif tmplabelif20_2']], 'arg_strings': [[False, 'tmplabelif20_2']]}, {'str': 'pit.run_file ($argv[1], True)', 'command': 'pit.run_file', 'args_str': '($argv[1], True)', 'args': ['($argv[1],', 'True)'], 'file_path': '@pit', 'line_number': 86, 'strings': [[False, 'pit.run_file ($argv[1], True)']], 'arg_strings': [[False, '($argv[1], True)']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 87, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif20_end', 'command': 'goto', 'args_str': 'tmplabelif20_end', 'args': ['tmplabelif20_end'], 'file_path': '<system>', 'line_number': 145, 'strings': [[False, 'goto tmplabelif20_end']], 'arg_strings': [[False, 'tmplabelif20_end']]}, {'str': 'label tmplabelif20_2', 'command': 'label', 'args_str': 'tmplabelif20_2', 'args': ['tmplabelif20_2'], 'file_path': '<system>', 'line_number': 145, 'strings': [[False, 'label tmplabelif20_2']], 'arg_strings': [[False, 'tmplabelif20_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 145, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif20_3', 'command': 'gotoif', 'args_str': 'tmplabelif20_3', 'args': ['tmplabelif20_3'], 'file_path': '<system>', 'line_number': 145, 'strings': [[False, 'gotoif tmplabelif20_3']], 'arg_strings': [[False, 'tmplabelif20_3']]}, {'str': "println ('pit: File name is required')", 'command': 'println', 'args_str': "('pit: File name is required')", 'args': ["('pit:", 'File', 'name', 'is', "required')"], 'file_path': '@pit', 'line_number': 88, 'strings': [[False, 'println ('], [True, "'pit: File name is required'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'pit: File name is required'"], [False, ')']]}, {'str': 'exit (1)', 'command': 'exit', 'args_str': '(1)', 'args': ['(1)'], 'file_path': '@pit', 'line_number': 89, 'strings': [[False, 'exit (1)']], 'arg_strings': [[False, '(1)']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 90, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif20_3', 'command': 'label', 'args_str': 'tmplabelif20_3', 'args': ['tmplabelif20_3'], 'file_path': '<system>', 'line_number': 152, 'strings': [[False, 'label tmplabelif20_3']], 'arg_strings': [[False, 'tmplabelif20_3']]}, {'str': 'label tmplabelif20_end', 'command': 'label', 'args_str': 'tmplabelif20_end', 'args': ['tmplabelif20_end'], 'file_path': '<system>', 'line_number': 152, 'strings': [[False, 'label tmplabelif20_end']], 'arg_strings': [[False, 'tmplabelif20_end']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 91, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif19_2', 'command': 'label', 'args_str': 'tmplabelif19_2', 'args': ['tmplabelif19_2'], 'file_path': '<system>', 'line_number': 155, 'strings': [[False, 'label tmplabelif19_2']], 'arg_strings': [[False, 'tmplabelif19_2']]}, {'str': 'label tmplabelif19_end', 'command': 'label', 'args_str': 'tmplabelif19_end', 'args': ['tmplabelif19_end'], 'file_path': '<system>', 'line_number': 155, 'strings': [[False, 'label tmplabelif19_end']], 'arg_strings': [[False, 'tmplabelif19_end']]}]
modules["random"] = [{'str': 'namespace random', 'command': 'namespace', 'args_str': 'random', 'args': ['random'], 'file_path': '@random', 'line_number': 1, 'strings': [[False, 'namespace random']], 'arg_strings': [[False, 'random']]}, {'str': '@doc """    Generates a random number between x and y.\\n    First and second arguments are x and y as number.    """', 'command': '@doc', 'args_str': '"""    Generates a random number between x and y.\\n    First and second arguments are x and y as number.    """', 'args': ['"""', 'Generates', 'a', 'random', 'number', 'between', 'x', 'and', 'y.\\n', 'First', 'and', 'second', 'arguments', 'are', 'x', 'and', 'y', 'as', 'number.', '"""'], 'file_path': '@random', 'line_number': 2, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Generates a random number between x and y.\\n    First and second arguments are x and y as number.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Generates a random number between x and y.\\n    First and second arguments are x and y as number.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func int::randint(int $a, int $b)', 'command': 'func', 'args_str': 'int::randint(int $a, int $b)', 'args': ['int::randint(int', '$a,', 'int', '$b)'], 'file_path': '@random', 'line_number': 3, 'strings': [[False, 'func int::randint(int $a, int $b)']], 'arg_strings': [[False, 'int::randint(int $a, int $b)']]}, {'str': "return py_load_module('random')->randint($a, $b)", 'command': 'return', 'args_str': "py_load_module('random')->randint($a, $b)", 'args': ["py_load_module('random')->randint($a,", '$b)'], 'file_path': '@random', 'line_number': 4, 'strings': [[False, 'return py_load_module('], [True, "'random'"], [False, ')->randint($a, $b)']], 'arg_strings': [[False, 'py_load_module('], [True, "'random'"], [False, ')->randint($a, $b)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 5, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Initializes Random number generator.\\n    Gets seed as integer.    """', 'command': '@doc', 'args_str': '"""    Initializes Random number generator.\\n    Gets seed as integer.    """', 'args': ['"""', 'Initializes', 'Random', 'number', 'generator.\\n', 'Gets', 'seed', 'as', 'integer.', '"""'], 'file_path': '@random', 'line_number': 6, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Initializes Random number generator.\\n    Gets seed as integer.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Initializes Random number generator.\\n    Gets seed as integer.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func seed($a)', 'command': 'func', 'args_str': 'seed($a)', 'args': ['seed($a)'], 'file_path': '@random', 'line_number': 7, 'strings': [[False, 'func seed($a)']], 'arg_strings': [[False, 'seed($a)']]}, {'str': "py_load_module ('random')->seed($a)", 'command': 'py_load_module', 'args_str': "('random')->seed($a)", 'args': ["('random')->seed($a)"], 'file_path': '@random', 'line_number': 8, 'strings': [[False, 'py_load_module ('], [True, "'random'"], [False, ')->seed($a)']], 'arg_strings': [[False, '('], [True, "'random'"], [False, ')->seed($a)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 9, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Returns the current internal state of the random number generator.    """', 'command': '@doc', 'args_str': '"""    Returns the current internal state of the random number generator.    """', 'args': ['"""', 'Returns', 'the', 'current', 'internal', 'state', 'of', 'the', 'random', 'number', 'generator.', '"""'], 'file_path': '@random', 'line_number': 10, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns the current internal state of the random number generator.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Returns the current internal state of the random number generator.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func getstate()', 'command': 'func', 'args_str': 'getstate()', 'args': ['getstate()'], 'file_path': '@random', 'line_number': 11, 'strings': [[False, 'func getstate()']], 'arg_strings': [[False, 'getstate()']]}, {'str': "return py_load_module('random')->getstate()", 'command': 'return', 'args_str': "py_load_module('random')->getstate()", 'args': ["py_load_module('random')->getstate()"], 'file_path': '@random', 'line_number': 12, 'strings': [[False, 'return py_load_module('], [True, "'random'"], [False, ')->getstate()']], 'arg_strings': [[False, 'py_load_module('], [True, "'random'"], [False, ')->getstate()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 13, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func setstate($state)', 'command': 'func', 'args_str': 'setstate($state)', 'args': ['setstate($state)'], 'file_path': '@random', 'line_number': 14, 'strings': [[False, 'func setstate($state)']], 'arg_strings': [[False, 'setstate($state)']]}, {'str': "py_load_module ('random')->setstate($state)", 'command': 'py_load_module', 'args_str': "('random')->setstate($state)", 'args': ["('random')->setstate($state)"], 'file_path': '@random', 'line_number': 15, 'strings': [[False, 'py_load_module ('], [True, "'random'"], [False, ')->setstate($state)']], 'arg_strings': [[False, '('], [True, "'random'"], [False, ')->setstate($state)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 16, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func getrandbits($a)', 'command': 'func', 'args_str': 'getrandbits($a)', 'args': ['getrandbits($a)'], 'file_path': '@random', 'line_number': 17, 'strings': [[False, 'func getrandbits($a)']], 'arg_strings': [[False, 'getrandbits($a)']]}, {'str': "return py_load_module('random')->getrandbits($a)", 'command': 'return', 'args_str': "py_load_module('random')->getrandbits($a)", 'args': ["py_load_module('random')->getrandbits($a)"], 'file_path': '@random', 'line_number': 18, 'strings': [[False, 'return py_load_module('], [True, "'random'"], [False, ')->getrandbits($a)']], 'arg_strings': [[False, 'py_load_module('], [True, "'random'"], [False, ')->getrandbits($a)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 19, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func randrange($a, $b)', 'command': 'func', 'args_str': 'randrange($a, $b)', 'args': ['randrange($a,', '$b)'], 'file_path': '@random', 'line_number': 20, 'strings': [[False, 'func randrange($a, $b)']], 'arg_strings': [[False, 'randrange($a, $b)']]}, {'str': "return py_load_module('random')->randrange($a, $b)", 'command': 'return', 'args_str': "py_load_module('random')->randrange($a, $b)", 'args': ["py_load_module('random')->randrange($a,", '$b)'], 'file_path': '@random', 'line_number': 21, 'strings': [[False, 'return py_load_module('], [True, "'random'"], [False, ')->randrange($a, $b)']], 'arg_strings': [[False, 'py_load_module('], [True, "'random'"], [False, ')->randrange($a, $b)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 22, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "Selects a random item in a list"', 'command': '@doc', 'args_str': '"Selects a random item in a list"', 'args': ['"Selects', 'a', 'random', 'item', 'in', 'a', 'list"'], 'file_path': '@random', 'line_number': 23, 'strings': [[False, '@doc '], [True, '"Selects a random item in a list"'], [False, '']], 'arg_strings': [[False, ''], [True, '"Selects a random item in a list"'], [False, '']]}, {'str': 'func choice(list $list)', 'command': 'func', 'args_str': 'choice(list $list)', 'args': ['choice(list', '$list)'], 'file_path': '@random', 'line_number': 24, 'strings': [[False, 'func choice(list $list)']], 'arg_strings': [[False, 'choice(list $list)']]}, {'str': '$index = randint(0, len($list)-1)', 'command': '$index', 'args_str': '= randint(0, len($list)-1)', 'args': ['=', 'randint(0,', 'len($list)-1)'], 'file_path': '@random', 'line_number': 25, 'strings': [[False, '$index = randint(0, len($list)-1)']], 'arg_strings': [[False, '= randint(0, len($list)-1)']]}, {'str': 'return $list[$index]', 'command': 'return', 'args_str': '$list[$index]', 'args': ['$list[$index]'], 'file_path': '@random', 'line_number': 26, 'strings': [[False, 'return $list[$index]']], 'arg_strings': [[False, '$list[$index]']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 27, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Generates a random float less that 1.    """', 'command': '@doc', 'args_str': '"""    Generates a random float less that 1.    """', 'args': ['"""', 'Generates', 'a', 'random', 'float', 'less', 'that', '1.', '"""'], 'file_path': '@random', 'line_number': 28, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Generates a random float less that 1.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Generates a random float less that 1.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func random()', 'command': 'func', 'args_str': 'random()', 'args': ['random()'], 'file_path': '@random', 'line_number': 29, 'strings': [[False, 'func random()']], 'arg_strings': [[False, 'random()']]}, {'str': "return py_load_module('random')->random()", 'command': 'return', 'args_str': "py_load_module('random')->random()", 'args': ["py_load_module('random')->random()"], 'file_path': '@random', 'line_number': 30, 'strings': [[False, 'return py_load_module('], [True, "'random'"], [False, ')->random()']], 'arg_strings': [[False, 'py_load_module('], [True, "'random'"], [False, ')->random()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 31, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 32, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}]
modules["serve"] = [{'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@serve', 'line_number': 1, 'strings': [[False, 'if $__ismain__']], 'arg_strings': [[False, '$__ismain__']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'mem not ($__ismain__)']], 'arg_strings': [[False, 'not ($__ismain__)']]}, {'str': 'gotoif tmplabelif21_2', 'command': 'gotoif', 'args_str': 'tmplabelif21_2', 'args': ['tmplabelif21_2'], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'gotoif tmplabelif21_2']], 'arg_strings': [[False, 'tmplabelif21_2']]}, {'str': 'import_run "@web.server"', 'command': 'import_run', 'args_str': '"@web.server"', 'args': ['"@web.server"'], 'file_path': '@serve', 'line_number': 2, 'strings': [[False, 'import_run '], [True, '"@web.server"'], [False, '']], 'arg_strings': [[False, ''], [True, '"@web.server"'], [False, '']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@serve', 'line_number': 3, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 4, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif21_2', 'command': 'label', 'args_str': 'tmplabelif21_2', 'args': ['tmplabelif21_2'], 'file_path': '<system>', 'line_number': 5, 'strings': [[False, 'label tmplabelif21_2']], 'arg_strings': [[False, 'tmplabelif21_2']]}, {'str': 'label tmplabelif21_end', 'command': 'label', 'args_str': 'tmplabelif21_end', 'args': ['tmplabelif21_end'], 'file_path': '<system>', 'line_number': 5, 'strings': [[False, 'label tmplabelif21_end']], 'arg_strings': [[False, 'tmplabelif21_end']]}]
modules["shell"] = [{'str': 'import_once "@sys"', 'command': 'import_once', 'args_str': '"@sys"', 'args': ['"@sys"'], 'file_path': '@shell', 'line_number': 1, 'strings': [[False, 'import_once '], [True, '"@sys"'], [False, '']], 'arg_strings': [[False, ''], [True, '"@sys"'], [False, '']]}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@shell', 'line_number': 2, 'strings': [[False, 'if $__ismain__']], 'arg_strings': [[False, '$__ismain__']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 1, 'strings': [[False, 'mem not ($__ismain__)']], 'arg_strings': [[False, 'not ($__ismain__)']]}, {'str': 'gotoif tmplabelif22_2', 'command': 'gotoif', 'args_str': 'tmplabelif22_2', 'args': ['tmplabelif22_2'], 'file_path': '<system>', 'line_number': 1, 'strings': [[False, 'gotoif tmplabelif22_2']], 'arg_strings': [[False, 'tmplabelif22_2']]}, {'str': "define ('DEBUG', true)", 'command': 'define', 'args_str': "('DEBUG', true)", 'args': ["('DEBUG',", 'true)'], 'file_path': '@shell', 'line_number': 3, 'strings': [[False, 'define ('], [True, "'DEBUG'"], [False, ', true)']], 'arg_strings': [[False, '('], [True, "'DEBUG'"], [False, ', true)']]}, {'str': "define ('DEBUG_HEADER_TITLE', 'Welcome to the Pashmak [' + $sys.pashmakinfo['version'] + '] Interactive Shell')", 'command': 'define', 'args_str': "('DEBUG_HEADER_TITLE', 'Welcome to the Pashmak [' + $sys.pashmakinfo['version'] + '] Interactive Shell')", 'args': ["('DEBUG_HEADER_TITLE',", "'Welcome", 'to', 'the', 'Pashmak', "['", '+', "$sys.pashmakinfo['version']", '+', "']", 'Interactive', "Shell')"], 'file_path': '@shell', 'line_number': 4, 'strings': [[False, 'define ('], [True, "'DEBUG_HEADER_TITLE'"], [False, ', '], [True, "'Welcome to the Pashmak ['"], [False, ' + $sys.pashmakinfo['], [True, "'version'"], [False, '] + '], [True, "'] Interactive Shell'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'DEBUG_HEADER_TITLE'"], [False, ', '], [True, "'Welcome to the Pashmak ['"], [False, ' + $sys.pashmakinfo['], [True, "'version'"], [False, '] + '], [True, "'] Interactive Shell'"], [False, ')']]}, {'str': 'debug ()', 'command': 'debug', 'args_str': '()', 'args': ['()'], 'file_path': '@shell', 'line_number': 5, 'strings': [[False, 'debug ()']], 'arg_strings': [[False, '()']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@shell', 'line_number': 6, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif22_2', 'command': 'label', 'args_str': 'tmplabelif22_2', 'args': ['tmplabelif22_2'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'label tmplabelif22_2']], 'arg_strings': [[False, 'tmplabelif22_2']]}, {'str': 'label tmplabelif22_end', 'command': 'label', 'args_str': 'tmplabelif22_end', 'args': ['tmplabelif22_end'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'label tmplabelif22_end']], 'arg_strings': [[False, 'tmplabelif22_end']]}]
modules["stdlib"] = [{'str': '@doc "Runs a python code from string"', 'command': '@doc', 'args_str': '"Runs a python code from string"', 'args': ['"Runs', 'a', 'python', 'code', 'from', 'string"'], 'file_path': '@stdlib', 'line_number': 1, 'strings': [[False, '@doc '], [True, '"Runs a python code from string"'], [False, '']], 'arg_strings': [[False, ''], [True, '"Runs a python code from string"'], [False, '']]}, {'str': 'func python()', 'command': 'func', 'args_str': 'python()', 'args': ['python()'], 'file_path': '@stdlib', 'line_number': 2, 'strings': [[False, 'func python()']], 'arg_strings': [[False, 'python()']]}, {'str': 'rmem exec(^)', 'command': 'rmem', 'args_str': 'exec(^)', 'args': ['exec(^)'], 'file_path': '@stdlib', 'line_number': 3, 'strings': [[False, 'rmem exec(^)']], 'arg_strings': [[False, 'exec(^)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 4, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Imports a script or a module.\\nGets script/module name as string."""', 'command': '@doc', 'args_str': '"""Imports a script or a module.\\nGets script/module name as string."""', 'args': ['"""Imports', 'a', 'script', 'or', 'a', 'module.\\nGets', 'script/module', 'name', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 5, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Imports a script or a module.\\nGets script/module name as string."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Imports a script or a module.\\nGets script/module name as string."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func import()', 'command': 'func', 'args_str': 'import()', 'args': ['import()'], 'file_path': '@stdlib', 'line_number': 6, 'strings': [[False, 'func import()']], 'arg_strings': [[False, 'import()']]}, {'str': 'mem self.import_script(^)', 'command': 'mem', 'args_str': 'self.import_script(^)', 'args': ['self.import_script(^)'], 'file_path': '@stdlib', 'line_number': 7, 'strings': [[False, 'mem self.import_script(^)']], 'arg_strings': [[False, 'self.import_script(^)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 8, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Is like `import()`, but checks if module or script already is imported, do not imports again.Gets module or script name as string."""', 'command': '@doc', 'args_str': '"""Is like `import()`, but checks if module or script already is imported, do not imports again.Gets module or script name as string."""', 'args': ['"""Is', 'like', '`import()`,', 'but', 'checks', 'if', 'module', 'or', 'script', 'already', 'is', 'imported,', 'do', 'not', 'imports', 'again.Gets', 'module', 'or', 'script', 'name', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 9, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Is like `import()`, but checks if module or script already is imported, do not imports again.Gets module or script name as string."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Is like `import()`, but checks if module or script already is imported, do not imports again.Gets module or script name as string."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func import_once()', 'command': 'func', 'args_str': 'import_once()', 'args': ['import_once()'], 'file_path': '@stdlib', 'line_number': 10, 'strings': [[False, 'func import_once()']], 'arg_strings': [[False, 'import_once()']]}, {'str': 'mem self.import_script(^, True)', 'command': 'mem', 'args_str': 'self.import_script(^, True)', 'args': ['self.import_script(^,', 'True)'], 'file_path': '@stdlib', 'line_number': 11, 'strings': [[False, 'mem self.import_script(^, True)']], 'arg_strings': [[False, 'self.import_script(^, True)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 12, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Is like `import()`, But sets `$__ismain__` to `True` for module(run mode)."""', 'command': '@doc', 'args_str': '"""Is like `import()`, But sets `$__ismain__` to `True` for module(run mode)."""', 'args': ['"""Is', 'like', '`import()`,', 'But', 'sets', '`$__ismain__`', 'to', '`True`', 'for', 'module(run', 'mode)."""'], 'file_path': '@stdlib', 'line_number': 13, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Is like `import()`, But sets `$__ismain__` to `True` for module(run mode)."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Is like `import()`, But sets `$__ismain__` to `True` for module(run mode)."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func import_run()', 'command': 'func', 'args_str': 'import_run()', 'args': ['import_run()'], 'file_path': '@stdlib', 'line_number': 14, 'strings': [[False, 'func import_run()']], 'arg_strings': [[False, 'import_run()']]}, {'str': 'mem self.import_script(^, False, ismain_default=True)', 'command': 'mem', 'args_str': 'self.import_script(^, False, ismain_default=True)', 'args': ['self.import_script(^,', 'False,', 'ismain_default=True)'], 'file_path': '@stdlib', 'line_number': 15, 'strings': [[False, 'mem self.import_script(^, False, ismain_default=True)']], 'arg_strings': [[False, 'self.import_script(^, False, ismain_default=True)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 16, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Is like `import_run` but checks script is already imported like `import_once`."""', 'command': '@doc', 'args_str': '"""Is like `import_run` but checks script is already imported like `import_once`."""', 'args': ['"""Is', 'like', '`import_run`', 'but', 'checks', 'script', 'is', 'already', 'imported', 'like', '`import_once`."""'], 'file_path': '@stdlib', 'line_number': 17, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Is like `import_run` but checks script is already imported like `import_once`."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Is like `import_run` but checks script is already imported like `import_once`."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func import_run_once()', 'command': 'func', 'args_str': 'import_run_once()', 'args': ['import_run_once()'], 'file_path': '@stdlib', 'line_number': 18, 'strings': [[False, 'func import_run_once()']], 'arg_strings': [[False, 'import_run_once()']]}, {'str': 'mem self.import_script(^, True, ismain_default=True)', 'command': 'mem', 'args_str': 'self.import_script(^, True, ismain_default=True)', 'args': ['self.import_script(^,', 'True,', 'ismain_default=True)'], 'file_path': '@stdlib', 'line_number': 19, 'strings': [[False, 'mem self.import_script(^, True, ismain_default=True)']], 'arg_strings': [[False, 'self.import_script(^, True, ismain_default=True)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 20, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Gets a Pashmak code as string and runs that."""', 'command': '@doc', 'args_str': '"""Gets a Pashmak code as string and runs that."""', 'args': ['"""Gets', 'a', 'Pashmak', 'code', 'as', 'string', 'and', 'runs', 'that."""'], 'file_path': '@stdlib', 'line_number': 21, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Gets a Pashmak code as string and runs that."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Gets a Pashmak code as string and runs that."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func eval()', 'command': 'func', 'args_str': 'eval()', 'args': ['eval()'], 'file_path': '@stdlib', 'line_number': 22, 'strings': [[False, 'func eval()']], 'arg_strings': [[False, 'eval()']]}, {'str': 'mem self.pashmak_eval(^)', 'command': 'mem', 'args_str': 'self.pashmak_eval(^)', 'args': ['self.pashmak_eval(^)'], 'file_path': '@stdlib', 'line_number': 23, 'strings': [[False, 'mem self.pashmak_eval(^)']], 'arg_strings': [[False, 'self.pashmak_eval(^)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 24, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Asserts a value, if it\'s not True, raises AssertError."""', 'command': '@doc', 'args_str': '"""Asserts a value, if it\'s not True, raises AssertError."""', 'args': ['"""Asserts', 'a', 'value,', 'if', "it's", 'not', 'True,', 'raises', 'AssertError."""'], 'file_path': '@stdlib', 'line_number': 25, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Asserts a value, if it\'s not True, raises AssertError."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Asserts a value, if it\'s not True, raises AssertError."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func assert($value)', 'command': 'func', 'args_str': 'assert($value)', 'args': ['assert($value)'], 'file_path': '@stdlib', 'line_number': 26, 'strings': [[False, 'func assert($value)']], 'arg_strings': [[False, 'assert($value)']]}, {'str': 'if not $value', 'command': 'if', 'args_str': 'not $value', 'args': ['not', '$value'], 'file_path': '@stdlib', 'line_number': 27, 'strings': [[False, 'if not $value']], 'arg_strings': [[False, 'not $value']]}, {'str': 'mem not (not $value)', 'command': 'mem', 'args_str': 'not (not $value)', 'args': ['not', '(not', '$value)'], 'file_path': '<system>', 'line_number': 26, 'strings': [[False, 'mem not (not $value)']], 'arg_strings': [[False, 'not (not $value)']]}, {'str': 'gotoif tmplabelif23_2', 'command': 'gotoif', 'args_str': 'tmplabelif23_2', 'args': ['tmplabelif23_2'], 'file_path': '<system>', 'line_number': 26, 'strings': [[False, 'gotoif tmplabelif23_2']], 'arg_strings': [[False, 'tmplabelif23_2']]}, {'str': "raise (Error('AssertError', 'asserting that false is true'))", 'command': 'raise', 'args_str': "(Error('AssertError', 'asserting that false is true'))", 'args': ["(Error('AssertError',", "'asserting", 'that', 'false', 'is', "true'))"], 'file_path': '@stdlib', 'line_number': 28, 'strings': [[False, 'raise (Error('], [True, "'AssertError'"], [False, ', '], [True, "'asserting that false is true'"], [False, '))']], 'arg_strings': [[False, '(Error('], [True, "'AssertError'"], [False, ', '], [True, "'asserting that false is true'"], [False, '))']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 29, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif23_2', 'command': 'label', 'args_str': 'tmplabelif23_2', 'args': ['tmplabelif23_2'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'label tmplabelif23_2']], 'arg_strings': [[False, 'tmplabelif23_2']]}, {'str': 'label tmplabelif23_end', 'command': 'label', 'args_str': 'tmplabelif23_end', 'args': ['tmplabelif23_end'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'label tmplabelif23_end']], 'arg_strings': [[False, 'tmplabelif23_end']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 30, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Sets a global variable.\\nGets variable name as first argument and value as second."""', 'command': '@doc', 'args_str': '"""Sets a global variable.\\nGets variable name as first argument and value as second."""', 'args': ['"""Sets', 'a', 'global', 'variable.\\nGets', 'variable', 'name', 'as', 'first', 'argument', 'and', 'value', 'as', 'second."""'], 'file_path': '@stdlib', 'line_number': 31, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Sets a global variable.\\nGets variable name as first argument and value as second."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Sets a global variable.\\nGets variable name as first argument and value as second."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func gset($name, $value=null)', 'command': 'func', 'args_str': 'gset($name, $value=null)', 'args': ['gset($name,', '$value=null)'], 'file_path': '@stdlib', 'line_number': 32, 'strings': [[False, 'func gset($name, $value=null)']], 'arg_strings': [[False, 'gset($name, $value=null)']]}, {'str': 'python (\'self.frames[0]["vars"][\' + repr($name) + \'] = self.get_var("value")\')', 'command': 'python', 'args_str': '(\'self.frames[0]["vars"][\' + repr($name) + \'] = self.get_var("value")\')', 'args': ['(\'self.frames[0]["vars"][\'', '+', 'repr($name)', '+', "']", '=', 'self.get_var("value")\')'], 'file_path': '@stdlib', 'line_number': 33, 'strings': [[False, 'python ('], [True, '\'self.frames[0]["vars"][\''], [False, ' + repr($name) + '], [True, '\'] = self.get_var("value")\''], [False, ')']], 'arg_strings': [[False, '('], [True, '\'self.frames[0]["vars"][\''], [False, ' + repr($name) + '], [True, '\'] = self.get_var("value")\''], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 34, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Returns a global variable. Gets variable name as string."""', 'command': '@doc', 'args_str': '"""Returns a global variable. Gets variable name as string."""', 'args': ['"""Returns', 'a', 'global', 'variable.', 'Gets', 'variable', 'name', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 35, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Returns a global variable. Gets variable name as string."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Returns a global variable. Gets variable name as string."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func gget($name)', 'command': 'func', 'args_str': 'gget($name)', 'args': ['gget($name)'], 'file_path': '@stdlib', 'line_number': 36, 'strings': [[False, 'func gget($name)']], 'arg_strings': [[False, 'gget($name)']]}, {'str': 'python (\'self.mem = self.frames[0]["vars"][\' + repr($name) + \']\')', 'command': 'python', 'args_str': '(\'self.mem = self.frames[0]["vars"][\' + repr($name) + \']\')', 'args': ["('self.mem", '=', 'self.frames[0]["vars"][\'', '+', 'repr($name)', '+', "']')"], 'file_path': '@stdlib', 'line_number': 37, 'strings': [[False, 'python ('], [True, '\'self.mem = self.frames[0]["vars"][\''], [False, ' + repr($name) + '], [True, "']'"], [False, ')']], 'arg_strings': [[False, '('], [True, '\'self.mem = self.frames[0]["vars"][\''], [False, ' + repr($name) + '], [True, "']'"], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 38, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Gets a object/variable and returns type of that."""', 'command': '@doc', 'args_str': '"""Gets a object/variable and returns type of that."""', 'args': ['"""Gets', 'a', 'object/variable', 'and', 'returns', 'type', 'of', 'that."""'], 'file_path': '@stdlib', 'line_number': 39, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Gets a object/variable and returns type of that."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Gets a object/variable and returns type of that."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func typeof(*$obj)', 'command': 'func', 'args_str': 'typeof(*$obj)', 'args': ['typeof(*$obj)'], 'file_path': '@stdlib', 'line_number': 40, 'strings': [[False, 'func typeof(*$obj)']], 'arg_strings': [[False, 'typeof(*$obj)']]}, {'str': '$type = python("self.mem = type(self.get_var(\'obj\'))")', 'command': '$type', 'args_str': '= python("self.mem = type(self.get_var(\'obj\'))")', 'args': ['=', 'python("self.mem', '=', 'type(self.get_var(\'obj\'))")'], 'file_path': '@stdlib', 'line_number': 41, 'strings': [[False, '$type = python('], [True, '"self.mem = type(self.get_var(\'obj\'))"'], [False, ')']], 'arg_strings': [[False, '= python('], [True, '"self.mem = type(self.get_var(\'obj\'))"'], [False, ')']]}, {'str': 'if $type is ClassObject', 'command': 'if', 'args_str': '$type is ClassObject', 'args': ['$type', 'is', 'ClassObject'], 'file_path': '@stdlib', 'line_number': 42, 'strings': [[False, 'if $type is ClassObject']], 'arg_strings': [[False, '$type is ClassObject']]}, {'str': 'mem not ($type is ClassObject)', 'command': 'mem', 'args_str': 'not ($type is ClassObject)', 'args': ['not', '($type', 'is', 'ClassObject)'], 'file_path': '<system>', 'line_number': 45, 'strings': [[False, 'mem not ($type is ClassObject)']], 'arg_strings': [[False, 'not ($type is ClassObject)']]}, {'str': 'gotoif tmplabelif24_2', 'command': 'gotoif', 'args_str': 'tmplabelif24_2', 'args': ['tmplabelif24_2'], 'file_path': '<system>', 'line_number': 45, 'strings': [[False, 'gotoif tmplabelif24_2']], 'arg_strings': [[False, 'tmplabelif24_2']]}, {'str': '$type = $obj->__theclass__->__name__', 'command': '$type', 'args_str': '= $obj->__theclass__->__name__', 'args': ['=', '$obj->__theclass__->__name__'], 'file_path': '@stdlib', 'line_number': 43, 'strings': [[False, '$type = $obj->__theclass__->__name__']], 'arg_strings': [[False, '= $obj->__theclass__->__name__']]}, {'str': '$type = python(\'self.mem = self.classes[self.get_var("type")]\')', 'command': '$type', 'args_str': '= python(\'self.mem = self.classes[self.get_var("type")]\')', 'args': ['=', "python('self.mem", '=', 'self.classes[self.get_var("type")]\')'], 'file_path': '@stdlib', 'line_number': 44, 'strings': [[False, '$type = python('], [True, '\'self.mem = self.classes[self.get_var("type")]\''], [False, ')']], 'arg_strings': [[False, '= python('], [True, '\'self.mem = self.classes[self.get_var("type")]\''], [False, ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 45, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif24_2', 'command': 'label', 'args_str': 'tmplabelif24_2', 'args': ['tmplabelif24_2'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'label tmplabelif24_2']], 'arg_strings': [[False, 'tmplabelif24_2']]}, {'str': 'label tmplabelif24_end', 'command': 'label', 'args_str': 'tmplabelif24_end', 'args': ['tmplabelif24_end'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'label tmplabelif24_end']], 'arg_strings': [[False, 'tmplabelif24_end']]}, {'str': 'return $type', 'command': 'return', 'args_str': '$type', 'args': ['$type'], 'file_path': '@stdlib', 'line_number': 46, 'strings': [[False, 'return $type']], 'arg_strings': [[False, '$type']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 47, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Runs a system shell command and returns exit code.\\nGets command as string and returns exit code as int."""', 'command': '@doc', 'args_str': '"""Runs a system shell command and returns exit code.\\nGets command as string and returns exit code as int."""', 'args': ['"""Runs', 'a', 'system', 'shell', 'command', 'and', 'returns', 'exit', 'code.\\nGets', 'command', 'as', 'string', 'and', 'returns', 'exit', 'code', 'as', 'int."""'], 'file_path': '@stdlib', 'line_number': 48, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Runs a system shell command and returns exit code.\\nGets command as string and returns exit code as int."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Runs a system shell command and returns exit code.\\nGets command as string and returns exit code as int."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func int::system(string $cmd)', 'command': 'func', 'args_str': 'int::system(string $cmd)', 'args': ['int::system(string', '$cmd)'], 'file_path': '@stdlib', 'line_number': 49, 'strings': [[False, 'func int::system(string $cmd)']], 'arg_strings': [[False, 'int::system(string $cmd)']]}, {'str': "return py_load_module('os')->system($cmd)", 'command': 'return', 'args_str': "py_load_module('os')->system($cmd)", 'args': ["py_load_module('os')->system($cmd)"], 'file_path': '@stdlib', 'line_number': 50, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->system($cmd)']], 'arg_strings': [[False, 'py_load_module('], [True, "'os'"], [False, ')->system($cmd)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 51, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Loads a python file script as a python module object.\\nGets script file path as string and returns loaded object."""', 'command': '@doc', 'args_str': '"""Loads a python file script as a python module object.\\nGets script file path as string and returns loaded object."""', 'args': ['"""Loads', 'a', 'python', 'file', 'script', 'as', 'a', 'python', 'module', 'object.\\nGets', 'script', 'file', 'path', 'as', 'string', 'and', 'returns', 'loaded', 'object."""'], 'file_path': '@stdlib', 'line_number': 52, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Loads a python file script as a python module object.\\nGets script file path as string and returns loaded object."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Loads a python file script as a python module object.\\nGets script file path as string and returns loaded object."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func py_load_file(string $path)', 'command': 'func', 'args_str': 'py_load_file(string $path)', 'args': ['py_load_file(string', '$path)'], 'file_path': '@stdlib', 'line_number': 53, 'strings': [[False, 'func py_load_file(string $path)']], 'arg_strings': [[False, 'py_load_file(string $path)']]}, {'str': 'python ("import importlib.util; spec = importlib.util.spec_from_file_location(\'pyloadedfile\', self.get_var(\'path\')); m = importlib.util.module_from_spec(spec); spec.loader.exec_module(m); self.mem = m")', 'command': 'python', 'args_str': '("import importlib.util; spec = importlib.util.spec_from_file_location(\'pyloadedfile\', self.get_var(\'path\')); m = importlib.util.module_from_spec(spec); spec.loader.exec_module(m); self.mem = m")', 'args': ['("import', 'importlib.util;', 'spec', '=', "importlib.util.spec_from_file_location('pyloadedfile',", "self.get_var('path'));", 'm', '=', 'importlib.util.module_from_spec(spec);', 'spec.loader.exec_module(m);', 'self.mem', '=', 'm")'], 'file_path': '@stdlib', 'line_number': 54, 'strings': [[False, 'python ('], [True, '"import importlib.util; spec = importlib.util.spec_from_file_location(\'pyloadedfile\', self.get_var(\'path\')); m = importlib.util.module_from_spec(spec); spec.loader.exec_module(m); self.mem = m"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"import importlib.util; spec = importlib.util.spec_from_file_location(\'pyloadedfile\', self.get_var(\'path\')); m = importlib.util.module_from_spec(spec); spec.loader.exec_module(m); self.mem = m"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 55, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Loads a Python standard module. Gets module name as string."""', 'command': '@doc', 'args_str': '"""Loads a Python standard module. Gets module name as string."""', 'args': ['"""Loads', 'a', 'Python', 'standard', 'module.', 'Gets', 'module', 'name', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 56, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Loads a Python standard module. Gets module name as string."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Loads a Python standard module. Gets module name as string."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func py_load_module(string $name)', 'command': 'func', 'args_str': 'py_load_module(string $name)', 'args': ['py_load_module(string', '$name)'], 'file_path': '@stdlib', 'line_number': 57, 'strings': [[False, 'func py_load_module(string $name)']], 'arg_strings': [[False, 'py_load_module(string $name)']]}, {'str': 'return python("import " + $name + "; self.mem = " + $name)', 'command': 'return', 'args_str': 'python("import " + $name + "; self.mem = " + $name)', 'args': ['python("import', '"', '+', '$name', '+', '";', 'self.mem', '=', '"', '+', '$name)'], 'file_path': '@stdlib', 'line_number': 58, 'strings': [[False, 'return python('], [True, '"import "'], [False, ' + $name + '], [True, '"; self.mem = "'], [False, ' + $name)']], 'arg_strings': [[False, 'python('], [True, '"import "'], [False, ' + $name + '], [True, '"; self.mem = "'], [False, ' + $name)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 59, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Returns current namespace as string."""', 'command': '@doc', 'args_str': '"""Returns current namespace as string."""', 'args': ['"""Returns', 'current', 'namespace', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 60, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Returns current namespace as string."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Returns current namespace as string."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func string::__namespace__()', 'command': 'func', 'args_str': 'string::__namespace__()', 'args': ['string::__namespace__()'], 'file_path': '@stdlib', 'line_number': 61, 'strings': [[False, 'func string::__namespace__()']], 'arg_strings': [[False, 'string::__namespace__()']]}, {'str': 'return python("self.mem = self.current_namespace()")', 'command': 'return', 'args_str': 'python("self.mem = self.current_namespace()")', 'args': ['python("self.mem', '=', 'self.current_namespace()")'], 'file_path': '@stdlib', 'line_number': 62, 'strings': [[False, 'return python('], [True, '"self.mem = self.current_namespace()"'], [False, ')']], 'arg_strings': [[False, 'python('], [True, '"self.mem = self.current_namespace()"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 63, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'namespace pashmak', 'command': 'namespace', 'args_str': 'pashmak', 'args': ['pashmak'], 'file_path': '@stdlib', 'line_number': 64, 'strings': [[False, 'namespace pashmak']], 'arg_strings': [[False, 'pashmak']]}, {'str': '@doc """    Prints zen of Pashmak.    """', 'command': '@doc', 'args_str': '"""    Prints zen of Pashmak.    """', 'args': ['"""', 'Prints', 'zen', 'of', 'Pashmak.', '"""'], 'file_path': '@stdlib', 'line_number': 65, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Prints zen of Pashmak.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Prints zen of Pashmak.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func zen()', 'command': 'func', 'args_str': 'zen()', 'args': ['zen()'], 'file_path': '@stdlib', 'line_number': 66, 'strings': [[False, 'func zen()']], 'arg_strings': [[False, 'zen()']]}, {'str': 'println (\'Zen of Pashmak\\n\\nThe Zen of Pashmak is a collection of "guiding principles" for writing computer programs that influence the design of the Pashmak programming language. (Like zen of python). This fucking list is written by Mohammad Esmaeili.\\n\\n    Fucking syntax is better than beautiful syntax\\n    English is better than Finglish\\n    Lossless slow is better than loosing fast\\n    CatShit is better than DogShit\\n    DogShit is better than BullShit\\n    Chaos is better than peace\\n    Enthropy is better than order\\n    Crazy is better than logic\\n    Fun is better than boring\\n    Happy is better than sad\\n    Pashm is better than Hash\\n    While is better than Do-While\\n    Space is better than Tab\\n    Also tab is better than Space\\n    -> is better than .\\n    if-else is better than switch-case\')', 'command': 'println', 'args_str': '(\'Zen of Pashmak\\n\\nThe Zen of Pashmak is a collection of "guiding principles" for writing computer programs that influence the design of the Pashmak programming language. (Like zen of python). This fucking list is written by Mohammad Esmaeili.\\n\\n    Fucking syntax is better than beautiful syntax\\n    English is better than Finglish\\n    Lossless slow is better than loosing fast\\n    CatShit is better than DogShit\\n    DogShit is better than BullShit\\n    Chaos is better than peace\\n    Enthropy is better than order\\n    Crazy is better than logic\\n    Fun is better than boring\\n    Happy is better than sad\\n    Pashm is better than Hash\\n    While is better than Do-While\\n    Space is better than Tab\\n    Also tab is better than Space\\n    -> is better than .\\n    if-else is better than switch-case\')', 'args': ["('Zen", 'of', 'Pashmak\\n\\nThe', 'Zen', 'of', 'Pashmak', 'is', 'a', 'collection', 'of', '"guiding', 'principles"', 'for', 'writing', 'computer', 'programs', 'that', 'influence', 'the', 'design', 'of', 'the', 'Pashmak', 'programming', 'language.', '(Like', 'zen', 'of', 'python).', 'This', 'fucking', 'list', 'is', 'written', 'by', 'Mohammad', 'Esmaeili.\\n\\n', 'Fucking', 'syntax', 'is', 'better', 'than', 'beautiful', 'syntax\\n', 'English', 'is', 'better', 'than', 'Finglish\\n', 'Lossless', 'slow', 'is', 'better', 'than', 'loosing', 'fast\\n', 'CatShit', 'is', 'better', 'than', 'DogShit\\n', 'DogShit', 'is', 'better', 'than', 'BullShit\\n', 'Chaos', 'is', 'better', 'than', 'peace\\n', 'Enthropy', 'is', 'better', 'than', 'order\\n', 'Crazy', 'is', 'better', 'than', 'logic\\n', 'Fun', 'is', 'better', 'than', 'boring\\n', 'Happy', 'is', 'better', 'than', 'sad\\n', 'Pashm', 'is', 'better', 'than', 'Hash\\n', 'While', 'is', 'better', 'than', 'Do-While\\n', 'Space', 'is', 'better', 'than', 'Tab\\n', 'Also', 'tab', 'is', 'better', 'than', 'Space\\n', '->', 'is', 'better', 'than', '.\\n', 'if-else', 'is', 'better', 'than', "switch-case')"], 'file_path': '@stdlib', 'line_number': 67, 'strings': [[False, 'println ('], [True, '\'Zen of Pashmak\\n\\nThe Zen of Pashmak is a collection of "guiding principles" for writing computer programs that influence the design of the Pashmak programming language. (Like zen of python). This fucking list is written by Mohammad Esmaeili.\\n\\n    Fucking syntax is better than beautiful syntax\\n    English is better than Finglish\\n    Lossless slow is better than loosing fast\\n    CatShit is better than DogShit\\n    DogShit is better than BullShit\\n    Chaos is better than peace\\n    Enthropy is better than order\\n    Crazy is better than logic\\n    Fun is better than boring\\n    Happy is better than sad\\n    Pashm is better than Hash\\n    While is better than Do-While\\n    Space is better than Tab\\n    Also tab is better than Space\\n    -> is better than .\\n    if-else is better than switch-case\''], [False, ')']], 'arg_strings': [[False, '('], [True, '\'Zen of Pashmak\\n\\nThe Zen of Pashmak is a collection of "guiding principles" for writing computer programs that influence the design of the Pashmak programming language. (Like zen of python). This fucking list is written by Mohammad Esmaeili.\\n\\n    Fucking syntax is better than beautiful syntax\\n    English is better than Finglish\\n    Lossless slow is better than loosing fast\\n    CatShit is better than DogShit\\n    DogShit is better than BullShit\\n    Chaos is better than peace\\n    Enthropy is better than order\\n    Crazy is better than logic\\n    Fun is better than boring\\n    Happy is better than sad\\n    Pashm is better than Hash\\n    While is better than Do-While\\n    Space is better than Tab\\n    Also tab is better than Space\\n    -> is better than .\\n    if-else is better than switch-case\''], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 68, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 69, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}, {'str': '@doc """Adds a function to shutdown event.\\nShutdown event functions will be run one by one in end of program.\\nGets function object as argument."""', 'command': '@doc', 'args_str': '"""Adds a function to shutdown event.\\nShutdown event functions will be run one by one in end of program.\\nGets function object as argument."""', 'args': ['"""Adds', 'a', 'function', 'to', 'shutdown', 'event.\\nShutdown', 'event', 'functions', 'will', 'be', 'run', 'one', 'by', 'one', 'in', 'end', 'of', 'program.\\nGets', 'function', 'object', 'as', 'argument."""'], 'file_path': '@stdlib', 'line_number': 70, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Adds a function to shutdown event.\\nShutdown event functions will be run one by one in end of program.\\nGets function object as argument."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Adds a function to shutdown event.\\nShutdown event functions will be run one by one in end of program.\\nGets function object as argument."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func register_shutdown($func)', 'command': 'func', 'args_str': 'register_shutdown($func)', 'args': ['register_shutdown($func)'], 'file_path': '@stdlib', 'line_number': 71, 'strings': [[False, 'func register_shutdown($func)']], 'arg_strings': [[False, 'register_shutdown($func)']]}, {'str': 'python ("self.shutdown_event.append(self.get_var(\'func\'))")', 'command': 'python', 'args_str': '("self.shutdown_event.append(self.get_var(\'func\'))")', 'args': ['("self.shutdown_event.append(self.get_var(\'func\'))")'], 'file_path': '@stdlib', 'line_number': 72, 'strings': [[False, 'python ('], [True, '"self.shutdown_event.append(self.get_var(\'func\'))"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"self.shutdown_event.append(self.get_var(\'func\'))"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 73, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "Gets a value and a list from lists. Then, works like if,Example:\\nprintln match(\'hello\', [\\n\t[\'bye\', \'the bye\'],\\n\t[\'hello\', \'the hello\']\\n])\\n\\nOutput: `the hello`.\\n\\nAlso you can set default option. That will be returned when the passed value is not in the list (else). Default value is `None`.\\n\\nExample:\\nprintln match($value, $list, default=\'the default value\')"', 'command': '@doc', 'args_str': '"Gets a value and a list from lists. Then, works like if,Example:\\nprintln match(\'hello\', [\\n\t[\'bye\', \'the bye\'],\\n\t[\'hello\', \'the hello\']\\n])\\n\\nOutput: `the hello`.\\n\\nAlso you can set default option. That will be returned when the passed value is not in the list (else). Default value is `None`.\\n\\nExample:\\nprintln match($value, $list, default=\'the default value\')"', 'args': ['"Gets', 'a', 'value', 'and', 'a', 'list', 'from', 'lists.', 'Then,', 'works', 'like', 'if,Example:\\nprintln', "match('hello',", "[\\n\t['bye',", "'the", "bye'],\\n\t['hello',", "'the", "hello']\\n])\\n\\nOutput:", '`the', 'hello`.\\n\\nAlso', 'you', 'can', 'set', 'default', 'option.', 'That', 'will', 'be', 'returned', 'when', 'the', 'passed', 'value', 'is', 'not', 'in', 'the', 'list', '(else).', 'Default', 'value', 'is', '`None`.\\n\\nExample:\\nprintln', 'match($value,', '$list,', "default='the", 'default', 'value\')"'], 'file_path': '@stdlib', 'line_number': 74, 'strings': [[False, '@doc '], [True, '"Gets a value and a list from lists. Then, works like if,Example:\\nprintln match(\'hello\', [\\n\t[\'bye\', \'the bye\'],\\n\t[\'hello\', \'the hello\']\\n])\\n\\nOutput: `the hello`.\\n\\nAlso you can set default option. That will be returned when the passed value is not in the list (else). Default value is `None`.\\n\\nExample:\\nprintln match($value, $list, default=\'the default value\')"'], [False, '']], 'arg_strings': [[False, ''], [True, '"Gets a value and a list from lists. Then, works like if,Example:\\nprintln match(\'hello\', [\\n\t[\'bye\', \'the bye\'],\\n\t[\'hello\', \'the hello\']\\n])\\n\\nOutput: `the hello`.\\n\\nAlso you can set default option. That will be returned when the passed value is not in the list (else). Default value is `None`.\\n\\nExample:\\nprintln match($value, $list, default=\'the default value\')"'], [False, '']]}, {'str': 'func match($value, array[array] $list, $default=null)', 'command': 'func', 'args_str': 'match($value, array[array] $list, $default=null)', 'args': ['match($value,', 'array[array]', '$list,', '$default=null)'], 'file_path': '@stdlib', 'line_number': 75, 'strings': [[False, 'func match($value, array[array] $list, $default=null)']], 'arg_strings': [[False, 'match($value, array[array] $list, $default=null)']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@stdlib', 'line_number': 76, 'strings': [[False, '$i = 0']], 'arg_strings': [[False, '= 0']]}, {'str': 'while $i < len($list)', 'command': 'while', 'args_str': '$i < len($list)', 'args': ['$i', '<', 'len($list)'], 'file_path': '@stdlib', 'line_number': 77, 'strings': [[False, 'while $i < len($list)']], 'arg_strings': [[False, '$i < len($list)']]}, {'str': 'if $list[$i][0] == $value', 'command': 'if', 'args_str': '$list[$i][0] == $value', 'args': ['$list[$i][0]', '==', '$value'], 'file_path': '@stdlib', 'line_number': 78, 'strings': [[False, 'if $list[$i][0] == $value']], 'arg_strings': [[False, '$list[$i][0] == $value']]}, {'str': 'mem not ($list[$i][0] == $value)', 'command': 'mem', 'args_str': 'not ($list[$i][0] == $value)', 'args': ['not', '($list[$i][0]', '==', '$value)'], 'file_path': '<system>', 'line_number': 85, 'strings': [[False, 'mem not ($list[$i][0] == $value)']], 'arg_strings': [[False, 'not ($list[$i][0] == $value)']]}, {'str': 'gotoif tmplabelif25_2', 'command': 'gotoif', 'args_str': 'tmplabelif25_2', 'args': ['tmplabelif25_2'], 'file_path': '<system>', 'line_number': 85, 'strings': [[False, 'gotoif tmplabelif25_2']], 'arg_strings': [[False, 'tmplabelif25_2']]}, {'str': 'return $list[$i][1]', 'command': 'return', 'args_str': '$list[$i][1]', 'args': ['$list[$i][1]'], 'file_path': '@stdlib', 'line_number': 79, 'strings': [[False, 'return $list[$i][1]']], 'arg_strings': [[False, '$list[$i][1]']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 80, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif25_2', 'command': 'label', 'args_str': 'tmplabelif25_2', 'args': ['tmplabelif25_2'], 'file_path': '<system>', 'line_number': 89, 'strings': [[False, 'label tmplabelif25_2']], 'arg_strings': [[False, 'tmplabelif25_2']]}, {'str': 'label tmplabelif25_end', 'command': 'label', 'args_str': 'tmplabelif25_end', 'args': ['tmplabelif25_end'], 'file_path': '<system>', 'line_number': 89, 'strings': [[False, 'label tmplabelif25_end']], 'arg_strings': [[False, 'tmplabelif25_end']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@stdlib', 'line_number': 81, 'strings': [[False, '$i = $i + 1']], 'arg_strings': [[False, '= $i + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 82, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': 'return $default', 'command': 'return', 'args_str': '$default', 'args': ['$default'], 'file_path': '@stdlib', 'line_number': 83, 'strings': [[False, 'return $default']], 'arg_strings': [[False, '$default']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 84, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "Loads a Shared object (DLL) by name as string."', 'command': '@doc', 'args_str': '"Loads a Shared object (DLL) by name as string."', 'args': ['"Loads', 'a', 'Shared', 'object', '(DLL)', 'by', 'name', 'as', 'string."'], 'file_path': '@stdlib', 'line_number': 85, 'strings': [[False, '@doc '], [True, '"Loads a Shared object (DLL) by name as string."'], [False, '']], 'arg_strings': [[False, ''], [True, '"Loads a Shared object (DLL) by name as string."'], [False, '']]}, {'str': 'func load_so(string $name)', 'command': 'func', 'args_str': 'load_so(string $name)', 'args': ['load_so(string', '$name)'], 'file_path': '@stdlib', 'line_number': 86, 'strings': [[False, 'func load_so(string $name)']], 'arg_strings': [[False, 'load_so(string $name)']]}, {'str': "return py_load_module('ctypes')->CDLL($name)", 'command': 'return', 'args_str': "py_load_module('ctypes')->CDLL($name)", 'args': ["py_load_module('ctypes')->CDLL($name)"], 'file_path': '@stdlib', 'line_number': 87, 'strings': [[False, 'return py_load_module('], [True, "'ctypes'"], [False, ')->CDLL($name)']], 'arg_strings': [[False, 'py_load_module('], [True, "'ctypes'"], [False, ')->CDLL($name)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 88, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'import "@stdlib.obj"', 'command': 'import', 'args_str': '"@stdlib.obj"', 'args': ['"@stdlib.obj"'], 'file_path': '@stdlib', 'line_number': 89, 'strings': [[False, 'import '], [True, '"@stdlib.obj"'], [False, '']], 'arg_strings': [[False, ''], [True, '"@stdlib.obj"'], [False, '']]}, {'str': 'import "@stdlib.io"', 'command': 'import', 'args_str': '"@stdlib.io"', 'args': ['"@stdlib.io"'], 'file_path': '@stdlib', 'line_number': 90, 'strings': [[False, 'import '], [True, '"@stdlib.io"'], [False, '']], 'arg_strings': [[False, ''], [True, '"@stdlib.io"'], [False, '']]}, {'str': 'import "@stdlib.func"', 'command': 'import', 'args_str': '"@stdlib.func"', 'args': ['"@stdlib.func"'], 'file_path': '@stdlib', 'line_number': 91, 'strings': [[False, 'import '], [True, '"@stdlib.func"'], [False, '']], 'arg_strings': [[False, ''], [True, '"@stdlib.func"'], [False, '']]}, {'str': 'import "@stdlib.class"', 'command': 'import', 'args_str': '"@stdlib.class"', 'args': ['"@stdlib.class"'], 'file_path': '@stdlib', 'line_number': 92, 'strings': [[False, 'import '], [True, '"@stdlib.class"'], [False, '']], 'arg_strings': [[False, ''], [True, '"@stdlib.class"'], [False, '']]}, {'str': 'import "@stdlib.defines"', 'command': 'import', 'args_str': '"@stdlib.defines"', 'args': ['"@stdlib.defines"'], 'file_path': '@stdlib', 'line_number': 93, 'strings': [[False, 'import '], [True, '"@stdlib.defines"'], [False, '']], 'arg_strings': [[False, ''], [True, '"@stdlib.defines"'], [False, '']]}, {'str': 'import "@stdlib.exception"', 'command': 'import', 'args_str': '"@stdlib.exception"', 'args': ['"@stdlib.exception"'], 'file_path': '@stdlib', 'line_number': 94, 'strings': [[False, 'import '], [True, '"@stdlib.exception"'], [False, '']], 'arg_strings': [[False, ''], [True, '"@stdlib.exception"'], [False, '']]}, {'str': 'import "@stdlib.debug"', 'command': 'import', 'args_str': '"@stdlib.debug"', 'args': ['"@stdlib.debug"'], 'file_path': '@stdlib', 'line_number': 95, 'strings': [[False, 'import '], [True, '"@stdlib.debug"'], [False, '']], 'arg_strings': [[False, ''], [True, '"@stdlib.debug"'], [False, '']]}, {'str': 'func fopen()', 'command': 'func', 'args_str': 'fopen()', 'args': ['fopen()'], 'file_path': '@stdlib', 'line_number': 96, 'strings': [[False, 'func fopen()']], 'arg_strings': [[False, 'fopen()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 96, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'fopen = open', 'command': 'fopen', 'args_str': '= open', 'args': ['=', 'open'], 'file_path': '@stdlib', 'line_number': 97, 'strings': [[False, 'fopen = open']], 'arg_strings': [[False, '= open']]}]
modules["stdlib.class"] = [{'str': 'namespace class', 'command': 'namespace', 'args_str': 'class', 'args': ['class'], 'file_path': '@stdlib.class', 'line_number': 1, 'strings': [[False, 'namespace class']], 'arg_strings': [[False, 'class']]}, {'str': '@doc """    Returns list of defined classes as list of strings(name of class).    """', 'command': '@doc', 'args_str': '"""    Returns list of defined classes as list of strings(name of class).    """', 'args': ['"""', 'Returns', 'list', 'of', 'defined', 'classes', 'as', 'list', 'of', 'strings(name', 'of', 'class).', '"""'], 'file_path': '@stdlib.class', 'line_number': 2, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns list of defined classes as list of strings(name of class).    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Returns list of defined classes as list of strings(name of class).    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func list()', 'command': 'func', 'args_str': 'list()', 'args': ['list()'], 'file_path': '@stdlib.class', 'line_number': 3, 'strings': [[False, 'func list()']], 'arg_strings': [[False, 'list()']]}, {'str': 'return python("self.mem = list(self.classes.keys())")', 'command': 'return', 'args_str': 'python("self.mem = list(self.classes.keys())")', 'args': ['python("self.mem', '=', 'list(self.classes.keys())")'], 'file_path': '@stdlib.class', 'line_number': 4, 'strings': [[False, 'return python('], [True, '"self.mem = list(self.classes.keys())"'], [False, ')']], 'arg_strings': [[False, 'python('], [True, '"self.mem = list(self.classes.keys())"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 5, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Checks a class exists.\\n    Gets class name as string.\\n    Returns boolean.    """', 'command': '@doc', 'args_str': '"""    Checks a class exists.\\n    Gets class name as string.\\n    Returns boolean.    """', 'args': ['"""', 'Checks', 'a', 'class', 'exists.\\n', 'Gets', 'class', 'name', 'as', 'string.\\n', 'Returns', 'boolean.', '"""'], 'file_path': '@stdlib.class', 'line_number': 6, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Checks a class exists.\\n    Gets class name as string.\\n    Returns boolean.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Checks a class exists.\\n    Gets class name as string.\\n    Returns boolean.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func bool::exists(string $name)', 'command': 'func', 'args_str': 'bool::exists(string $name)', 'args': ['bool::exists(string', '$name)'], 'file_path': '@stdlib.class', 'line_number': 7, 'strings': [[False, 'func bool::exists(string $name)']], 'arg_strings': [[False, 'bool::exists(string $name)']]}, {'str': '$name = str($name)', 'command': '$name', 'args_str': '= str($name)', 'args': ['=', 'str($name)'], 'file_path': '@stdlib.class', 'line_number': 8, 'strings': [[False, '$name = str($name)']], 'arg_strings': [[False, '= str($name)']]}, {'str': 'return $name in class.list()', 'command': 'return', 'args_str': '$name in class.list()', 'args': ['$name', 'in', 'class.list()'], 'file_path': '@stdlib.class', 'line_number': 9, 'strings': [[False, 'return $name in class.list()']], 'arg_strings': [[False, '$name in class.list()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 10, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Deletes a class.\\n    Gets class name as string.\\n    (This Cannot delete builtin classes).    """', 'command': '@doc', 'args_str': '"""    Deletes a class.\\n    Gets class name as string.\\n    (This Cannot delete builtin classes).    """', 'args': ['"""', 'Deletes', 'a', 'class.\\n', 'Gets', 'class', 'name', 'as', 'string.\\n', '(This', 'Cannot', 'delete', 'builtin', 'classes).', '"""'], 'file_path': '@stdlib.class', 'line_number': 11, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Deletes a class.\\n    Gets class name as string.\\n    (This Cannot delete builtin classes).    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Deletes a class.\\n    Gets class name as string.\\n    (This Cannot delete builtin classes).    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func delete(string $name)', 'command': 'func', 'args_str': 'delete(string $name)', 'args': ['delete(string', '$name)'], 'file_path': '@stdlib.class', 'line_number': 12, 'strings': [[False, 'func delete(string $name)']], 'arg_strings': [[False, 'delete(string $name)']]}, {'str': '$name = str($name)', 'command': '$name', 'args_str': '= str($name)', 'args': ['=', 'str($name)'], 'file_path': '@stdlib.class', 'line_number': 13, 'strings': [[False, '$name = str($name)']], 'arg_strings': [[False, '= str($name)']]}, {'str': 'if not class.exists($name)', 'command': 'if', 'args_str': 'not class.exists($name)', 'args': ['not', 'class.exists($name)'], 'file_path': '@stdlib.class', 'line_number': 14, 'strings': [[False, 'if not class.exists($name)']], 'arg_strings': [[False, 'not class.exists($name)']]}, {'str': 'mem not (not class.exists($name))', 'command': 'mem', 'args_str': 'not (not class.exists($name))', 'args': ['not', '(not', 'class.exists($name))'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'mem not (not class.exists($name))']], 'arg_strings': [[False, 'not (not class.exists($name))']]}, {'str': 'gotoif tmplabelif26_2', 'command': 'gotoif', 'args_str': 'tmplabelif26_2', 'args': ['tmplabelif26_2'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'gotoif tmplabelif26_2']], 'arg_strings': [[False, 'tmplabelif26_2']]}, {'str': 'raise (Error(\'ClassNotFound\', \'class "\' + $name + \'" not found\'))', 'command': 'raise', 'args_str': '(Error(\'ClassNotFound\', \'class "\' + $name + \'" not found\'))', 'args': ["(Error('ClassNotFound',", "'class", '"\'', '+', '$name', '+', '\'"', 'not', "found'))"], 'file_path': '@stdlib.class', 'line_number': 15, 'strings': [[False, 'raise (Error('], [True, "'ClassNotFound'"], [False, ', '], [True, '\'class "\''], [False, ' + $name + '], [True, '\'" not found\''], [False, '))']], 'arg_strings': [[False, '(Error('], [True, "'ClassNotFound'"], [False, ', '], [True, '\'class "\''], [False, ' + $name + '], [True, '\'" not found\''], [False, '))']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 16, 'strings': [[False, 'return']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 17, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif26_2', 'command': 'label', 'args_str': 'tmplabelif26_2', 'args': ['tmplabelif26_2'], 'file_path': '<system>', 'line_number': 18, 'strings': [[False, 'label tmplabelif26_2']], 'arg_strings': [[False, 'tmplabelif26_2']]}, {'str': 'label tmplabelif26_end', 'command': 'label', 'args_str': 'tmplabelif26_end', 'args': ['tmplabelif26_end'], 'file_path': '<system>', 'line_number': 18, 'strings': [[False, 'label tmplabelif26_end']], 'arg_strings': [[False, 'tmplabelif26_end']]}, {'str': "$undeletable_classes = ['Object', 'Error']", 'command': '$undeletable_classes', 'args_str': "= ['Object', 'Error']", 'args': ['=', "['Object',", "'Error']"], 'file_path': '@stdlib.class', 'line_number': 18, 'strings': [[False, '$undeletable_classes = ['], [True, "'Object'"], [False, ', '], [True, "'Error'"], [False, ']']], 'arg_strings': [[False, '= ['], [True, "'Object'"], [False, ', '], [True, "'Error'"], [False, ']']]}, {'str': 'if $name in $undeletable_classes', 'command': 'if', 'args_str': '$name in $undeletable_classes', 'args': ['$name', 'in', '$undeletable_classes'], 'file_path': '@stdlib.class', 'line_number': 19, 'strings': [[False, 'if $name in $undeletable_classes']], 'arg_strings': [[False, '$name in $undeletable_classes']]}, {'str': 'mem not ($name in $undeletable_classes)', 'command': 'mem', 'args_str': 'not ($name in $undeletable_classes)', 'args': ['not', '($name', 'in', '$undeletable_classes)'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'mem not ($name in $undeletable_classes)']], 'arg_strings': [[False, 'not ($name in $undeletable_classes)']]}, {'str': 'gotoif tmplabelif27_2', 'command': 'gotoif', 'args_str': 'tmplabelif27_2', 'args': ['tmplabelif27_2'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'gotoif tmplabelif27_2']], 'arg_strings': [[False, 'tmplabelif27_2']]}, {'str': 'raise (Error(\'ClassCannotBeDeleted\', \'class "\' + $name + \'" is a builtin class and cannot be deleted\'))', 'command': 'raise', 'args_str': '(Error(\'ClassCannotBeDeleted\', \'class "\' + $name + \'" is a builtin class and cannot be deleted\'))', 'args': ["(Error('ClassCannotBeDeleted',", "'class", '"\'', '+', '$name', '+', '\'"', 'is', 'a', 'builtin', 'class', 'and', 'cannot', 'be', "deleted'))"], 'file_path': '@stdlib.class', 'line_number': 20, 'strings': [[False, 'raise (Error('], [True, "'ClassCannotBeDeleted'"], [False, ', '], [True, '\'class "\''], [False, ' + $name + '], [True, '\'" is a builtin class and cannot be deleted\''], [False, '))']], 'arg_strings': [[False, '(Error('], [True, "'ClassCannotBeDeleted'"], [False, ', '], [True, '\'class "\''], [False, ' + $name + '], [True, '\'" is a builtin class and cannot be deleted\''], [False, '))']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 21, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif27_2', 'command': 'label', 'args_str': 'tmplabelif27_2', 'args': ['tmplabelif27_2'], 'file_path': '<system>', 'line_number': 26, 'strings': [[False, 'label tmplabelif27_2']], 'arg_strings': [[False, 'tmplabelif27_2']]}, {'str': 'label tmplabelif27_end', 'command': 'label', 'args_str': 'tmplabelif27_end', 'args': ['tmplabelif27_end'], 'file_path': '<system>', 'line_number': 26, 'strings': [[False, 'label tmplabelif27_end']], 'arg_strings': [[False, 'tmplabelif27_end']]}, {'str': 'python ("del self.classes[self.get_var(\'name\')]")', 'command': 'python', 'args_str': '("del self.classes[self.get_var(\'name\')]")', 'args': ['("del', 'self.classes[self.get_var(\'name\')]")'], 'file_path': '@stdlib.class', 'line_number': 22, 'strings': [[False, 'python ('], [True, '"del self.classes[self.get_var(\'name\')]"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"del self.classes[self.get_var(\'name\')]"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 23, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 24, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}]
modules["stdlib.debug"] = [{'str': '@doc """Starts the debug shell. Gets a message as string"""', 'command': '@doc', 'args_str': '"""Starts the debug shell. Gets a message as string"""', 'args': ['"""Starts', 'the', 'debug', 'shell.', 'Gets', 'a', 'message', 'as', 'string"""'], 'file_path': '@stdlib.debug', 'line_number': 1, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Starts the debug shell. Gets a message as string"'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Starts the debug shell. Gets a message as string"'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func debug()', 'command': 'func', 'args_str': 'debug()', 'args': ['debug()'], 'file_path': '@stdlib.debug', 'line_number': 2, 'strings': [[False, 'func debug()']], 'arg_strings': [[False, 'debug()']]}, {'str': '$tmp_pashmak_debug_message = str(^)', 'command': '$tmp_pashmak_debug_message', 'args_str': '= str(^)', 'args': ['=', 'str(^)'], 'file_path': '@stdlib.debug', 'line_number': 3, 'strings': [[False, '$tmp_pashmak_debug_message = str(^)']], 'arg_strings': [[False, '= str(^)']]}, {'str': "if not is_defined('DEBUG')", 'command': 'if', 'args_str': "not is_defined('DEBUG')", 'args': ['not', "is_defined('DEBUG')"], 'file_path': '@stdlib.debug', 'line_number': 4, 'strings': [[False, 'if not is_defined('], [True, "'DEBUG'"], [False, ')']], 'arg_strings': [[False, 'not is_defined('], [True, "'DEBUG'"], [False, ')']]}, {'str': "mem not (not is_defined('DEBUG'))", 'command': 'mem', 'args_str': "not (not is_defined('DEBUG'))", 'args': ['not', '(not', "is_defined('DEBUG'))"], 'file_path': '<system>', 'line_number': 3, 'strings': [[False, 'mem not (not is_defined('], [True, "'DEBUG'"], [False, '))']], 'arg_strings': [[False, 'not (not is_defined('], [True, "'DEBUG'"], [False, '))']]}, {'str': 'gotoif tmplabelif28_2', 'command': 'gotoif', 'args_str': 'tmplabelif28_2', 'args': ['tmplabelif28_2'], 'file_path': '<system>', 'line_number': 3, 'strings': [[False, 'gotoif tmplabelif28_2']], 'arg_strings': [[False, 'tmplabelif28_2']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 5, 'strings': [[False, 'return']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 6, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif28_2', 'command': 'label', 'args_str': 'tmplabelif28_2', 'args': ['tmplabelif28_2'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'label tmplabelif28_2']], 'arg_strings': [[False, 'tmplabelif28_2']]}, {'str': 'label tmplabelif28_end', 'command': 'label', 'args_str': 'tmplabelif28_end', 'args': ['tmplabelif28_end'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'label tmplabelif28_end']], 'arg_strings': [[False, 'tmplabelif28_end']]}, {'str': 'if not DEBUG', 'command': 'if', 'args_str': 'not DEBUG', 'args': ['not', 'DEBUG'], 'file_path': '@stdlib.debug', 'line_number': 7, 'strings': [[False, 'if not DEBUG']], 'arg_strings': [[False, 'not DEBUG']]}, {'str': 'mem not (not DEBUG)', 'command': 'mem', 'args_str': 'not (not DEBUG)', 'args': ['not', '(not', 'DEBUG)'], 'file_path': '<system>', 'line_number': 10, 'strings': [[False, 'mem not (not DEBUG)']], 'arg_strings': [[False, 'not (not DEBUG)']]}, {'str': 'gotoif tmplabelif29_2', 'command': 'gotoif', 'args_str': 'tmplabelif29_2', 'args': ['tmplabelif29_2'], 'file_path': '<system>', 'line_number': 10, 'strings': [[False, 'gotoif tmplabelif29_2']], 'arg_strings': [[False, 'tmplabelif29_2']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 8, 'strings': [[False, 'return']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 9, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif29_2', 'command': 'label', 'args_str': 'tmplabelif29_2', 'args': ['tmplabelif29_2'], 'file_path': '<system>', 'line_number': 14, 'strings': [[False, 'label tmplabelif29_2']], 'arg_strings': [[False, 'tmplabelif29_2']]}, {'str': 'label tmplabelif29_end', 'command': 'label', 'args_str': 'tmplabelif29_end', 'args': ['tmplabelif29_end'], 'file_path': '<system>', 'line_number': 14, 'strings': [[False, 'label tmplabelif29_end']], 'arg_strings': [[False, 'tmplabelif29_end']]}, {'str': "if is_defined('DEBUG_HEADER_TITLE')", 'command': 'if', 'args_str': "is_defined('DEBUG_HEADER_TITLE')", 'args': ["is_defined('DEBUG_HEADER_TITLE')"], 'file_path': '@stdlib.debug', 'line_number': 10, 'strings': [[False, 'if is_defined('], [True, "'DEBUG_HEADER_TITLE'"], [False, ')']], 'arg_strings': [[False, 'is_defined('], [True, "'DEBUG_HEADER_TITLE'"], [False, ')']]}, {'str': "mem not (is_defined('DEBUG_HEADER_TITLE'))", 'command': 'mem', 'args_str': "not (is_defined('DEBUG_HEADER_TITLE'))", 'args': ['not', "(is_defined('DEBUG_HEADER_TITLE'))"], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'mem not (is_defined('], [True, "'DEBUG_HEADER_TITLE'"], [False, '))']], 'arg_strings': [[False, 'not (is_defined('], [True, "'DEBUG_HEADER_TITLE'"], [False, '))']]}, {'str': 'gotoif tmplabelif30_2', 'command': 'gotoif', 'args_str': 'tmplabelif30_2', 'args': ['tmplabelif30_2'], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'gotoif tmplabelif30_2']], 'arg_strings': [[False, 'tmplabelif30_2']]}, {'str': 'println DEBUG_HEADER_TITLE', 'command': 'println', 'args_str': 'DEBUG_HEADER_TITLE', 'args': ['DEBUG_HEADER_TITLE'], 'file_path': '@stdlib.debug', 'line_number': 11, 'strings': [[False, 'println DEBUG_HEADER_TITLE']], 'arg_strings': [[False, 'DEBUG_HEADER_TITLE']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 12, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif30_end', 'command': 'goto', 'args_str': 'tmplabelif30_end', 'args': ['tmplabelif30_end'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'goto tmplabelif30_end']], 'arg_strings': [[False, 'tmplabelif30_end']]}, {'str': 'label tmplabelif30_2', 'command': 'label', 'args_str': 'tmplabelif30_2', 'args': ['tmplabelif30_2'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'label tmplabelif30_2']], 'arg_strings': [[False, 'tmplabelif30_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif30_3', 'command': 'gotoif', 'args_str': 'tmplabelif30_3', 'args': ['tmplabelif30_3'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'gotoif tmplabelif30_3']], 'arg_strings': [[False, 'tmplabelif30_3']]}, {'str': 'println \'Debug started (\' + $tmp_pashmak_debug_message + \') at \' + python(\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\') + \':\' + str(python(\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\'))', 'command': 'println', 'args_str': '\'Debug started (\' + $tmp_pashmak_debug_message + \') at \' + python(\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\') + \':\' + str(python(\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\'))', 'args': ["'Debug", 'started', "('", '+', '$tmp_pashmak_debug_message', '+', "')", 'at', "'", '+', "python('self.mem", '=', 'self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\')', '+', "':'", '+', "str(python('self.mem", '=', 'self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\'))'], 'file_path': '@stdlib.debug', 'line_number': 13, 'strings': [[False, 'println '], [True, "'Debug started ('"], [False, ' + $tmp_pashmak_debug_message + '], [True, "') at '"], [False, ' + python('], [True, '\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\''], [False, ') + '], [True, "':'"], [False, ' + str(python('], [True, '\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\''], [False, '))']], 'arg_strings': [[False, ''], [True, "'Debug started ('"], [False, ' + $tmp_pashmak_debug_message + '], [True, "') at '"], [False, ' + python('], [True, '\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\''], [False, ') + '], [True, "':'"], [False, ' + str(python('], [True, '\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\''], [False, '))']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 14, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif30_3', 'command': 'label', 'args_str': 'tmplabelif30_3', 'args': ['tmplabelif30_3'], 'file_path': '<system>', 'line_number': 27, 'strings': [[False, 'label tmplabelif30_3']], 'arg_strings': [[False, 'tmplabelif30_3']]}, {'str': 'label tmplabelif30_end', 'command': 'label', 'args_str': 'tmplabelif30_end', 'args': ['tmplabelif30_end'], 'file_path': '<system>', 'line_number': 27, 'strings': [[False, 'label tmplabelif30_end']], 'arg_strings': [[False, 'tmplabelif30_end']]}, {'str': 'while true', 'command': 'while', 'args_str': 'true', 'args': ['true'], 'file_path': '@stdlib.debug', 'line_number': 15, 'strings': [[False, 'while true']], 'arg_strings': [[False, 'true']]}, {'str': "$tmp_pashmak_debug_cmd = read('> ')->strip()", 'command': '$tmp_pashmak_debug_cmd', 'args_str': "= read('> ')->strip()", 'args': ['=', "read('>", "')->strip()"], 'file_path': '@stdlib.debug', 'line_number': 16, 'strings': [[False, '$tmp_pashmak_debug_cmd = read('], [True, "'> '"], [False, ')->strip()']], 'arg_strings': [[False, '= read('], [True, "'> '"], [False, ')->strip()']]}, {'str': "if $tmp_pashmak_debug_cmd == 'n'", 'command': 'if', 'args_str': "$tmp_pashmak_debug_cmd == 'n'", 'args': ['$tmp_pashmak_debug_cmd', '==', "'n'"], 'file_path': '@stdlib.debug', 'line_number': 17, 'strings': [[False, 'if $tmp_pashmak_debug_cmd == '], [True, "'n'"], [False, '']], 'arg_strings': [[False, '$tmp_pashmak_debug_cmd == '], [True, "'n'"], [False, '']]}, {'str': "mem not ($tmp_pashmak_debug_cmd == 'n')", 'command': 'mem', 'args_str': "not ($tmp_pashmak_debug_cmd == 'n')", 'args': ['not', '($tmp_pashmak_debug_cmd', '==', "'n')"], 'file_path': '<system>', 'line_number': 32, 'strings': [[False, 'mem not ($tmp_pashmak_debug_cmd == '], [True, "'n'"], [False, ')']], 'arg_strings': [[False, 'not ($tmp_pashmak_debug_cmd == '], [True, "'n'"], [False, ')']]}, {'str': 'gotoif tmplabelif31_2', 'command': 'gotoif', 'args_str': 'tmplabelif31_2', 'args': ['tmplabelif31_2'], 'file_path': '<system>', 'line_number': 32, 'strings': [[False, 'gotoif tmplabelif31_2']], 'arg_strings': [[False, 'tmplabelif31_2']]}, {'str': 'break ', 'command': 'break', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 18, 'strings': [[False, 'break']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 19, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif31_2', 'command': 'label', 'args_str': 'tmplabelif31_2', 'args': ['tmplabelif31_2'], 'file_path': '<system>', 'line_number': 36, 'strings': [[False, 'label tmplabelif31_2']], 'arg_strings': [[False, 'tmplabelif31_2']]}, {'str': 'label tmplabelif31_end', 'command': 'label', 'args_str': 'tmplabelif31_end', 'args': ['tmplabelif31_end'], 'file_path': '<system>', 'line_number': 36, 'strings': [[False, 'label tmplabelif31_end']], 'arg_strings': [[False, 'tmplabelif31_end']]}, {'str': 'try tmp_pashmak_debug_error', 'command': 'try', 'args_str': 'tmp_pashmak_debug_error', 'args': ['tmp_pashmak_debug_error'], 'file_path': '@stdlib.debug', 'line_number': 20, 'strings': [[False, 'try tmp_pashmak_debug_error']], 'arg_strings': [[False, 'tmp_pashmak_debug_error']]}, {'str': 'eval ($tmp_pashmak_debug_cmd)', 'command': 'eval', 'args_str': '($tmp_pashmak_debug_cmd)', 'args': ['($tmp_pashmak_debug_cmd)'], 'file_path': '@stdlib.debug', 'line_number': 21, 'strings': [[False, 'eval ($tmp_pashmak_debug_cmd)']], 'arg_strings': [[False, '($tmp_pashmak_debug_cmd)']]}, {'str': 'endtry ', 'command': 'endtry', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 22, 'strings': [[False, 'endtry']], 'arg_strings': [[False, '']]}, {'str': 'goto after_tmp_pashmak_debug_error', 'command': 'goto', 'args_str': 'after_tmp_pashmak_debug_error', 'args': ['after_tmp_pashmak_debug_error'], 'file_path': '@stdlib.debug', 'line_number': 23, 'strings': [[False, 'goto after_tmp_pashmak_debug_error']], 'arg_strings': [[False, 'after_tmp_pashmak_debug_error']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'arg_strings': [[False, '']]}, {'str': 'label tmp_pashmak_debug_error', 'command': 'label', 'args_str': 'tmp_pashmak_debug_error', 'args': ['tmp_pashmak_debug_error'], 'file_path': '@stdlib.debug', 'line_number': 23, 'strings': [[False, 'label tmp_pashmak_debug_error']], 'arg_strings': [[False, 'tmp_pashmak_debug_error']]}, {'str': '$tmp_pashmak_debug_ex = ^', 'command': '$tmp_pashmak_debug_ex', 'args_str': '= ^', 'args': ['=', '^'], 'file_path': '@stdlib.debug', 'line_number': 24, 'strings': [[False, '$tmp_pashmak_debug_ex = ^']], 'arg_strings': [[False, '= ^']]}, {'str': "println $tmp_pashmak_debug_ex->type + ': ' + $tmp_pashmak_debug_ex->message", 'command': 'println', 'args_str': "$tmp_pashmak_debug_ex->type + ': ' + $tmp_pashmak_debug_ex->message", 'args': ['$tmp_pashmak_debug_ex->type', '+', "':", "'", '+', '$tmp_pashmak_debug_ex->message'], 'file_path': '@stdlib.debug', 'line_number': 25, 'strings': [[False, 'println $tmp_pashmak_debug_ex->type + '], [True, "': '"], [False, ' + $tmp_pashmak_debug_ex->message']], 'arg_strings': [[False, '$tmp_pashmak_debug_ex->type + '], [True, "': '"], [False, ' + $tmp_pashmak_debug_ex->message']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'arg_strings': [[False, '']]}, {'str': 'label after_tmp_pashmak_debug_error', 'command': 'label', 'args_str': 'after_tmp_pashmak_debug_error', 'args': ['after_tmp_pashmak_debug_error'], 'file_path': '@stdlib.debug', 'line_number': 26, 'strings': [[False, 'label after_tmp_pashmak_debug_error']], 'arg_strings': [[False, 'after_tmp_pashmak_debug_error']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 27, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': "if not is_defined('DEBUG_HEADER_TITLE')", 'command': 'if', 'args_str': "not is_defined('DEBUG_HEADER_TITLE')", 'args': ['not', "is_defined('DEBUG_HEADER_TITLE')"], 'file_path': '@stdlib.debug', 'line_number': 28, 'strings': [[False, 'if not is_defined('], [True, "'DEBUG_HEADER_TITLE'"], [False, ')']], 'arg_strings': [[False, 'not is_defined('], [True, "'DEBUG_HEADER_TITLE'"], [False, ')']]}, {'str': "mem not (not is_defined('DEBUG_HEADER_TITLE'))", 'command': 'mem', 'args_str': "not (not is_defined('DEBUG_HEADER_TITLE'))", 'args': ['not', '(not', "is_defined('DEBUG_HEADER_TITLE'))"], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'mem not (not is_defined('], [True, "'DEBUG_HEADER_TITLE'"], [False, '))']], 'arg_strings': [[False, 'not (not is_defined('], [True, "'DEBUG_HEADER_TITLE'"], [False, '))']]}, {'str': 'gotoif tmplabelif32_2', 'command': 'gotoif', 'args_str': 'tmplabelif32_2', 'args': ['tmplabelif32_2'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'gotoif tmplabelif32_2']], 'arg_strings': [[False, 'tmplabelif32_2']]}, {'str': "println 'Debug finished.'", 'command': 'println', 'args_str': "'Debug finished.'", 'args': ["'Debug", "finished.'"], 'file_path': '@stdlib.debug', 'line_number': 29, 'strings': [[False, 'println '], [True, "'Debug finished.'"], [False, '']], 'arg_strings': [[False, ''], [True, "'Debug finished.'"], [False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 30, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif32_2', 'command': 'label', 'args_str': 'tmplabelif32_2', 'args': ['tmplabelif32_2'], 'file_path': '<system>', 'line_number': 54, 'strings': [[False, 'label tmplabelif32_2']], 'arg_strings': [[False, 'tmplabelif32_2']]}, {'str': 'label tmplabelif32_end', 'command': 'label', 'args_str': 'tmplabelif32_end', 'args': ['tmplabelif32_end'], 'file_path': '<system>', 'line_number': 54, 'strings': [[False, 'label tmplabelif32_end']], 'arg_strings': [[False, 'tmplabelif32_end']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 31, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}]
modules["stdlib.defines"] = [{'str': '@doc "Defines a name. First argument is the name and second argument is the value"', 'command': '@doc', 'args_str': '"Defines a name. First argument is the name and second argument is the value"', 'args': ['"Defines', 'a', 'name.', 'First', 'argument', 'is', 'the', 'name', 'and', 'second', 'argument', 'is', 'the', 'value"'], 'file_path': '@stdlib.defines', 'line_number': 1, 'strings': [[False, '@doc '], [True, '"Defines a name. First argument is the name and second argument is the value"'], [False, '']], 'arg_strings': [[False, ''], [True, '"Defines a name. First argument is the name and second argument is the value"'], [False, '']]}, {'str': 'func define(string $name, $value)', 'command': 'func', 'args_str': 'define(string $name, $value)', 'args': ['define(string', '$name,', '$value)'], 'file_path': '@stdlib.defines', 'line_number': 2, 'strings': [[False, 'func define(string $name, $value)']], 'arg_strings': [[False, 'define(string $name, $value)']]}, {'str': 'if is_defined($name)', 'command': 'if', 'args_str': 'is_defined($name)', 'args': ['is_defined($name)'], 'file_path': '@stdlib.defines', 'line_number': 3, 'strings': [[False, 'if is_defined($name)']], 'arg_strings': [[False, 'is_defined($name)']]}, {'str': 'mem not (is_defined($name))', 'command': 'mem', 'args_str': 'not (is_defined($name))', 'args': ['not', '(is_defined($name))'], 'file_path': '<system>', 'line_number': 2, 'strings': [[False, 'mem not (is_defined($name))']], 'arg_strings': [[False, 'not (is_defined($name))']]}, {'str': 'gotoif tmplabelif33_2', 'command': 'gotoif', 'args_str': 'tmplabelif33_2', 'args': ['tmplabelif33_2'], 'file_path': '<system>', 'line_number': 2, 'strings': [[False, 'gotoif tmplabelif33_2']], 'arg_strings': [[False, 'tmplabelif33_2']]}, {'str': 'raise Error(\'DefineError\', \'name "\' + $name + \'" already defined\')', 'command': 'raise', 'args_str': 'Error(\'DefineError\', \'name "\' + $name + \'" already defined\')', 'args': ["Error('DefineError',", "'name", '"\'', '+', '$name', '+', '\'"', 'already', "defined')"], 'file_path': '@stdlib.defines', 'line_number': 4, 'strings': [[False, 'raise Error('], [True, "'DefineError'"], [False, ', '], [True, '\'name "\''], [False, ' + $name + '], [True, '\'" already defined\''], [False, ')']], 'arg_strings': [[False, 'Error('], [True, "'DefineError'"], [False, ', '], [True, '\'name "\''], [False, ' + $name + '], [True, '\'" already defined\''], [False, ')']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 5, 'strings': [[False, 'return']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 6, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif33_2', 'command': 'label', 'args_str': 'tmplabelif33_2', 'args': ['tmplabelif33_2'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'label tmplabelif33_2']], 'arg_strings': [[False, 'tmplabelif33_2']]}, {'str': 'label tmplabelif33_end', 'command': 'label', 'args_str': 'tmplabelif33_end', 'args': ['tmplabelif33_end'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'label tmplabelif33_end']], 'arg_strings': [[False, 'tmplabelif33_end']]}, {'str': 'python ("self.defines[self.get_var(\'name\')] = self.get_var(\'value\')")', 'command': 'python', 'args_str': '("self.defines[self.get_var(\'name\')] = self.get_var(\'value\')")', 'args': ['("self.defines[self.get_var(\'name\')]', '=', 'self.get_var(\'value\')")'], 'file_path': '@stdlib.defines', 'line_number': 7, 'strings': [[False, 'python ('], [True, '"self.defines[self.get_var(\'name\')] = self.get_var(\'value\')"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"self.defines[self.get_var(\'name\')] = self.get_var(\'value\')"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 8, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "Returns all of defined names as a dictionary"', 'command': '@doc', 'args_str': '"Returns all of defined names as a dictionary"', 'args': ['"Returns', 'all', 'of', 'defined', 'names', 'as', 'a', 'dictionary"'], 'file_path': '@stdlib.defines', 'line_number': 9, 'strings': [[False, '@doc '], [True, '"Returns all of defined names as a dictionary"'], [False, '']], 'arg_strings': [[False, ''], [True, '"Returns all of defined names as a dictionary"'], [False, '']]}, {'str': 'func dict::all_defines()', 'command': 'func', 'args_str': 'dict::all_defines()', 'args': ['dict::all_defines()'], 'file_path': '@stdlib.defines', 'line_number': 10, 'strings': [[False, 'func dict::all_defines()']], 'arg_strings': [[False, 'dict::all_defines()']]}, {'str': "return python('self.mem = self.defines')", 'command': 'return', 'args_str': "python('self.mem = self.defines')", 'args': ["python('self.mem", '=', "self.defines')"], 'file_path': '@stdlib.defines', 'line_number': 11, 'strings': [[False, 'return python('], [True, "'self.mem = self.defines'"], [False, ')']], 'arg_strings': [[False, 'python('], [True, "'self.mem = self.defines'"], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 12, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "Gets a name and checks is defined and return boolean"', 'command': '@doc', 'args_str': '"Gets a name and checks is defined and return boolean"', 'args': ['"Gets', 'a', 'name', 'and', 'checks', 'is', 'defined', 'and', 'return', 'boolean"'], 'file_path': '@stdlib.defines', 'line_number': 13, 'strings': [[False, '@doc '], [True, '"Gets a name and checks is defined and return boolean"'], [False, '']], 'arg_strings': [[False, ''], [True, '"Gets a name and checks is defined and return boolean"'], [False, '']]}, {'str': 'func bool::is_defined(string $name)', 'command': 'func', 'args_str': 'bool::is_defined(string $name)', 'args': ['bool::is_defined(string', '$name)'], 'file_path': '@stdlib.defines', 'line_number': 14, 'strings': [[False, 'func bool::is_defined(string $name)']], 'arg_strings': [[False, 'bool::is_defined(string $name)']]}, {'str': 'return $name in list(all_defines()->keys())', 'command': 'return', 'args_str': '$name in list(all_defines()->keys())', 'args': ['$name', 'in', 'list(all_defines()->keys())'], 'file_path': '@stdlib.defines', 'line_number': 15, 'strings': [[False, 'return $name in list(all_defines()->keys())']], 'arg_strings': [[False, '$name in list(all_defines()->keys())']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 16, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "Deletes a defined name. Gets name as string"', 'command': '@doc', 'args_str': '"Deletes a defined name. Gets name as string"', 'args': ['"Deletes', 'a', 'defined', 'name.', 'Gets', 'name', 'as', 'string"'], 'file_path': '@stdlib.defines', 'line_number': 17, 'strings': [[False, '@doc '], [True, '"Deletes a defined name. Gets name as string"'], [False, '']], 'arg_strings': [[False, ''], [True, '"Deletes a defined name. Gets name as string"'], [False, '']]}, {'str': 'func undefine(string $name)', 'command': 'func', 'args_str': 'undefine(string $name)', 'args': ['undefine(string', '$name)'], 'file_path': '@stdlib.defines', 'line_number': 18, 'strings': [[False, 'func undefine(string $name)']], 'arg_strings': [[False, 'undefine(string $name)']]}, {'str': 'if not is_defined($name)', 'command': 'if', 'args_str': 'not is_defined($name)', 'args': ['not', 'is_defined($name)'], 'file_path': '@stdlib.defines', 'line_number': 19, 'strings': [[False, 'if not is_defined($name)']], 'arg_strings': [[False, 'not is_defined($name)']]}, {'str': 'mem not (not is_defined($name))', 'command': 'mem', 'args_str': 'not (not is_defined($name))', 'args': ['not', '(not', 'is_defined($name))'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'mem not (not is_defined($name))']], 'arg_strings': [[False, 'not (not is_defined($name))']]}, {'str': 'gotoif tmplabelif34_2', 'command': 'gotoif', 'args_str': 'tmplabelif34_2', 'args': ['tmplabelif34_2'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'gotoif tmplabelif34_2']], 'arg_strings': [[False, 'tmplabelif34_2']]}, {'str': 'raise Error(\'DefineError\', \'name "\' + $name + \'" is not defined\')', 'command': 'raise', 'args_str': 'Error(\'DefineError\', \'name "\' + $name + \'" is not defined\')', 'args': ["Error('DefineError',", "'name", '"\'', '+', '$name', '+', '\'"', 'is', 'not', "defined')"], 'file_path': '@stdlib.defines', 'line_number': 20, 'strings': [[False, 'raise Error('], [True, "'DefineError'"], [False, ', '], [True, '\'name "\''], [False, ' + $name + '], [True, '\'" is not defined\''], [False, ')']], 'arg_strings': [[False, 'Error('], [True, "'DefineError'"], [False, ', '], [True, '\'name "\''], [False, ' + $name + '], [True, '\'" is not defined\''], [False, ')']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 21, 'strings': [[False, 'return']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 22, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif34_2', 'command': 'label', 'args_str': 'tmplabelif34_2', 'args': ['tmplabelif34_2'], 'file_path': '<system>', 'line_number': 27, 'strings': [[False, 'label tmplabelif34_2']], 'arg_strings': [[False, 'tmplabelif34_2']]}, {'str': 'label tmplabelif34_end', 'command': 'label', 'args_str': 'tmplabelif34_end', 'args': ['tmplabelif34_end'], 'file_path': '<system>', 'line_number': 27, 'strings': [[False, 'label tmplabelif34_end']], 'arg_strings': [[False, 'tmplabelif34_end']]}, {'str': 'python ("del self.defines[self.get_var(\'name\')]")', 'command': 'python', 'args_str': '("del self.defines[self.get_var(\'name\')]")', 'args': ['("del', 'self.defines[self.get_var(\'name\')]")'], 'file_path': '@stdlib.defines', 'line_number': 23, 'strings': [[False, 'python ('], [True, '"del self.defines[self.get_var(\'name\')]"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"del self.defines[self.get_var(\'name\')]"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 24, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "Re-Defines a name. If name exists, undefines that and defines new value, and if name currently not exists, defines new name"', 'command': '@doc', 'args_str': '"Re-Defines a name. If name exists, undefines that and defines new value, and if name currently not exists, defines new name"', 'args': ['"Re-Defines', 'a', 'name.', 'If', 'name', 'exists,', 'undefines', 'that', 'and', 'defines', 'new', 'value,', 'and', 'if', 'name', 'currently', 'not', 'exists,', 'defines', 'new', 'name"'], 'file_path': '@stdlib.defines', 'line_number': 25, 'strings': [[False, '@doc '], [True, '"Re-Defines a name. If name exists, undefines that and defines new value, and if name currently not exists, defines new name"'], [False, '']], 'arg_strings': [[False, ''], [True, '"Re-Defines a name. If name exists, undefines that and defines new value, and if name currently not exists, defines new name"'], [False, '']]}, {'str': 'func redefine(string $name, $value)', 'command': 'func', 'args_str': 'redefine(string $name, $value)', 'args': ['redefine(string', '$name,', '$value)'], 'file_path': '@stdlib.defines', 'line_number': 26, 'strings': [[False, 'func redefine(string $name, $value)']], 'arg_strings': [[False, 'redefine(string $name, $value)']]}, {'str': 'if is_defined($name)', 'command': 'if', 'args_str': 'is_defined($name)', 'args': ['is_defined($name)'], 'file_path': '@stdlib.defines', 'line_number': 27, 'strings': [[False, 'if is_defined($name)']], 'arg_strings': [[False, 'is_defined($name)']]}, {'str': 'mem not (is_defined($name))', 'command': 'mem', 'args_str': 'not (is_defined($name))', 'args': ['not', '(is_defined($name))'], 'file_path': '<system>', 'line_number': 34, 'strings': [[False, 'mem not (is_defined($name))']], 'arg_strings': [[False, 'not (is_defined($name))']]}, {'str': 'gotoif tmplabelif35_2', 'command': 'gotoif', 'args_str': 'tmplabelif35_2', 'args': ['tmplabelif35_2'], 'file_path': '<system>', 'line_number': 34, 'strings': [[False, 'gotoif tmplabelif35_2']], 'arg_strings': [[False, 'tmplabelif35_2']]}, {'str': 'undefine ($name)', 'command': 'undefine', 'args_str': '($name)', 'args': ['($name)'], 'file_path': '@stdlib.defines', 'line_number': 28, 'strings': [[False, 'undefine ($name)']], 'arg_strings': [[False, '($name)']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 29, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif35_2', 'command': 'label', 'args_str': 'tmplabelif35_2', 'args': ['tmplabelif35_2'], 'file_path': '<system>', 'line_number': 38, 'strings': [[False, 'label tmplabelif35_2']], 'arg_strings': [[False, 'tmplabelif35_2']]}, {'str': 'label tmplabelif35_end', 'command': 'label', 'args_str': 'tmplabelif35_end', 'args': ['tmplabelif35_end'], 'file_path': '<system>', 'line_number': 38, 'strings': [[False, 'label tmplabelif35_end']], 'arg_strings': [[False, 'tmplabelif35_end']]}, {'str': 'define ($name, $value)', 'command': 'define', 'args_str': '($name, $value)', 'args': ['($name,', '$value)'], 'file_path': '@stdlib.defines', 'line_number': 30, 'strings': [[False, 'define ($name, $value)']], 'arg_strings': [[False, '($name, $value)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 31, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}]
modules["stdlib.exception"] = [{'str': '@doc """A model for error exceptions.\\nAlso is used by `raise` function.\\nExample: Error(\'ErrorType\', \'message of error\')"""', 'command': '@doc', 'args_str': '"""A model for error exceptions.\\nAlso is used by `raise` function.\\nExample: Error(\'ErrorType\', \'message of error\')"""', 'args': ['"""A', 'model', 'for', 'error', 'exceptions.\\nAlso', 'is', 'used', 'by', '`raise`', 'function.\\nExample:', "Error('ErrorType',", "'message", 'of', 'error\')"""'], 'file_path': '@stdlib.exception', 'line_number': 1, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"A model for error exceptions.\\nAlso is used by `raise` function.\\nExample: Error(\'ErrorType\', \'message of error\')"'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"A model for error exceptions.\\nAlso is used by `raise` function.\\nExample: Error(\'ErrorType\', \'message of error\')"'], [False, ''], [True, '""'], [False, '']]}, {'str': 'class Error', 'command': 'class', 'args_str': 'Error', 'args': ['Error'], 'file_path': '@stdlib.exception', 'line_number': 2, 'strings': [[False, 'class Error']], 'arg_strings': [[False, 'Error']]}, {'str': '$type ', 'command': '$type', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 3, 'strings': [[False, '$type']], 'arg_strings': [[False, '']]}, {'str': '$message ', 'command': '$message', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 4, 'strings': [[False, '$message']], 'arg_strings': [[False, '']]}, {'str': 'func __init__($type, $message)', 'command': 'func', 'args_str': '__init__($type, $message)', 'args': ['__init__($type,', '$message)'], 'file_path': '@stdlib.exception', 'line_number': 5, 'strings': [[False, 'func __init__($type, $message)']], 'arg_strings': [[False, '__init__($type, $message)']]}, {'str': '$this->type = $type', 'command': '$this->type', 'args_str': '= $type', 'args': ['=', '$type'], 'file_path': '@stdlib.exception', 'line_number': 6, 'strings': [[False, '$this->type = $type']], 'arg_strings': [[False, '= $type']]}, {'str': '$this->message = $message', 'command': '$this->message', 'args_str': '= $message', 'args': ['=', '$message'], 'file_path': '@stdlib.exception', 'line_number': 7, 'strings': [[False, '$this->message = $message']], 'arg_strings': [[False, '= $message']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 8, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func string::__str__()', 'command': 'func', 'args_str': 'string::__str__()', 'args': ['string::__str__()'], 'file_path': '@stdlib.exception', 'line_number': 9, 'strings': [[False, 'func string::__str__()']], 'arg_strings': [[False, 'string::__str__()']]}, {'str': "return $this->type + ': ' + $this->message", 'command': 'return', 'args_str': "$this->type + ': ' + $this->message", 'args': ['$this->type', '+', "':", "'", '+', '$this->message'], 'file_path': '@stdlib.exception', 'line_number': 10, 'strings': [[False, 'return $this->type + '], [True, "': '"], [False, ' + $this->message']], 'arg_strings': [[False, '$this->type + '], [True, "': '"], [False, ' + $this->message']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 11, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endclass ', 'command': 'endclass', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 12, 'strings': [[False, 'endclass']], 'arg_strings': [[False, '']]}, {'str': '@doc """Raises a error.\\nGets a object from `Error` class as error."""', 'command': '@doc', 'args_str': '"""Raises a error.\\nGets a object from `Error` class as error."""', 'args': ['"""Raises', 'a', 'error.\\nGets', 'a', 'object', 'from', '`Error`', 'class', 'as', 'error."""'], 'file_path': '@stdlib.exception', 'line_number': 13, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Raises a error.\\nGets a object from `Error` class as error."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Raises a error.\\nGets a object from `Error` class as error."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func raise(Error $ex)', 'command': 'func', 'args_str': 'raise(Error $ex)', 'args': ['raise(Error', '$ex)'], 'file_path': '@stdlib.exception', 'line_number': 14, 'strings': [[False, 'func raise(Error $ex)']], 'arg_strings': [[False, 'raise(Error $ex)']]}, {'str': 'python ("self.raise_error(\'" + str($ex->type) + "\', \'" + str($ex->message) + "\')")', 'command': 'python', 'args_str': '("self.raise_error(\'" + str($ex->type) + "\', \'" + str($ex->message) + "\')")', 'args': ['("self.raise_error(\'"', '+', 'str($ex->type)', '+', '"\',', '\'"', '+', 'str($ex->message)', '+', '"\')")'], 'file_path': '@stdlib.exception', 'line_number': 15, 'strings': [[False, 'python ('], [True, '"self.raise_error(\'"'], [False, ' + str($ex->type) + '], [True, '"\', \'"'], [False, ' + str($ex->message) + '], [True, '"\')"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"self.raise_error(\'"'], [False, ' + str($ex->type) + '], [True, '"\', \'"'], [False, ' + str($ex->message) + '], [True, '"\')"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 16, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}]
modules["stdlib.func"] = [{'str': 'namespace func', 'command': 'namespace', 'args_str': 'func', 'args': ['func'], 'file_path': '@stdlib.func', 'line_number': 1, 'strings': [[False, 'namespace func']], 'arg_strings': [[False, 'func']]}, {'str': '@doc """    Returns list of defined functions as list of strings(name of function).    """', 'command': '@doc', 'args_str': '"""    Returns list of defined functions as list of strings(name of function).    """', 'args': ['"""', 'Returns', 'list', 'of', 'defined', 'functions', 'as', 'list', 'of', 'strings(name', 'of', 'function).', '"""'], 'file_path': '@stdlib.func', 'line_number': 2, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns list of defined functions as list of strings(name of function).    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Returns list of defined functions as list of strings(name of function).    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func list()', 'command': 'func', 'args_str': 'list()', 'args': ['list()'], 'file_path': '@stdlib.func', 'line_number': 3, 'strings': [[False, 'func list()']], 'arg_strings': [[False, 'list()']]}, {'str': 'return python("self.mem = list(self.functions.keys())")', 'command': 'return', 'args_str': 'python("self.mem = list(self.functions.keys())")', 'args': ['python("self.mem', '=', 'list(self.functions.keys())")'], 'file_path': '@stdlib.func', 'line_number': 4, 'strings': [[False, 'return python('], [True, '"self.mem = list(self.functions.keys())"'], [False, ')']], 'arg_strings': [[False, 'python('], [True, '"self.mem = list(self.functions.keys())"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 5, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Checks a function exists.\\n    Gets function name as string.\\n    Returns boolean.    """', 'command': '@doc', 'args_str': '"""    Checks a function exists.\\n    Gets function name as string.\\n    Returns boolean.    """', 'args': ['"""', 'Checks', 'a', 'function', 'exists.\\n', 'Gets', 'function', 'name', 'as', 'string.\\n', 'Returns', 'boolean.', '"""'], 'file_path': '@stdlib.func', 'line_number': 6, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Checks a function exists.\\n    Gets function name as string.\\n    Returns boolean.    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Checks a function exists.\\n    Gets function name as string.\\n    Returns boolean.    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func bool::exists(string $name)', 'command': 'func', 'args_str': 'bool::exists(string $name)', 'args': ['bool::exists(string', '$name)'], 'file_path': '@stdlib.func', 'line_number': 7, 'strings': [[False, 'func bool::exists(string $name)']], 'arg_strings': [[False, 'bool::exists(string $name)']]}, {'str': '$name = str($name)', 'command': '$name', 'args_str': '= str($name)', 'args': ['=', 'str($name)'], 'file_path': '@stdlib.func', 'line_number': 8, 'strings': [[False, '$name = str($name)']], 'arg_strings': [[False, '= str($name)']]}, {'str': 'return $name in func.list()', 'command': 'return', 'args_str': '$name in func.list()', 'args': ['$name', 'in', 'func.list()'], 'file_path': '@stdlib.func', 'line_number': 9, 'strings': [[False, 'return $name in func.list()']], 'arg_strings': [[False, '$name in func.list()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 10, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Deletes a function.\\n    Gets function name as string.\\n    (This Cannot delete builtin functions).    """', 'command': '@doc', 'args_str': '"""    Deletes a function.\\n    Gets function name as string.\\n    (This Cannot delete builtin functions).    """', 'args': ['"""', 'Deletes', 'a', 'function.\\n', 'Gets', 'function', 'name', 'as', 'string.\\n', '(This', 'Cannot', 'delete', 'builtin', 'functions).', '"""'], 'file_path': '@stdlib.func', 'line_number': 11, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Deletes a function.\\n    Gets function name as string.\\n    (This Cannot delete builtin functions).    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Deletes a function.\\n    Gets function name as string.\\n    (This Cannot delete builtin functions).    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func delete(string $name)', 'command': 'func', 'args_str': 'delete(string $name)', 'args': ['delete(string', '$name)'], 'file_path': '@stdlib.func', 'line_number': 12, 'strings': [[False, 'func delete(string $name)']], 'arg_strings': [[False, 'delete(string $name)']]}, {'str': '$name = str($name)', 'command': '$name', 'args_str': '= str($name)', 'args': ['=', 'str($name)'], 'file_path': '@stdlib.func', 'line_number': 13, 'strings': [[False, '$name = str($name)']], 'arg_strings': [[False, '= str($name)']]}, {'str': 'if not func.exists($name)', 'command': 'if', 'args_str': 'not func.exists($name)', 'args': ['not', 'func.exists($name)'], 'file_path': '@stdlib.func', 'line_number': 14, 'strings': [[False, 'if not func.exists($name)']], 'arg_strings': [[False, 'not func.exists($name)']]}, {'str': 'mem not (not func.exists($name))', 'command': 'mem', 'args_str': 'not (not func.exists($name))', 'args': ['not', '(not', 'func.exists($name))'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'mem not (not func.exists($name))']], 'arg_strings': [[False, 'not (not func.exists($name))']]}, {'str': 'gotoif tmplabelif36_2', 'command': 'gotoif', 'args_str': 'tmplabelif36_2', 'args': ['tmplabelif36_2'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'gotoif tmplabelif36_2']], 'arg_strings': [[False, 'tmplabelif36_2']]}, {'str': 'raise (Error(\'FunctionNotFound\', \'function "\' + $name + \'" not found\'))', 'command': 'raise', 'args_str': '(Error(\'FunctionNotFound\', \'function "\' + $name + \'" not found\'))', 'args': ["(Error('FunctionNotFound',", "'function", '"\'', '+', '$name', '+', '\'"', 'not', "found'))"], 'file_path': '@stdlib.func', 'line_number': 15, 'strings': [[False, 'raise (Error('], [True, "'FunctionNotFound'"], [False, ', '], [True, '\'function "\''], [False, ' + $name + '], [True, '\'" not found\''], [False, '))']], 'arg_strings': [[False, '(Error('], [True, "'FunctionNotFound'"], [False, ', '], [True, '\'function "\''], [False, ' + $name + '], [True, '\'" not found\''], [False, '))']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 16, 'strings': [[False, 'return']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 17, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif36_2', 'command': 'label', 'args_str': 'tmplabelif36_2', 'args': ['tmplabelif36_2'], 'file_path': '<system>', 'line_number': 18, 'strings': [[False, 'label tmplabelif36_2']], 'arg_strings': [[False, 'tmplabelif36_2']]}, {'str': 'label tmplabelif36_end', 'command': 'label', 'args_str': 'tmplabelif36_end', 'args': ['tmplabelif36_end'], 'file_path': '<system>', 'line_number': 18, 'strings': [[False, 'label tmplabelif36_end']], 'arg_strings': [[False, 'tmplabelif36_end']]}, {'str': "$undeletable_functions = ['func.list', 'func.delete', 'func.exists', 'gset', 'py_load_file', 'system', 'typeof', 'required', 'print', 'import', 'println', 'printl', 'import_once', 'mem', 'rmem', 'python', 'endns', 'exit', 'eval', 'raise', 'assert', 'read']", 'command': '$undeletable_functions', 'args_str': "= ['func.list', 'func.delete', 'func.exists', 'gset', 'py_load_file', 'system', 'typeof', 'required', 'print', 'import', 'println', 'printl', 'import_once', 'mem', 'rmem', 'python', 'endns', 'exit', 'eval', 'raise', 'assert', 'read']", 'args': ['=', "['func.list',", "'func.delete',", "'func.exists',", "'gset',", "'py_load_file',", "'system',", "'typeof',", "'required',", "'print',", "'import',", "'println',", "'printl',", "'import_once',", "'mem',", "'rmem',", "'python',", "'endns',", "'exit',", "'eval',", "'raise',", "'assert',", "'read']"], 'file_path': '@stdlib.func', 'line_number': 18, 'strings': [[False, '$undeletable_functions = ['], [True, "'func.list'"], [False, ', '], [True, "'func.delete'"], [False, ', '], [True, "'func.exists'"], [False, ', '], [True, "'gset'"], [False, ', '], [True, "'py_load_file'"], [False, ', '], [True, "'system'"], [False, ', '], [True, "'typeof'"], [False, ', '], [True, "'required'"], [False, ', '], [True, "'print'"], [False, ', '], [True, "'import'"], [False, ', '], [True, "'println'"], [False, ', '], [True, "'printl'"], [False, ', '], [True, "'import_once'"], [False, ', '], [True, "'mem'"], [False, ', '], [True, "'rmem'"], [False, ', '], [True, "'python'"], [False, ', '], [True, "'endns'"], [False, ', '], [True, "'exit'"], [False, ', '], [True, "'eval'"], [False, ', '], [True, "'raise'"], [False, ', '], [True, "'assert'"], [False, ', '], [True, "'read'"], [False, ']']], 'arg_strings': [[False, '= ['], [True, "'func.list'"], [False, ', '], [True, "'func.delete'"], [False, ', '], [True, "'func.exists'"], [False, ', '], [True, "'gset'"], [False, ', '], [True, "'py_load_file'"], [False, ', '], [True, "'system'"], [False, ', '], [True, "'typeof'"], [False, ', '], [True, "'required'"], [False, ', '], [True, "'print'"], [False, ', '], [True, "'import'"], [False, ', '], [True, "'println'"], [False, ', '], [True, "'printl'"], [False, ', '], [True, "'import_once'"], [False, ', '], [True, "'mem'"], [False, ', '], [True, "'rmem'"], [False, ', '], [True, "'python'"], [False, ', '], [True, "'endns'"], [False, ', '], [True, "'exit'"], [False, ', '], [True, "'eval'"], [False, ', '], [True, "'raise'"], [False, ', '], [True, "'assert'"], [False, ', '], [True, "'read'"], [False, ']']]}, {'str': 'if $name in $undeletable_functions', 'command': 'if', 'args_str': '$name in $undeletable_functions', 'args': ['$name', 'in', '$undeletable_functions'], 'file_path': '@stdlib.func', 'line_number': 19, 'strings': [[False, 'if $name in $undeletable_functions']], 'arg_strings': [[False, '$name in $undeletable_functions']]}, {'str': 'mem not ($name in $undeletable_functions)', 'command': 'mem', 'args_str': 'not ($name in $undeletable_functions)', 'args': ['not', '($name', 'in', '$undeletable_functions)'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'mem not ($name in $undeletable_functions)']], 'arg_strings': [[False, 'not ($name in $undeletable_functions)']]}, {'str': 'gotoif tmplabelif37_2', 'command': 'gotoif', 'args_str': 'tmplabelif37_2', 'args': ['tmplabelif37_2'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'gotoif tmplabelif37_2']], 'arg_strings': [[False, 'tmplabelif37_2']]}, {'str': 'raise (Error(\'FunctionCannotBeDeleted\', \'function "\' + $name + \'" is a builtin function and cannot be deleted\'))', 'command': 'raise', 'args_str': '(Error(\'FunctionCannotBeDeleted\', \'function "\' + $name + \'" is a builtin function and cannot be deleted\'))', 'args': ["(Error('FunctionCannotBeDeleted',", "'function", '"\'', '+', '$name', '+', '\'"', 'is', 'a', 'builtin', 'function', 'and', 'cannot', 'be', "deleted'))"], 'file_path': '@stdlib.func', 'line_number': 20, 'strings': [[False, 'raise (Error('], [True, "'FunctionCannotBeDeleted'"], [False, ', '], [True, '\'function "\''], [False, ' + $name + '], [True, '\'" is a builtin function and cannot be deleted\''], [False, '))']], 'arg_strings': [[False, '(Error('], [True, "'FunctionCannotBeDeleted'"], [False, ', '], [True, '\'function "\''], [False, ' + $name + '], [True, '\'" is a builtin function and cannot be deleted\''], [False, '))']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 21, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif37_2', 'command': 'label', 'args_str': 'tmplabelif37_2', 'args': ['tmplabelif37_2'], 'file_path': '<system>', 'line_number': 26, 'strings': [[False, 'label tmplabelif37_2']], 'arg_strings': [[False, 'tmplabelif37_2']]}, {'str': 'label tmplabelif37_end', 'command': 'label', 'args_str': 'tmplabelif37_end', 'args': ['tmplabelif37_end'], 'file_path': '<system>', 'line_number': 26, 'strings': [[False, 'label tmplabelif37_end']], 'arg_strings': [[False, 'tmplabelif37_end']]}, {'str': 'python ("del self.functions[self.get_var(\'name\')]")', 'command': 'python', 'args_str': '("del self.functions[self.get_var(\'name\')]")', 'args': ['("del', 'self.functions[self.get_var(\'name\')]")'], 'file_path': '@stdlib.func', 'line_number': 22, 'strings': [[False, 'python ('], [True, '"del self.functions[self.get_var(\'name\')]"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"del self.functions[self.get_var(\'name\')]"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 23, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 24, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}]
modules["stdlib.io"] = [{'str': '@doc """Prints a object on stdout."""', 'command': '@doc', 'args_str': '"""Prints a object on stdout."""', 'args': ['"""Prints', 'a', 'object', 'on', 'stdout."""'], 'file_path': '@stdlib.io', 'line_number': 1, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Prints a object on stdout."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Prints a object on stdout."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func print(*$value)', 'command': 'func', 'args_str': 'print(*$value)', 'args': ['print(*$value)'], 'file_path': '@stdlib.io', 'line_number': 2, 'strings': [[False, 'func print(*$value)']], 'arg_strings': [[False, 'print(*$value)']]}, {'str': 'mem self.print($value)', 'command': 'mem', 'args_str': 'self.print($value)', 'args': ['self.print($value)'], 'file_path': '@stdlib.io', 'line_number': 3, 'strings': [[False, 'mem self.print($value)']], 'arg_strings': [[False, 'self.print($value)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 4, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Prints a object on stdout and goes to next line."""', 'command': '@doc', 'args_str': '"""Prints a object on stdout and goes to next line."""', 'args': ['"""Prints', 'a', 'object', 'on', 'stdout', 'and', 'goes', 'to', 'next', 'line."""'], 'file_path': '@stdlib.io', 'line_number': 5, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Prints a object on stdout and goes to next line."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Prints a object on stdout and goes to next line."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func println(*$value)', 'command': 'func', 'args_str': 'println(*$value)', 'args': ['println(*$value)'], 'file_path': '@stdlib.io', 'line_number': 6, 'strings': [[False, 'func println(*$value)']], 'arg_strings': [[False, 'println(*$value)']]}, {'str': 'print ($value)', 'command': 'print', 'args_str': '($value)', 'args': ['($value)'], 'file_path': '@stdlib.io', 'line_number': 7, 'strings': [[False, 'print ($value)']], 'arg_strings': [[False, '($value)']]}, {'str': "print ('\\n')", 'command': 'print', 'args_str': "('\\n')", 'args': ["('\\n')"], 'file_path': '@stdlib.io', 'line_number': 8, 'strings': [[False, 'print ('], [True, "'\\n'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'\\n'"], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 9, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func printl(*$value)', 'command': 'func', 'args_str': 'printl(*$value)', 'args': ['printl(*$value)'], 'file_path': '@stdlib.io', 'line_number': 10, 'strings': [[False, 'func printl(*$value)']], 'arg_strings': [[False, 'printl(*$value)']]}, {'str': 'println ($value)', 'command': 'println', 'args_str': '($value)', 'args': ['($value)'], 'file_path': '@stdlib.io', 'line_number': 11, 'strings': [[False, 'println ($value)']], 'arg_strings': [[False, '($value)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 12, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Prints a object on stderr."""', 'command': '@doc', 'args_str': '"""Prints a object on stderr."""', 'args': ['"""Prints', 'a', 'object', 'on', 'stderr."""'], 'file_path': '@stdlib.io', 'line_number': 13, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Prints a object on stderr."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Prints a object on stderr."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func perror(*$value)', 'command': 'func', 'args_str': 'perror(*$value)', 'args': ['perror(*$value)'], 'file_path': '@stdlib.io', 'line_number': 14, 'strings': [[False, 'func perror(*$value)']], 'arg_strings': [[False, 'perror(*$value)']]}, {'str': 'mem self.print($value, file=sys.stderr)', 'command': 'mem', 'args_str': 'self.print($value, file=sys.stderr)', 'args': ['self.print($value,', 'file=sys.stderr)'], 'file_path': '@stdlib.io', 'line_number': 15, 'strings': [[False, 'mem self.print($value, file=sys.stderr)']], 'arg_strings': [[False, 'self.print($value, file=sys.stderr)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 16, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Prints a object on a file.\\nFirst argument is the object that you want to print.\\nSecond argument is the file that you want to print on, but is optional. default is stdout file."""', 'command': '@doc', 'args_str': '"""Prints a object on a file.\\nFirst argument is the object that you want to print.\\nSecond argument is the file that you want to print on, but is optional. default is stdout file."""', 'args': ['"""Prints', 'a', 'object', 'on', 'a', 'file.\\nFirst', 'argument', 'is', 'the', 'object', 'that', 'you', 'want', 'to', 'print.\\nSecond', 'argument', 'is', 'the', 'file', 'that', 'you', 'want', 'to', 'print', 'on,', 'but', 'is', 'optional.', 'default', 'is', 'stdout', 'file."""'], 'file_path': '@stdlib.io', 'line_number': 17, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Prints a object on a file.\\nFirst argument is the object that you want to print.\\nSecond argument is the file that you want to print on, but is optional. default is stdout file."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Prints a object on a file.\\nFirst argument is the object that you want to print.\\nSecond argument is the file that you want to print on, but is optional. default is stdout file."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func printf($value, $file=null)', 'command': 'func', 'args_str': 'printf($value, $file=null)', 'args': ['printf($value,', '$file=null)'], 'file_path': '@stdlib.io', 'line_number': 18, 'strings': [[False, 'func printf($value, $file=null)']], 'arg_strings': [[False, 'printf($value, $file=null)']]}, {'str': 'if $file is null', 'command': 'if', 'args_str': '$file is null', 'args': ['$file', 'is', 'null'], 'file_path': '@stdlib.io', 'line_number': 19, 'strings': [[False, 'if $file is null']], 'arg_strings': [[False, '$file is null']]}, {'str': 'mem not ($file is null)', 'command': 'mem', 'args_str': 'not ($file is null)', 'args': ['not', '($file', 'is', 'null)'], 'file_path': '<system>', 'line_number': 18, 'strings': [[False, 'mem not ($file is null)']], 'arg_strings': [[False, 'not ($file is null)']]}, {'str': 'gotoif tmplabelif38_2', 'command': 'gotoif', 'args_str': 'tmplabelif38_2', 'args': ['tmplabelif38_2'], 'file_path': '<system>', 'line_number': 18, 'strings': [[False, 'gotoif tmplabelif38_2']], 'arg_strings': [[False, 'tmplabelif38_2']]}, {'str': '$file = python("self.mem = sys.stdout")', 'command': '$file', 'args_str': '= python("self.mem = sys.stdout")', 'args': ['=', 'python("self.mem', '=', 'sys.stdout")'], 'file_path': '@stdlib.io', 'line_number': 20, 'strings': [[False, '$file = python('], [True, '"self.mem = sys.stdout"'], [False, ')']], 'arg_strings': [[False, '= python('], [True, '"self.mem = sys.stdout"'], [False, ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 21, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif38_2', 'command': 'label', 'args_str': 'tmplabelif38_2', 'args': ['tmplabelif38_2'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'label tmplabelif38_2']], 'arg_strings': [[False, 'tmplabelif38_2']]}, {'str': 'label tmplabelif38_end', 'command': 'label', 'args_str': 'tmplabelif38_end', 'args': ['tmplabelif38_end'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'label tmplabelif38_end']], 'arg_strings': [[False, 'tmplabelif38_end']]}, {'str': '$file->write (str($value))', 'command': '$file->write', 'args_str': '(str($value))', 'args': ['(str($value))'], 'file_path': '@stdlib.io', 'line_number': 22, 'strings': [[False, '$file->write (str($value))']], 'arg_strings': [[False, '(str($value))']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 23, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Opens the output buffer."""', 'command': '@doc', 'args_str': '"""Opens the output buffer."""', 'args': ['"""Opens', 'the', 'output', 'buffer."""'], 'file_path': '@stdlib.io', 'line_number': 24, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Opens the output buffer."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Opens the output buffer."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func out_start()', 'command': 'func', 'args_str': 'out_start()', 'args': ['out_start()'], 'file_path': '@stdlib.io', 'line_number': 25, 'strings': [[False, 'func out_start()']], 'arg_strings': [[False, 'out_start()']]}, {'str': 'python ("self.out_started = True")', 'command': 'python', 'args_str': '("self.out_started = True")', 'args': ['("self.out_started', '=', 'True")'], 'file_path': '@stdlib.io', 'line_number': 26, 'strings': [[False, 'python ('], [True, '"self.out_started = True"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"self.out_started = True"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 27, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Closes the output buffer."""', 'command': '@doc', 'args_str': '"""Closes the output buffer."""', 'args': ['"""Closes', 'the', 'output', 'buffer."""'], 'file_path': '@stdlib.io', 'line_number': 28, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Closes the output buffer."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Closes the output buffer."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func out_end()', 'command': 'func', 'args_str': 'out_end()', 'args': ['out_end()'], 'file_path': '@stdlib.io', 'line_number': 29, 'strings': [[False, 'func out_end()']], 'arg_strings': [[False, 'out_end()']]}, {'str': 'python ("self.out_started = False")', 'command': 'python', 'args_str': '("self.out_started = False")', 'args': ['("self.out_started', '=', 'False")'], 'file_path': '@stdlib.io', 'line_number': 30, 'strings': [[False, 'python ('], [True, '"self.out_started = False"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"self.out_started = False"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 31, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Clears the output buffer."""', 'command': '@doc', 'args_str': '"""Clears the output buffer."""', 'args': ['"""Clears', 'the', 'output', 'buffer."""'], 'file_path': '@stdlib.io', 'line_number': 32, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Clears the output buffer."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Clears the output buffer."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func out_clean()', 'command': 'func', 'args_str': 'out_clean()', 'args': ['out_clean()'], 'file_path': '@stdlib.io', 'line_number': 33, 'strings': [[False, 'func out_clean()']], 'arg_strings': [[False, 'out_clean()']]}, {'str': 'python ("self.out_content = \'\'")', 'command': 'python', 'args_str': '("self.out_content = \'\'")', 'args': ['("self.out_content', '=', '\'\'")'], 'file_path': '@stdlib.io', 'line_number': 34, 'strings': [[False, 'python ('], [True, '"self.out_content = \'\'"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"self.out_content = \'\'"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 35, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Returns the output buffer as string."""', 'command': '@doc', 'args_str': '"""Returns the output buffer as string."""', 'args': ['"""Returns', 'the', 'output', 'buffer', 'as', 'string."""'], 'file_path': '@stdlib.io', 'line_number': 36, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Returns the output buffer as string."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Returns the output buffer as string."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func out_get()', 'command': 'func', 'args_str': 'out_get()', 'args': ['out_get()'], 'file_path': '@stdlib.io', 'line_number': 37, 'strings': [[False, 'func out_get()']], 'arg_strings': [[False, 'out_get()']]}, {'str': 'python ("self.mem = self.out_content")', 'command': 'python', 'args_str': '("self.mem = self.out_content")', 'args': ['("self.mem', '=', 'self.out_content")'], 'file_path': '@stdlib.io', 'line_number': 38, 'strings': [[False, 'python ('], [True, '"self.mem = self.out_content"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"self.mem = self.out_content"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 39, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Returns output buffer and clears that."""', 'command': '@doc', 'args_str': '"""Returns output buffer and clears that."""', 'args': ['"""Returns', 'output', 'buffer', 'and', 'clears', 'that."""'], 'file_path': '@stdlib.io', 'line_number': 40, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Returns output buffer and clears that."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Returns output buffer and clears that."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func out_get_clean()', 'command': 'func', 'args_str': 'out_get_clean()', 'args': ['out_get_clean()'], 'file_path': '@stdlib.io', 'line_number': 41, 'strings': [[False, 'func out_get_clean()']], 'arg_strings': [[False, 'out_get_clean()']]}, {'str': '$content = out_get()', 'command': '$content', 'args_str': '= out_get()', 'args': ['=', 'out_get()'], 'file_path': '@stdlib.io', 'line_number': 42, 'strings': [[False, '$content = out_get()']], 'arg_strings': [[False, '= out_get()']]}, {'str': 'out_clean ()', 'command': 'out_clean', 'args_str': '()', 'args': ['()'], 'file_path': '@stdlib.io', 'line_number': 43, 'strings': [[False, 'out_clean ()']], 'arg_strings': [[False, '()']]}, {'str': 'return $content', 'command': 'return', 'args_str': '$content', 'args': ['$content'], 'file_path': '@stdlib.io', 'line_number': 44, 'strings': [[False, 'return $content']], 'arg_strings': [[False, '$content']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 45, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Exits program.\\nThe argument is the exit code(is optional, default is 0)."""', 'command': '@doc', 'args_str': '"""Exits program.\\nThe argument is the exit code(is optional, default is 0)."""', 'args': ['"""Exits', 'program.\\nThe', 'argument', 'is', 'the', 'exit', 'code(is', 'optional,', 'default', 'is', '0)."""'], 'file_path': '@stdlib.io', 'line_number': 46, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Exits program.\\nThe argument is the exit code(is optional, default is 0)."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Exits program.\\nThe argument is the exit code(is optional, default is 0)."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func exit(int $code=0)', 'command': 'func', 'args_str': 'exit(int $code=0)', 'args': ['exit(int', '$code=0)'], 'file_path': '@stdlib.io', 'line_number': 47, 'strings': [[False, 'func exit(int $code=0)']], 'arg_strings': [[False, 'exit(int $code=0)']]}, {'str': 'python ("self.exit_program(self.get_var(\'code\'))")', 'command': 'python', 'args_str': '("self.exit_program(self.get_var(\'code\'))")', 'args': ['("self.exit_program(self.get_var(\'code\'))")'], 'file_path': '@stdlib.io', 'line_number': 48, 'strings': [[False, 'python ('], [True, '"self.exit_program(self.get_var(\'code\'))"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"self.exit_program(self.get_var(\'code\'))"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 49, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Reads a input from user from stdin."""', 'command': '@doc', 'args_str': '"""Reads a input from user from stdin."""', 'args': ['"""Reads', 'a', 'input', 'from', 'user', 'from', 'stdin."""'], 'file_path': '@stdlib.io', 'line_number': 50, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Reads a input from user from stdin."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Reads a input from user from stdin."'], [False, ''], [True, '""'], [False, '']]}, {'str': "func string::read(string $message='')", 'command': 'func', 'args_str': "string::read(string $message='')", 'args': ['string::read(string', "$message='')"], 'file_path': '@stdlib.io', 'line_number': 51, 'strings': [[False, 'func string::read(string $message='], [True, "''"], [False, ')']], 'arg_strings': [[False, 'string::read(string $message='], [True, "''"], [False, ')']]}, {'str': 'print ($message)', 'command': 'print', 'args_str': '($message)', 'args': ['($message)'], 'file_path': '@stdlib.io', 'line_number': 52, 'strings': [[False, 'print ($message)']], 'arg_strings': [[False, '($message)']]}, {'str': 'python ("self.io_read()")', 'command': 'python', 'args_str': '("self.io_read()")', 'args': ['("self.io_read()")'], 'file_path': '@stdlib.io', 'line_number': 53, 'strings': [[False, 'python ('], [True, '"self.io_read()"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"self.io_read()"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 54, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Dumps a object."""', 'command': '@doc', 'args_str': '"""Dumps a object."""', 'args': ['"""Dumps', 'a', 'object."""'], 'file_path': '@stdlib.io', 'line_number': 55, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Dumps a object."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Dumps a object."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func var_dump($obj)', 'command': 'func', 'args_str': 'var_dump($obj)', 'args': ['var_dump($obj)'], 'file_path': '@stdlib.io', 'line_number': 56, 'strings': [[False, 'func var_dump($obj)']], 'arg_strings': [[False, 'var_dump($obj)']]}, {'str': 'python ("class Tmp:\\n    def write(self, value):\\n        current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var(\'obj\'), Tmp())")', 'command': 'python', 'args_str': '("class Tmp:\\n    def write(self, value):\\n        current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var(\'obj\'), Tmp())")', 'args': ['("class', 'Tmp:\\n', 'def', 'write(self,', 'value):\\n', "current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var('obj'),", 'Tmp())")'], 'file_path': '@stdlib.io', 'line_number': 57, 'strings': [[False, 'python ('], [True, '"class Tmp:\\n    def write(self, value):\\n        current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var(\'obj\'), Tmp())"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"class Tmp:\\n    def write(self, value):\\n        current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var(\'obj\'), Tmp())"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 58, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Prints something and exits program.\\nThe first argument is that thing you want to print(Optional,default is null).\\nThe second argument is exit code(is optional, default is 1)."""', 'command': '@doc', 'args_str': '"""Prints something and exits program.\\nThe first argument is that thing you want to print(Optional,default is null).\\nThe second argument is exit code(is optional, default is 1)."""', 'args': ['"""Prints', 'something', 'and', 'exits', 'program.\\nThe', 'first', 'argument', 'is', 'that', 'thing', 'you', 'want', 'to', 'print(Optional,default', 'is', 'null).\\nThe', 'second', 'argument', 'is', 'exit', 'code(is', 'optional,', 'default', 'is', '1)."""'], 'file_path': '@stdlib.io', 'line_number': 59, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Prints something and exits program.\\nThe first argument is that thing you want to print(Optional,default is null).\\nThe second argument is exit code(is optional, default is 1)."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Prints something and exits program.\\nThe first argument is that thing you want to print(Optional,default is null).\\nThe second argument is exit code(is optional, default is 1)."'], [False, ''], [True, '""'], [False, '']]}, {'str': "func die($message='', int $exit_code=1)", 'command': 'func', 'args_str': "die($message='', int $exit_code=1)", 'args': ["die($message='',", 'int', '$exit_code=1)'], 'file_path': '@stdlib.io', 'line_number': 60, 'strings': [[False, 'func die($message='], [True, "''"], [False, ', int $exit_code=1)']], 'arg_strings': [[False, 'die($message='], [True, "''"], [False, ', int $exit_code=1)']]}, {'str': 'print ($message)', 'command': 'print', 'args_str': '($message)', 'args': ['($message)'], 'file_path': '@stdlib.io', 'line_number': 61, 'strings': [[False, 'print ($message)']], 'arg_strings': [[False, '($message)']]}, {'str': 'exit ($exit_code)', 'command': 'exit', 'args_str': '($exit_code)', 'args': ['($exit_code)'], 'file_path': '@stdlib.io', 'line_number': 62, 'strings': [[False, 'exit ($exit_code)']], 'arg_strings': [[False, '($exit_code)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 63, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}]
modules["stdlib.obj"] = [{'str': '@doc """Is parent of all of classes."""', 'command': '@doc', 'args_str': '"""Is parent of all of classes."""', 'args': ['"""Is', 'parent', 'of', 'all', 'of', 'classes."""'], 'file_path': '@stdlib.obj', 'line_number': 1, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Is parent of all of classes."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Is parent of all of classes."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'class Object', 'command': 'class', 'args_str': 'Object', 'args': ['Object'], 'file_path': '@stdlib.obj', 'line_number': 2, 'strings': [[False, 'class Object']], 'arg_strings': [[False, 'Object']]}, {'str': 'func __init__()', 'command': 'func', 'args_str': '__init__()', 'args': ['__init__()'], 'file_path': '@stdlib.obj', 'line_number': 3, 'strings': [[False, 'func __init__()']], 'arg_strings': [[False, '__init__()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 4, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func string::__str__()', 'command': 'func', 'args_str': 'string::__str__()', 'args': ['string::__str__()'], 'file_path': '@stdlib.obj', 'line_number': 5, 'strings': [[False, 'func string::__str__()']], 'arg_strings': [[False, 'string::__str__()']]}, {'str': 'return \'[PashmakObject name="\' + $this->__name__ + \'"]\'', 'command': 'return', 'args_str': '\'[PashmakObject name="\' + $this->__name__ + \'"]\'', 'args': ["'[PashmakObject", 'name="\'', '+', '$this->__name__', '+', '\'"]\''], 'file_path': '@stdlib.obj', 'line_number': 6, 'strings': [[False, 'return '], [True, '\'[PashmakObject name="\''], [False, ' + $this->__name__ + '], [True, '\'"]\''], [False, '']], 'arg_strings': [[False, ''], [True, '\'[PashmakObject name="\''], [False, ' + $this->__name__ + '], [True, '\'"]\''], [False, '']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 7, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """    Checks is this object instance of a class.\\n    Gets that class as argument(You can pass class name as string or class object).    """', 'command': '@doc', 'args_str': '"""    Checks is this object instance of a class.\\n    Gets that class as argument(You can pass class name as string or class object).    """', 'args': ['"""', 'Checks', 'is', 'this', 'object', 'instance', 'of', 'a', 'class.\\n', 'Gets', 'that', 'class', 'as', 'argument(You', 'can', 'pass', 'class', 'name', 'as', 'string', 'or', 'class', 'object).', '"""'], 'file_path': '@stdlib.obj', 'line_number': 8, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Checks is this object instance of a class.\\n    Gets that class as argument(You can pass class name as string or class object).    "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"    Checks is this object instance of a class.\\n    Gets that class as argument(You can pass class name as string or class object).    "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func bool::isinstanceof($class)', 'command': 'func', 'args_str': 'bool::isinstanceof($class)', 'args': ['bool::isinstanceof($class)'], 'file_path': '@stdlib.obj', 'line_number': 9, 'strings': [[False, 'func bool::isinstanceof($class)']], 'arg_strings': [[False, 'bool::isinstanceof($class)']]}, {'str': 'if typeof($class) != str', 'command': 'if', 'args_str': 'typeof($class) != str', 'args': ['typeof($class)', '!=', 'str'], 'file_path': '@stdlib.obj', 'line_number': 10, 'strings': [[False, 'if typeof($class) != str']], 'arg_strings': [[False, 'typeof($class) != str']]}, {'str': 'mem not (typeof($class) != str)', 'command': 'mem', 'args_str': 'not (typeof($class) != str)', 'args': ['not', '(typeof($class)', '!=', 'str)'], 'file_path': '<system>', 'line_number': 9, 'strings': [[False, 'mem not (typeof($class) != str)']], 'arg_strings': [[False, 'not (typeof($class) != str)']]}, {'str': 'gotoif tmplabelif39_2', 'command': 'gotoif', 'args_str': 'tmplabelif39_2', 'args': ['tmplabelif39_2'], 'file_path': '<system>', 'line_number': 9, 'strings': [[False, 'gotoif tmplabelif39_2']], 'arg_strings': [[False, 'tmplabelif39_2']]}, {'str': '$class = $class->__name__', 'command': '$class', 'args_str': '= $class->__name__', 'args': ['=', '$class->__name__'], 'file_path': '@stdlib.obj', 'line_number': 11, 'strings': [[False, '$class = $class->__name__']], 'arg_strings': [[False, '= $class->__name__']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 12, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif39_2', 'command': 'label', 'args_str': 'tmplabelif39_2', 'args': ['tmplabelif39_2'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'label tmplabelif39_2']], 'arg_strings': [[False, 'tmplabelif39_2']]}, {'str': 'label tmplabelif39_end', 'command': 'label', 'args_str': 'tmplabelif39_end', 'args': ['tmplabelif39_end'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'label tmplabelif39_end']], 'arg_strings': [[False, 'tmplabelif39_end']]}, {'str': 'return $class in $this->__inheritance_tree__', 'command': 'return', 'args_str': '$class in $this->__inheritance_tree__', 'args': ['$class', 'in', '$this->__inheritance_tree__'], 'file_path': '@stdlib.obj', 'line_number': 13, 'strings': [[False, 'return $class in $this->__inheritance_tree__']], 'arg_strings': [[False, '$class in $this->__inheritance_tree__']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 14, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endclass ', 'command': 'endclass', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 15, 'strings': [[False, 'endclass']], 'arg_strings': [[False, '']]}, {'str': '@doc "Returns value of a variable by name of variable as string"', 'command': '@doc', 'args_str': '"Returns value of a variable by name of variable as string"', 'args': ['"Returns', 'value', 'of', 'a', 'variable', 'by', 'name', 'of', 'variable', 'as', 'string"'], 'file_path': '@stdlib.obj', 'line_number': 16, 'strings': [[False, '@doc '], [True, '"Returns value of a variable by name of variable as string"'], [False, '']], 'arg_strings': [[False, ''], [True, '"Returns value of a variable by name of variable as string"'], [False, '']]}, {'str': 'func get()', 'command': 'func', 'args_str': 'get()', 'args': ['get()'], 'file_path': '@stdlib.obj', 'line_number': 17, 'strings': [[False, 'func get()']], 'arg_strings': [[False, 'get()']]}, {'str': 'return python("self.mem = self.get_var(" + repr(^) + ")")', 'command': 'return', 'args_str': 'python("self.mem = self.get_var(" + repr(^) + ")")', 'args': ['python("self.mem', '=', 'self.get_var("', '+', 'repr(^)', '+', '")")'], 'file_path': '@stdlib.obj', 'line_number': 18, 'strings': [[False, 'return python('], [True, '"self.mem = self.get_var("'], [False, ' + repr(^) + '], [True, '")"'], [False, ')']], 'arg_strings': [[False, 'python('], [True, '"self.mem = self.get_var("'], [False, ' + repr(^) + '], [True, '")"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 19, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Sets value of a variable by name of variable as first argument as stringAnd value as second argument"""', 'command': '@doc', 'args_str': '"""Sets value of a variable by name of variable as first argument as stringAnd value as second argument"""', 'args': ['"""Sets', 'value', 'of', 'a', 'variable', 'by', 'name', 'of', 'variable', 'as', 'first', 'argument', 'as', 'stringAnd', 'value', 'as', 'second', 'argument"""'], 'file_path': '@stdlib.obj', 'line_number': 20, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Sets value of a variable by name of variable as first argument as stringAnd value as second argument"'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Sets value of a variable by name of variable as first argument as stringAnd value as second argument"'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func set(string $name, $value=null)', 'command': 'func', 'args_str': 'set(string $name, $value=null)', 'args': ['set(string', '$name,', '$value=null)'], 'file_path': '@stdlib.obj', 'line_number': 21, 'strings': [[False, 'func set(string $name, $value=null)']], 'arg_strings': [[False, 'set(string $name, $value=null)']]}, {'str': 'python ("self.frames[-3][\'vars\'][self.get_var(\'name\')] = self.get_var(\'value\')")', 'command': 'python', 'args_str': '("self.frames[-3][\'vars\'][self.get_var(\'name\')] = self.get_var(\'value\')")', 'args': ['("self.frames[-3][\'vars\'][self.get_var(\'name\')]', '=', 'self.get_var(\'value\')")'], 'file_path': '@stdlib.obj', 'line_number': 22, 'strings': [[False, 'python ('], [True, '"self.frames[-3][\'vars\'][self.get_var(\'name\')] = self.get_var(\'value\')"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"self.frames[-3][\'vars\'][self.get_var(\'name\')] = self.get_var(\'value\')"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 23, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func bool::isset()', 'command': 'func', 'args_str': 'bool::isset()', 'args': ['bool::isset()'], 'file_path': '@stdlib.obj', 'line_number': 24, 'strings': [[False, 'func bool::isset()']], 'arg_strings': [[False, 'bool::isset()']]}, {'str': "return python('self.mem = self.variable_exists(' + repr(^) + ')')", 'command': 'return', 'args_str': "python('self.mem = self.variable_exists(' + repr(^) + ')')", 'args': ["python('self.mem", '=', "self.variable_exists('", '+', 'repr(^)', '+', "')')"], 'file_path': '@stdlib.obj', 'line_number': 25, 'strings': [[False, 'return python('], [True, "'self.mem = self.variable_exists('"], [False, ' + repr(^) + '], [True, "')'"], [False, ')']], 'arg_strings': [[False, 'python('], [True, "'self.mem = self.variable_exists('"], [False, ' + repr(^) + '], [True, "')'"], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 26, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "Makes a copy from an object and returns the copy"', 'command': '@doc', 'args_str': '"Makes a copy from an object and returns the copy"', 'args': ['"Makes', 'a', 'copy', 'from', 'an', 'object', 'and', 'returns', 'the', 'copy"'], 'file_path': '@stdlib.obj', 'line_number': 27, 'strings': [[False, '@doc '], [True, '"Makes a copy from an object and returns the copy"'], [False, '']], 'arg_strings': [[False, ''], [True, '"Makes a copy from an object and returns the copy"'], [False, '']]}, {'str': 'func clone($obj)', 'command': 'func', 'args_str': 'clone($obj)', 'args': ['clone($obj)'], 'file_path': '@stdlib.obj', 'line_number': 28, 'strings': [[False, 'func clone($obj)']], 'arg_strings': [[False, 'clone($obj)']]}, {'str': 'return copy.deepcopy($obj)', 'command': 'return', 'args_str': 'copy.deepcopy($obj)', 'args': ['copy.deepcopy($obj)'], 'file_path': '@stdlib.obj', 'line_number': 29, 'strings': [[False, 'return copy.deepcopy($obj)']], 'arg_strings': [[False, 'copy.deepcopy($obj)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 30, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}]
modules["string"] = [{'str': 'ns string', 'command': 'ns', 'args_str': 'string', 'args': ['string'], 'file_path': '@string', 'line_number': 1, 'strings': [[False, 'ns string']], 'arg_strings': [[False, 'string']]}, {'str': 'func string::concat(string $a, string $b)', 'command': 'func', 'args_str': 'string::concat(string $a, string $b)', 'args': ['string::concat(string', '$a,', 'string', '$b)'], 'file_path': '@string', 'line_number': 2, 'strings': [[False, 'func string::concat(string $a, string $b)']], 'arg_strings': [[False, 'string::concat(string $a, string $b)']]}, {'str': 'return $a + $b', 'command': 'return', 'args_str': '$a + $b', 'args': ['$a', '+', '$b'], 'file_path': '@string', 'line_number': 3, 'strings': [[False, 'return $a + $b']], 'arg_strings': [[False, '$a + $b']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 4, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func string::remove_last(string $str)', 'command': 'func', 'args_str': 'string::remove_last(string $str)', 'args': ['string::remove_last(string', '$str)'], 'file_path': '@string', 'line_number': 5, 'strings': [[False, 'func string::remove_last(string $str)']], 'arg_strings': [[False, 'string::remove_last(string $str)']]}, {'str': 'return $str[:-1]', 'command': 'return', 'args_str': '$str[:-1]', 'args': ['$str[:-1]'], 'file_path': '@string', 'line_number': 6, 'strings': [[False, 'return $str[:-1]']], 'arg_strings': [[False, '$str[:-1]']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 7, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func string::remove_first(string $str)', 'command': 'func', 'args_str': 'string::remove_first(string $str)', 'args': ['string::remove_first(string', '$str)'], 'file_path': '@string', 'line_number': 8, 'strings': [[False, 'func string::remove_first(string $str)']], 'arg_strings': [[False, 'string::remove_first(string $str)']]}, {'str': 'return $str[1:]', 'command': 'return', 'args_str': '$str[1:]', 'args': ['$str[1:]'], 'file_path': '@string', 'line_number': 9, 'strings': [[False, 'return $str[1:]']], 'arg_strings': [[False, '$str[1:]']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 10, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func string::add_last(string $str, string $new)', 'command': 'func', 'args_str': 'string::add_last(string $str, string $new)', 'args': ['string::add_last(string', '$str,', 'string', '$new)'], 'file_path': '@string', 'line_number': 11, 'strings': [[False, 'func string::add_last(string $str, string $new)']], 'arg_strings': [[False, 'string::add_last(string $str, string $new)']]}, {'str': 'return $str + $new', 'command': 'return', 'args_str': '$str + $new', 'args': ['$str', '+', '$new'], 'file_path': '@string', 'line_number': 12, 'strings': [[False, 'return $str + $new']], 'arg_strings': [[False, '$str + $new']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 13, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func string::add_first(string $str, string $new)', 'command': 'func', 'args_str': 'string::add_first(string $str, string $new)', 'args': ['string::add_first(string', '$str,', 'string', '$new)'], 'file_path': '@string', 'line_number': 14, 'strings': [[False, 'func string::add_first(string $str, string $new)']], 'arg_strings': [[False, 'string::add_first(string $str, string $new)']]}, {'str': 'return $new + $str', 'command': 'return', 'args_str': '$new + $str', 'args': ['$new', '+', '$str'], 'file_path': '@string', 'line_number': 15, 'strings': [[False, 'return $new + $str']], 'arg_strings': [[False, '$new + $str']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 16, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func int::length(string $str)', 'command': 'func', 'args_str': 'int::length(string $str)', 'args': ['int::length(string', '$str)'], 'file_path': '@string', 'line_number': 17, 'strings': [[False, 'func int::length(string $str)']], 'arg_strings': [[False, 'int::length(string $str)']]}, {'str': 'return len($str)', 'command': 'return', 'args_str': 'len($str)', 'args': ['len($str)'], 'file_path': '@string', 'line_number': 18, 'strings': [[False, 'return len($str)']], 'arg_strings': [[False, 'len($str)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 19, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func string::cut(string $str, int $a, int $b)', 'command': 'func', 'args_str': 'string::cut(string $str, int $a, int $b)', 'args': ['string::cut(string', '$str,', 'int', '$a,', 'int', '$b)'], 'file_path': '@string', 'line_number': 20, 'strings': [[False, 'func string::cut(string $str, int $a, int $b)']], 'arg_strings': [[False, 'string::cut(string $str, int $a, int $b)']]}, {'str': 'return $str[$a:$b]', 'command': 'return', 'args_str': '$str[$a:$b]', 'args': ['$str[$a:$b]'], 'file_path': '@string', 'line_number': 21, 'strings': [[False, 'return $str[$a:$b]']], 'arg_strings': [[False, '$str[$a:$b]']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 22, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func string::upcase(string $str)', 'command': 'func', 'args_str': 'string::upcase(string $str)', 'args': ['string::upcase(string', '$str)'], 'file_path': '@string', 'line_number': 23, 'strings': [[False, 'func string::upcase(string $str)']], 'arg_strings': [[False, 'string::upcase(string $str)']]}, {'str': 'return $str->upper()', 'command': 'return', 'args_str': '$str->upper()', 'args': ['$str->upper()'], 'file_path': '@string', 'line_number': 24, 'strings': [[False, 'return $str->upper()']], 'arg_strings': [[False, '$str->upper()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 25, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func string::lowcase(string $str)', 'command': 'func', 'args_str': 'string::lowcase(string $str)', 'args': ['string::lowcase(string', '$str)'], 'file_path': '@string', 'line_number': 26, 'strings': [[False, 'func string::lowcase(string $str)']], 'arg_strings': [[False, 'string::lowcase(string $str)']]}, {'str': 'return $str->lower()', 'command': 'return', 'args_str': '$str->lower()', 'args': ['$str->lower()'], 'file_path': '@string', 'line_number': 27, 'strings': [[False, 'return $str->lower()']], 'arg_strings': [[False, '$str->lower()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 28, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func string::reverse(string $str)', 'command': 'func', 'args_str': 'string::reverse(string $str)', 'args': ['string::reverse(string', '$str)'], 'file_path': '@string', 'line_number': 29, 'strings': [[False, 'func string::reverse(string $str)']], 'arg_strings': [[False, 'string::reverse(string $str)']]}, {'str': 'return $str[::-1]', 'command': 'return', 'args_str': '$str[::-1]', 'args': ['$str[::-1]'], 'file_path': '@string', 'line_number': 30, 'strings': [[False, 'return $str[::-1]']], 'arg_strings': [[False, '$str[::-1]']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 31, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func string::to_str($var)', 'command': 'func', 'args_str': 'string::to_str($var)', 'args': ['string::to_str($var)'], 'file_path': '@string', 'line_number': 32, 'strings': [[False, 'func string::to_str($var)']], 'arg_strings': [[False, 'string::to_str($var)']]}, {'str': 'return repr($var)', 'command': 'return', 'args_str': 'repr($var)', 'args': ['repr($var)'], 'file_path': '@string', 'line_number': 33, 'strings': [[False, 'return repr($var)']], 'arg_strings': [[False, 'repr($var)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 34, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 35, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}]
modules["sys"] = [{'str': 'import "@sys.path"', 'command': 'import', 'args_str': '"@sys.path"', 'args': ['"@sys.path"'], 'file_path': '@sys', 'line_number': 1, 'strings': [[False, 'import '], [True, '"@sys.path"'], [False, '']], 'arg_strings': [[False, ''], [True, '"@sys.path"'], [False, '']]}, {'str': 'namespace sys', 'command': 'namespace', 'args_str': 'sys', 'args': ['sys'], 'file_path': '@sys', 'line_number': 2, 'strings': [[False, 'namespace sys']], 'arg_strings': [[False, 'sys']]}, {'str': '$pashmakinfo = {"version": version.version, "pythoninfo": sys.version.replace("\\\\n", "")}', 'command': '$pashmakinfo', 'args_str': '= {"version": version.version, "pythoninfo": sys.version.replace("\\\\n", "")}', 'args': ['=', '{"version":', 'version.version,', '"pythoninfo":', 'sys.version.replace("\\\\n",', '"")}'], 'file_path': '@sys', 'line_number': 3, 'strings': [[False, '$pashmakinfo = {'], [True, '"version"'], [False, ': version.version, '], [True, '"pythoninfo"'], [False, ': sys.version.replace('], [True, '"\\\\n"'], [False, ', '], [True, '""'], [False, ')}']], 'arg_strings': [[False, '= {'], [True, '"version"'], [False, ': version.version, '], [True, '"pythoninfo"'], [False, ': sys.version.replace('], [True, '"\\\\n"'], [False, ', '], [True, '""'], [False, ')}']]}, {'str': '$pashmakexe = sys.argv[0]', 'command': '$pashmakexe', 'args_str': '= sys.argv[0]', 'args': ['=', 'sys.argv[0]'], 'file_path': '@sys', 'line_number': 4, 'strings': [[False, '$pashmakexe = sys.argv[0]']], 'arg_strings': [[False, '= sys.argv[0]']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@sys', 'line_number': 5, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}]
modules["sys.path"] = [{'str': 'namespace sys', 'command': 'namespace', 'args_str': 'sys', 'args': ['sys'], 'file_path': '@sys.path', 'line_number': 1, 'strings': [[False, 'namespace sys']], 'arg_strings': [[False, 'sys']]}, {'str': 'namespace path', 'command': 'namespace', 'args_str': 'path', 'args': ['path'], 'file_path': '@sys.path', 'line_number': 2, 'strings': [[False, 'namespace path']], 'arg_strings': [[False, 'path']]}, {'str': '@doc """        Adds a new path to pashmakpath.\\n        Gets new path as string.        """', 'command': '@doc', 'args_str': '"""        Adds a new path to pashmakpath.\\n        Gets new path as string.        """', 'args': ['"""', 'Adds', 'a', 'new', 'path', 'to', 'pashmakpath.\\n', 'Gets', 'new', 'path', 'as', 'string.', '"""'], 'file_path': '@sys.path', 'line_number': 3, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"        Adds a new path to pashmakpath.\\n        Gets new path as string.        "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"        Adds a new path to pashmakpath.\\n        Gets new path as string.        "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func add(string $path)', 'command': 'func', 'args_str': 'add(string $path)', 'args': ['add(string', '$path)'], 'file_path': '@sys.path', 'line_number': 4, 'strings': [[False, 'func add(string $path)']], 'arg_strings': [[False, 'add(string $path)']]}, {'str': 'python (\'os.environ["PASHMAKPATH"] += ":\' + str($path) + \':"\')', 'command': 'python', 'args_str': '(\'os.environ["PASHMAKPATH"] += ":\' + str($path) + \':"\')', 'args': ['(\'os.environ["PASHMAKPATH"]', '+=', '":\'', '+', 'str($path)', '+', '\':"\')'], 'file_path': '@sys.path', 'line_number': 5, 'strings': [[False, 'python ('], [True, '\'os.environ["PASHMAKPATH"] += ":\''], [False, ' + str($path) + '], [True, '\':"\''], [False, ')']], 'arg_strings': [[False, '('], [True, '\'os.environ["PASHMAKPATH"] += ":\''], [False, ' + str($path) + '], [True, '\':"\''], [False, ')']]}, {'str': 'python ("self.bootstrap_modules()")', 'command': 'python', 'args_str': '("self.bootstrap_modules()")', 'args': ['("self.bootstrap_modules()")'], 'file_path': '@sys.path', 'line_number': 6, 'strings': [[False, 'python ('], [True, '"self.bootstrap_modules()"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"self.bootstrap_modules()"'], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@sys.path', 'line_number': 7, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """        Returns pashmakpath as list of strings.        """', 'command': '@doc', 'args_str': '"""        Returns pashmakpath as list of strings.        """', 'args': ['"""', 'Returns', 'pashmakpath', 'as', 'list', 'of', 'strings.', '"""'], 'file_path': '@sys.path', 'line_number': 8, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"        Returns pashmakpath as list of strings.        "'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"        Returns pashmakpath as list of strings.        "'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func array[string]::list()', 'command': 'func', 'args_str': 'array[string]::list()', 'args': ['array[string]::list()'], 'file_path': '@sys.path', 'line_number': 9, 'strings': [[False, 'func array[string]::list()']], 'arg_strings': [[False, 'array[string]::list()']]}, {'str': "$paths_list = py_load_module('os')->environ['PASHMAKPATH']->strip()->split(':')", 'command': '$paths_list', 'args_str': "= py_load_module('os')->environ['PASHMAKPATH']->strip()->split(':')", 'args': ['=', "py_load_module('os')->environ['PASHMAKPATH']->strip()->split(':')"], 'file_path': '@sys.path', 'line_number': 10, 'strings': [[False, '$paths_list = py_load_module('], [True, "'os'"], [False, ')->environ['], [True, "'PASHMAKPATH'"], [False, ']->strip()->split('], [True, "':'"], [False, ')']], 'arg_strings': [[False, '= py_load_module('], [True, "'os'"], [False, ')->environ['], [True, "'PASHMAKPATH'"], [False, ']->strip()->split('], [True, "':'"], [False, ')']]}, {'str': "$paths_list = [item.strip() for item in $paths_list if item != '']", 'command': '$paths_list', 'args_str': "= [item.strip() for item in $paths_list if item != '']", 'args': ['=', '[item.strip()', 'for', 'item', 'in', '$paths_list', 'if', 'item', '!=', "'']"], 'file_path': '@sys.path', 'line_number': 11, 'strings': [[False, '$paths_list = [item.strip() for item in $paths_list if item != '], [True, "''"], [False, ']']], 'arg_strings': [[False, '= [item.strip() for item in $paths_list if item != '], [True, "''"], [False, ']']]}, {'str': 'return $paths_list', 'command': 'return', 'args_str': '$paths_list', 'args': ['$paths_list'], 'file_path': '@sys.path', 'line_number': 12, 'strings': [[False, 'return $paths_list']], 'arg_strings': [[False, '$paths_list']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@sys.path', 'line_number': 13, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@sys.path', 'line_number': 14, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@sys.path', 'line_number': 15, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}]
modules["test"] = [{'str': 'namespace test', 'command': 'namespace', 'args_str': 'test', 'args': ['test'], 'file_path': '@test', 'line_number': 1, 'strings': [[False, 'namespace test']], 'arg_strings': [[False, 'test']]}, {'str': 'func doAssert($value)', 'command': 'func', 'args_str': 'doAssert($value)', 'args': ['doAssert($value)'], 'file_path': '@test', 'line_number': 2, 'strings': [[False, 'func doAssert($value)']], 'arg_strings': [[False, 'doAssert($value)']]}, {'str': 'assert ($value)', 'command': 'assert', 'args_str': '($value)', 'args': ['($value)'], 'file_path': '@test', 'line_number': 3, 'strings': [[False, 'assert ($value)']], 'arg_strings': [[False, '($value)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 4, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func assertTrue($value)', 'command': 'func', 'args_str': 'assertTrue($value)', 'args': ['assertTrue($value)'], 'file_path': '@test', 'line_number': 5, 'strings': [[False, 'func assertTrue($value)']], 'arg_strings': [[False, 'assertTrue($value)']]}, {'str': 'test.doAssert ($value)', 'command': 'test.doAssert', 'args_str': '($value)', 'args': ['($value)'], 'file_path': '@test', 'line_number': 6, 'strings': [[False, 'test.doAssert ($value)']], 'arg_strings': [[False, '($value)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 7, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func assertFalse($value)', 'command': 'func', 'args_str': 'assertFalse($value)', 'args': ['assertFalse($value)'], 'file_path': '@test', 'line_number': 8, 'strings': [[False, 'func assertFalse($value)']], 'arg_strings': [[False, 'assertFalse($value)']]}, {'str': 'test.doAssert (not $value)', 'command': 'test.doAssert', 'args_str': '(not $value)', 'args': ['(not', '$value)'], 'file_path': '@test', 'line_number': 9, 'strings': [[False, 'test.doAssert (not $value)']], 'arg_strings': [[False, '(not $value)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 10, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func assertEquals($a, $b)', 'command': 'func', 'args_str': 'assertEquals($a, $b)', 'args': ['assertEquals($a,', '$b)'], 'file_path': '@test', 'line_number': 11, 'strings': [[False, 'func assertEquals($a, $b)']], 'arg_strings': [[False, 'assertEquals($a, $b)']]}, {'str': 'test.doAssert ($a == $b)', 'command': 'test.doAssert', 'args_str': '($a == $b)', 'args': ['($a', '==', '$b)'], 'file_path': '@test', 'line_number': 12, 'strings': [[False, 'test.doAssert ($a == $b)']], 'arg_strings': [[False, '($a == $b)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 13, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func assertNotEquals($a, $b)', 'command': 'func', 'args_str': 'assertNotEquals($a, $b)', 'args': ['assertNotEquals($a,', '$b)'], 'file_path': '@test', 'line_number': 14, 'strings': [[False, 'func assertNotEquals($a, $b)']], 'arg_strings': [[False, 'assertNotEquals($a, $b)']]}, {'str': 'test.doAssert ($a != $b)', 'command': 'test.doAssert', 'args_str': '($a != $b)', 'args': ['($a', '!=', '$b)'], 'file_path': '@test', 'line_number': 15, 'strings': [[False, 'test.doAssert ($a != $b)']], 'arg_strings': [[False, '($a != $b)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 16, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func assertEmpty($value)', 'command': 'func', 'args_str': 'assertEmpty($value)', 'args': ['assertEmpty($value)'], 'file_path': '@test', 'line_number': 17, 'strings': [[False, 'func assertEmpty($value)']], 'arg_strings': [[False, 'assertEmpty($value)']]}, {'str': 'test.doAssert ($valie == null)', 'command': 'test.doAssert', 'args_str': '($valie == null)', 'args': ['($valie', '==', 'null)'], 'file_path': '@test', 'line_number': 18, 'strings': [[False, 'test.doAssert ($valie == null)']], 'arg_strings': [[False, '($valie == null)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 19, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func assertNotEmpty($value)', 'command': 'func', 'args_str': 'assertNotEmpty($value)', 'args': ['assertNotEmpty($value)'], 'file_path': '@test', 'line_number': 20, 'strings': [[False, 'func assertNotEmpty($value)']], 'arg_strings': [[False, 'assertNotEmpty($value)']]}, {'str': 'test.doAssert ($valie != null)', 'command': 'test.doAssert', 'args_str': '($valie != null)', 'args': ['($valie', '!=', 'null)'], 'file_path': '@test', 'line_number': 21, 'strings': [[False, 'test.doAssert ($valie != null)']], 'arg_strings': [[False, '($valie != null)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 22, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 23, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}]
modules["time"] = [{'str': 'namespace time', 'command': 'namespace', 'args_str': 'time', 'args': ['time'], 'file_path': '@time', 'line_number': 1, 'strings': [[False, 'namespace time']], 'arg_strings': [[False, 'time']]}, {'str': 'func float::time()', 'command': 'func', 'args_str': 'float::time()', 'args': ['float::time()'], 'file_path': '@time', 'line_number': 2, 'strings': [[False, 'func float::time()']], 'arg_strings': [[False, 'float::time()']]}, {'str': "return py_load_module('time')->time()", 'command': 'return', 'args_str': "py_load_module('time')->time()", 'args': ["py_load_module('time')->time()"], 'file_path': '@time', 'line_number': 3, 'strings': [[False, 'return py_load_module('], [True, "'time'"], [False, ')->time()']], 'arg_strings': [[False, 'py_load_module('], [True, "'time'"], [False, ')->time()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 4, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func sleep(float|int $time_to_sleep)', 'command': 'func', 'args_str': 'sleep(float|int $time_to_sleep)', 'args': ['sleep(float|int', '$time_to_sleep)'], 'file_path': '@time', 'line_number': 5, 'strings': [[False, 'func sleep(float|int $time_to_sleep)']], 'arg_strings': [[False, 'sleep(float|int $time_to_sleep)']]}, {'str': "py_load_module ('time')->sleep($time_to_sleep)", 'command': 'py_load_module', 'args_str': "('time')->sleep($time_to_sleep)", 'args': ["('time')->sleep($time_to_sleep)"], 'file_path': '@time', 'line_number': 6, 'strings': [[False, 'py_load_module ('], [True, "'time'"], [False, ')->sleep($time_to_sleep)']], 'arg_strings': [[False, '('], [True, "'time'"], [False, ')->sleep($time_to_sleep)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 7, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func ctime()', 'command': 'func', 'args_str': 'ctime()', 'args': ['ctime()'], 'file_path': '@time', 'line_number': 8, 'strings': [[False, 'func ctime()']], 'arg_strings': [[False, 'ctime()']]}, {'str': "return py_load_module('time')->ctime()", 'command': 'return', 'args_str': "py_load_module('time')->ctime()", 'args': ["py_load_module('time')->ctime()"], 'file_path': '@time', 'line_number': 9, 'strings': [[False, 'return py_load_module('], [True, "'time'"], [False, ')->ctime()']], 'arg_strings': [[False, 'py_load_module('], [True, "'time'"], [False, ')->ctime()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 10, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func gmtime()', 'command': 'func', 'args_str': 'gmtime()', 'args': ['gmtime()'], 'file_path': '@time', 'line_number': 11, 'strings': [[False, 'func gmtime()']], 'arg_strings': [[False, 'gmtime()']]}, {'str': "return py_load_module('time')->gmtime()", 'command': 'return', 'args_str': "py_load_module('time')->gmtime()", 'args': ["py_load_module('time')->gmtime()"], 'file_path': '@time', 'line_number': 12, 'strings': [[False, 'return py_load_module('], [True, "'time'"], [False, ')->gmtime()']], 'arg_strings': [[False, 'py_load_module('], [True, "'time'"], [False, ')->gmtime()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 13, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func localtime()', 'command': 'func', 'args_str': 'localtime()', 'args': ['localtime()'], 'file_path': '@time', 'line_number': 14, 'strings': [[False, 'func localtime()']], 'arg_strings': [[False, 'localtime()']]}, {'str': "return py_load_module('time')->localtime()", 'command': 'return', 'args_str': "py_load_module('time')->localtime()", 'args': ["py_load_module('time')->localtime()"], 'file_path': '@time', 'line_number': 15, 'strings': [[False, 'return py_load_module('], [True, "'time'"], [False, ')->localtime()']], 'arg_strings': [[False, 'py_load_module('], [True, "'time'"], [False, ')->localtime()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 16, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endnamespace ', 'command': 'endnamespace', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 17, 'strings': [[False, 'endnamespace']], 'arg_strings': [[False, '']]}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@time', 'line_number': 18, 'strings': [[False, 'if $__ismain__']], 'arg_strings': [[False, '$__ismain__']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'mem not ($__ismain__)']], 'arg_strings': [[False, 'not ($__ismain__)']]}, {'str': 'gotoif tmplabelif40_2', 'command': 'gotoif', 'args_str': 'tmplabelif40_2', 'args': ['tmplabelif40_2'], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'gotoif tmplabelif40_2']], 'arg_strings': [[False, 'tmplabelif40_2']]}, {'str': 'println ("Current UNIX timestamp: " + str(time.time()))', 'command': 'println', 'args_str': '("Current UNIX timestamp: " + str(time.time()))', 'args': ['("Current', 'UNIX', 'timestamp:', '"', '+', 'str(time.time()))'], 'file_path': '@time', 'line_number': 19, 'strings': [[False, 'println ('], [True, '"Current UNIX timestamp: "'], [False, ' + str(time.time()))']], 'arg_strings': [[False, '('], [True, '"Current UNIX timestamp: "'], [False, ' + str(time.time()))']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 20, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif40_2', 'command': 'label', 'args_str': 'tmplabelif40_2', 'args': ['tmplabelif40_2'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'label tmplabelif40_2']], 'arg_strings': [[False, 'tmplabelif40_2']]}, {'str': 'label tmplabelif40_end', 'command': 'label', 'args_str': 'tmplabelif40_end', 'args': ['tmplabelif40_end'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'label tmplabelif40_end']], 'arg_strings': [[False, 'tmplabelif40_end']]}]
modules["web"] = [{'str': 'import "@os",  "@web.session"', 'command': 'import', 'args_str': '"@os",  "@web.session"', 'args': ['"@os",', '"@web.session"'], 'file_path': '@web', 'line_number': 1, 'strings': [[False, 'import '], [True, '"@os"'], [False, ',  '], [True, '"@web.session"'], [False, '']], 'arg_strings': [[False, ''], [True, '"@os"'], [False, ',  '], [True, '"@web.session"'], [False, '']]}, {'str': 'namespace web', 'command': 'namespace', 'args_str': 'web', 'args': ['web'], 'file_path': '@web', 'line_number': 2, 'strings': [[False, 'namespace web']], 'arg_strings': [[False, 'web']]}, {'str': '@doc """Initializes the web environment."""', 'command': '@doc', 'args_str': '"""Initializes the web environment."""', 'args': ['"""Initializes', 'the', 'web', 'environment."""'], 'file_path': '@web', 'line_number': 3, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Initializes the web environment."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Initializes the web environment."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func init()', 'command': 'func', 'args_str': 'init()', 'args': ['init()'], 'file_path': '@web', 'line_number': 4, 'strings': [[False, 'func init()']], 'arg_strings': [[False, 'init()']]}, {'str': "if 'HTTP_COOKIE' in list($os.env->keys())", 'command': 'if', 'args_str': "'HTTP_COOKIE' in list($os.env->keys())", 'args': ["'HTTP_COOKIE'", 'in', 'list($os.env->keys())'], 'file_path': '@web', 'line_number': 5, 'strings': [[False, 'if '], [True, "'HTTP_COOKIE'"], [False, ' in list($os.env->keys())']], 'arg_strings': [[False, ''], [True, "'HTTP_COOKIE'"], [False, ' in list($os.env->keys())']]}, {'str': "mem not ('HTTP_COOKIE' in list($os.env->keys()))", 'command': 'mem', 'args_str': "not ('HTTP_COOKIE' in list($os.env->keys()))", 'args': ['not', "('HTTP_COOKIE'", 'in', 'list($os.env->keys()))'], 'file_path': '<system>', 'line_number': 4, 'strings': [[False, 'mem not ('], [True, "'HTTP_COOKIE'"], [False, ' in list($os.env->keys()))']], 'arg_strings': [[False, 'not ('], [True, "'HTTP_COOKIE'"], [False, ' in list($os.env->keys()))']]}, {'str': 'gotoif tmplabelif41_2', 'command': 'gotoif', 'args_str': 'tmplabelif41_2', 'args': ['tmplabelif41_2'], 'file_path': '<system>', 'line_number': 4, 'strings': [[False, 'gotoif tmplabelif41_2']], 'arg_strings': [[False, 'tmplabelif41_2']]}, {'str': "$items = urllib.parse.parse_qsl($os.env['HTTP_COOKIE'])", 'command': '$items', 'args_str': "= urllib.parse.parse_qsl($os.env['HTTP_COOKIE'])", 'args': ['=', "urllib.parse.parse_qsl($os.env['HTTP_COOKIE'])"], 'file_path': '@web', 'line_number': 6, 'strings': [[False, '$items = urllib.parse.parse_qsl($os.env['], [True, "'HTTP_COOKIE'"], [False, '])']], 'arg_strings': [[False, '= urllib.parse.parse_qsl($os.env['], [True, "'HTTP_COOKIE'"], [False, '])']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web', 'line_number': 7, 'strings': [[False, '$i = 0']], 'arg_strings': [[False, '= 0']]}, {'str': '$cookies = {}', 'command': '$cookies', 'args_str': '= {}', 'args': ['=', '{}'], 'file_path': '@web', 'line_number': 8, 'strings': [[False, '$cookies = {}']], 'arg_strings': [[False, '= {}']]}, {'str': 'while $i < len($items)', 'command': 'while', 'args_str': '$i < len($items)', 'args': ['$i', '<', 'len($items)'], 'file_path': '@web', 'line_number': 9, 'strings': [[False, 'while $i < len($items)']], 'arg_strings': [[False, '$i < len($items)']]}, {'str': '$cookies[$items[$i][0]] = $items[$i][1]', 'command': '$cookies[$items[$i][0]]', 'args_str': '= $items[$i][1]', 'args': ['=', '$items[$i][1]'], 'file_path': '@web', 'line_number': 10, 'strings': [[False, '$cookies[$items[$i][0]] = $items[$i][1]']], 'arg_strings': [[False, '= $items[$i][1]']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web', 'line_number': 11, 'strings': [[False, '$i = $i + 1']], 'arg_strings': [[False, '= $i + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 12, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': "gset ('web.cookies', $cookies)", 'command': 'gset', 'args_str': "('web.cookies', $cookies)", 'args': ["('web.cookies',", '$cookies)'], 'file_path': '@web', 'line_number': 13, 'strings': [[False, 'gset ('], [True, "'web.cookies'"], [False, ', $cookies)']], 'arg_strings': [[False, '('], [True, "'web.cookies'"], [False, ', $cookies)']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 14, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif41_end', 'command': 'goto', 'args_str': 'tmplabelif41_end', 'args': ['tmplabelif41_end'], 'file_path': '<system>', 'line_number': 15, 'strings': [[False, 'goto tmplabelif41_end']], 'arg_strings': [[False, 'tmplabelif41_end']]}, {'str': 'label tmplabelif41_2', 'command': 'label', 'args_str': 'tmplabelif41_2', 'args': ['tmplabelif41_2'], 'file_path': '<system>', 'line_number': 15, 'strings': [[False, 'label tmplabelif41_2']], 'arg_strings': [[False, 'tmplabelif41_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 15, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif41_3', 'command': 'gotoif', 'args_str': 'tmplabelif41_3', 'args': ['tmplabelif41_3'], 'file_path': '<system>', 'line_number': 15, 'strings': [[False, 'gotoif tmplabelif41_3']], 'arg_strings': [[False, 'tmplabelif41_3']]}, {'str': "gset ('web.cookies', {})", 'command': 'gset', 'args_str': "('web.cookies', {})", 'args': ["('web.cookies',", '{})'], 'file_path': '@web', 'line_number': 15, 'strings': [[False, 'gset ('], [True, "'web.cookies'"], [False, ', {})']], 'arg_strings': [[False, '('], [True, "'web.cookies'"], [False, ', {})']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 16, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif41_3', 'command': 'label', 'args_str': 'tmplabelif41_3', 'args': ['tmplabelif41_3'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'label tmplabelif41_3']], 'arg_strings': [[False, 'tmplabelif41_3']]}, {'str': 'label tmplabelif41_end', 'command': 'label', 'args_str': 'tmplabelif41_end', 'args': ['tmplabelif41_end'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'label tmplabelif41_end']], 'arg_strings': [[False, 'tmplabelif41_end']]}, {'str': "$os.env->setdefault ('QUERY_STRING', '')", 'command': '$os.env->setdefault', 'args_str': "('QUERY_STRING', '')", 'args': ["('QUERY_STRING',", "'')"], 'file_path': '@web', 'line_number': 17, 'strings': [[False, '$os.env->setdefault ('], [True, "'QUERY_STRING'"], [False, ', '], [True, "''"], [False, ')']], 'arg_strings': [[False, '('], [True, "'QUERY_STRING'"], [False, ', '], [True, "''"], [False, ')']]}, {'str': "$os.env->setdefault ('REQUEST_METHOD', 'GET')", 'command': '$os.env->setdefault', 'args_str': "('REQUEST_METHOD', 'GET')", 'args': ["('REQUEST_METHOD',", "'GET')"], 'file_path': '@web', 'line_number': 18, 'strings': [[False, '$os.env->setdefault ('], [True, "'REQUEST_METHOD'"], [False, ', '], [True, "'GET'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'REQUEST_METHOD'"], [False, ', '], [True, "'GET'"], [False, ')']]}, {'str': "$raw_get = $os.env['QUERY_STRING']", 'command': '$raw_get', 'args_str': "= $os.env['QUERY_STRING']", 'args': ['=', "$os.env['QUERY_STRING']"], 'file_path': '@web', 'line_number': 19, 'strings': [[False, '$raw_get = $os.env['], [True, "'QUERY_STRING'"], [False, ']']], 'arg_strings': [[False, '= $os.env['], [True, "'QUERY_STRING'"], [False, ']']]}, {'str': '$tmp_get = urllib.parse.parse_qsl($raw_get)', 'command': '$tmp_get', 'args_str': '= urllib.parse.parse_qsl($raw_get)', 'args': ['=', 'urllib.parse.parse_qsl($raw_get)'], 'file_path': '@web', 'line_number': 20, 'strings': [[False, '$tmp_get = urllib.parse.parse_qsl($raw_get)']], 'arg_strings': [[False, '= urllib.parse.parse_qsl($raw_get)']]}, {'str': '$get = {}', 'command': '$get', 'args_str': '= {}', 'args': ['=', '{}'], 'file_path': '@web', 'line_number': 21, 'strings': [[False, '$get = {}']], 'arg_strings': [[False, '= {}']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web', 'line_number': 22, 'strings': [[False, '$i = 0']], 'arg_strings': [[False, '= 0']]}, {'str': 'while $i < len($tmp_get)', 'command': 'while', 'args_str': '$i < len($tmp_get)', 'args': ['$i', '<', 'len($tmp_get)'], 'file_path': '@web', 'line_number': 23, 'strings': [[False, 'while $i < len($tmp_get)']], 'arg_strings': [[False, '$i < len($tmp_get)']]}, {'str': '$get[$tmp_get[$i][0]] = $tmp_get[$i][1]', 'command': '$get[$tmp_get[$i][0]]', 'args_str': '= $tmp_get[$i][1]', 'args': ['=', '$tmp_get[$i][1]'], 'file_path': '@web', 'line_number': 24, 'strings': [[False, '$get[$tmp_get[$i][0]] = $tmp_get[$i][1]']], 'arg_strings': [[False, '= $tmp_get[$i][1]']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web', 'line_number': 25, 'strings': [[False, '$i = $i + 1']], 'arg_strings': [[False, '= $i + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 26, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': '$post = {}', 'command': '$post', 'args_str': '= {}', 'args': ['=', '{}'], 'file_path': '@web', 'line_number': 27, 'strings': [[False, '$post = {}']], 'arg_strings': [[False, '= {}']]}, {'str': "if $os.env['REQUEST_METHOD'] == 'POST'", 'command': 'if', 'args_str': "$os.env['REQUEST_METHOD'] == 'POST'", 'args': ["$os.env['REQUEST_METHOD']", '==', "'POST'"], 'file_path': '@web', 'line_number': 28, 'strings': [[False, 'if $os.env['], [True, "'REQUEST_METHOD'"], [False, '] == '], [True, "'POST'"], [False, '']], 'arg_strings': [[False, '$os.env['], [True, "'REQUEST_METHOD'"], [False, '] == '], [True, "'POST'"], [False, '']]}, {'str': "mem not ($os.env['REQUEST_METHOD'] == 'POST')", 'command': 'mem', 'args_str': "not ($os.env['REQUEST_METHOD'] == 'POST')", 'args': ['not', "($os.env['REQUEST_METHOD']", '==', "'POST')"], 'file_path': '<system>', 'line_number': 35, 'strings': [[False, 'mem not ($os.env['], [True, "'REQUEST_METHOD'"], [False, '] == '], [True, "'POST'"], [False, ')']], 'arg_strings': [[False, 'not ($os.env['], [True, "'REQUEST_METHOD'"], [False, '] == '], [True, "'POST'"], [False, ')']]}, {'str': 'gotoif tmplabelif42_2', 'command': 'gotoif', 'args_str': 'tmplabelif42_2', 'args': ['tmplabelif42_2'], 'file_path': '<system>', 'line_number': 35, 'strings': [[False, 'gotoif tmplabelif42_2']], 'arg_strings': [[False, 'tmplabelif42_2']]}, {'str': '$raw_post = read()', 'command': '$raw_post', 'args_str': '= read()', 'args': ['=', 'read()'], 'file_path': '@web', 'line_number': 29, 'strings': [[False, '$raw_post = read()']], 'arg_strings': [[False, '= read()']]}, {'str': "$os.env['POST_RAW_DATA'] = $raw_post", 'command': "$os.env['POST_RAW_DATA']", 'args_str': '= $raw_post', 'args': ['=', '$raw_post'], 'file_path': '@web', 'line_number': 30, 'strings': [[False, '$os.env['], [True, "'POST_RAW_DATA'"], [False, '] = $raw_post']], 'arg_strings': [[False, '= $raw_post']]}, {'str': '$is_json = false', 'command': '$is_json', 'args_str': '= false', 'args': ['=', 'false'], 'file_path': '@web', 'line_number': 31, 'strings': [[False, '$is_json = false']], 'arg_strings': [[False, '= false']]}, {'str': 'try web_init_check_json_error', 'command': 'try', 'args_str': 'web_init_check_json_error', 'args': ['web_init_check_json_error'], 'file_path': '@web', 'line_number': 32, 'strings': [[False, 'try web_init_check_json_error']], 'arg_strings': [[False, 'web_init_check_json_error']]}, {'str': 'json.loads ($raw_post)', 'command': 'json.loads', 'args_str': '($raw_post)', 'args': ['($raw_post)'], 'file_path': '@web', 'line_number': 33, 'strings': [[False, 'json.loads ($raw_post)']], 'arg_strings': [[False, '($raw_post)']]}, {'str': '$is_json = true', 'command': '$is_json', 'args_str': '= true', 'args': ['=', 'true'], 'file_path': '@web', 'line_number': 34, 'strings': [[False, '$is_json = true']], 'arg_strings': [[False, '= true']]}, {'str': 'endtry ', 'command': 'endtry', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 35, 'strings': [[False, 'endtry']], 'arg_strings': [[False, '']]}, {'str': 'goto after_web_init_check_json_error', 'command': 'goto', 'args_str': 'after_web_init_check_json_error', 'args': ['after_web_init_check_json_error'], 'file_path': '@web', 'line_number': 36, 'strings': [[False, 'goto after_web_init_check_json_error']], 'arg_strings': [[False, 'after_web_init_check_json_error']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'arg_strings': [[False, '']]}, {'str': 'label web_init_check_json_error', 'command': 'label', 'args_str': 'web_init_check_json_error', 'args': ['web_init_check_json_error'], 'file_path': '@web', 'line_number': 36, 'strings': [[False, 'label web_init_check_json_error']], 'arg_strings': [[False, 'web_init_check_json_error']]}, {'str': '$is_json = false', 'command': '$is_json', 'args_str': '= false', 'args': ['=', 'false'], 'file_path': '@web', 'line_number': 37, 'strings': [[False, '$is_json = false']], 'arg_strings': [[False, '= false']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'arg_strings': [[False, '']]}, {'str': 'label after_web_init_check_json_error', 'command': 'label', 'args_str': 'after_web_init_check_json_error', 'args': ['after_web_init_check_json_error'], 'file_path': '@web', 'line_number': 38, 'strings': [[False, 'label after_web_init_check_json_error']], 'arg_strings': [[False, 'after_web_init_check_json_error']]}, {'str': 'if $is_json', 'command': 'if', 'args_str': '$is_json', 'args': ['$is_json'], 'file_path': '@web', 'line_number': 39, 'strings': [[False, 'if $is_json']], 'arg_strings': [[False, '$is_json']]}, {'str': 'mem not ($is_json)', 'command': 'mem', 'args_str': 'not ($is_json)', 'args': ['not', '($is_json)'], 'file_path': '<system>', 'line_number': 51, 'strings': [[False, 'mem not ($is_json)']], 'arg_strings': [[False, 'not ($is_json)']]}, {'str': 'gotoif tmplabelif43_2', 'command': 'gotoif', 'args_str': 'tmplabelif43_2', 'args': ['tmplabelif43_2'], 'file_path': '<system>', 'line_number': 51, 'strings': [[False, 'gotoif tmplabelif43_2']], 'arg_strings': [[False, 'tmplabelif43_2']]}, {'str': '$post = json.loads($raw_post)', 'command': '$post', 'args_str': '= json.loads($raw_post)', 'args': ['=', 'json.loads($raw_post)'], 'file_path': '@web', 'line_number': 40, 'strings': [[False, '$post = json.loads($raw_post)']], 'arg_strings': [[False, '= json.loads($raw_post)']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 41, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif43_end', 'command': 'goto', 'args_str': 'tmplabelif43_end', 'args': ['tmplabelif43_end'], 'file_path': '<system>', 'line_number': 55, 'strings': [[False, 'goto tmplabelif43_end']], 'arg_strings': [[False, 'tmplabelif43_end']]}, {'str': 'label tmplabelif43_2', 'command': 'label', 'args_str': 'tmplabelif43_2', 'args': ['tmplabelif43_2'], 'file_path': '<system>', 'line_number': 55, 'strings': [[False, 'label tmplabelif43_2']], 'arg_strings': [[False, 'tmplabelif43_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 55, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif43_3', 'command': 'gotoif', 'args_str': 'tmplabelif43_3', 'args': ['tmplabelif43_3'], 'file_path': '<system>', 'line_number': 55, 'strings': [[False, 'gotoif tmplabelif43_3']], 'arg_strings': [[False, 'tmplabelif43_3']]}, {'str': '$tmp_post = urllib.parse.parse_qsl($raw_post)', 'command': '$tmp_post', 'args_str': '= urllib.parse.parse_qsl($raw_post)', 'args': ['=', 'urllib.parse.parse_qsl($raw_post)'], 'file_path': '@web', 'line_number': 42, 'strings': [[False, '$tmp_post = urllib.parse.parse_qsl($raw_post)']], 'arg_strings': [[False, '= urllib.parse.parse_qsl($raw_post)']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web', 'line_number': 43, 'strings': [[False, '$i = 0']], 'arg_strings': [[False, '= 0']]}, {'str': 'while $i < len($tmp_post)', 'command': 'while', 'args_str': '$i < len($tmp_post)', 'args': ['$i', '<', 'len($tmp_post)'], 'file_path': '@web', 'line_number': 44, 'strings': [[False, 'while $i < len($tmp_post)']], 'arg_strings': [[False, '$i < len($tmp_post)']]}, {'str': '$post[$tmp_post[$i][0]] = $tmp_post[$i][1]', 'command': '$post[$tmp_post[$i][0]]', 'args_str': '= $tmp_post[$i][1]', 'args': ['=', '$tmp_post[$i][1]'], 'file_path': '@web', 'line_number': 45, 'strings': [[False, '$post[$tmp_post[$i][0]] = $tmp_post[$i][1]']], 'arg_strings': [[False, '= $tmp_post[$i][1]']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web', 'line_number': 46, 'strings': [[False, '$i = $i + 1']], 'arg_strings': [[False, '= $i + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 47, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 48, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif43_3', 'command': 'label', 'args_str': 'tmplabelif43_3', 'args': ['tmplabelif43_3'], 'file_path': '<system>', 'line_number': 66, 'strings': [[False, 'label tmplabelif43_3']], 'arg_strings': [[False, 'tmplabelif43_3']]}, {'str': 'label tmplabelif43_end', 'command': 'label', 'args_str': 'tmplabelif43_end', 'args': ['tmplabelif43_end'], 'file_path': '<system>', 'line_number': 66, 'strings': [[False, 'label tmplabelif43_end']], 'arg_strings': [[False, 'tmplabelif43_end']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 49, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif42_2', 'command': 'label', 'args_str': 'tmplabelif42_2', 'args': ['tmplabelif42_2'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'label tmplabelif42_2']], 'arg_strings': [[False, 'tmplabelif42_2']]}, {'str': 'label tmplabelif42_end', 'command': 'label', 'args_str': 'tmplabelif42_end', 'args': ['tmplabelif42_end'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'label tmplabelif42_end']], 'arg_strings': [[False, 'tmplabelif42_end']]}, {'str': "gset ('web.get', $get)", 'command': 'gset', 'args_str': "('web.get', $get)", 'args': ["('web.get',", '$get)'], 'file_path': '@web', 'line_number': 50, 'strings': [[False, 'gset ('], [True, "'web.get'"], [False, ', $get)']], 'arg_strings': [[False, '('], [True, "'web.get'"], [False, ', $get)']]}, {'str': "gset ('web.post', $post)", 'command': 'gset', 'args_str': "('web.post', $post)", 'args': ["('web.post',", '$post)'], 'file_path': '@web', 'line_number': 51, 'strings': [[False, 'gset ('], [True, "'web.post'"], [False, ', $post)']], 'arg_strings': [[False, '('], [True, "'web.post'"], [False, ', $post)']]}, {'str': "define ('WEB_INITED', true)", 'command': 'define', 'args_str': "('WEB_INITED', true)", 'args': ["('WEB_INITED',", 'true)'], 'file_path': '@web', 'line_number': 52, 'strings': [[False, 'define ('], [True, "'WEB_INITED'"], [False, ', true)']], 'arg_strings': [[False, '('], [True, "'WEB_INITED'"], [False, ', true)']]}, {'str': "set_header ('Content-type', 'text/html')", 'command': 'set_header', 'args_str': "('Content-type', 'text/html')", 'args': ["('Content-type',", "'text/html')"], 'file_path': '@web', 'line_number': 53, 'strings': [[False, 'set_header ('], [True, "'Content-type'"], [False, ', '], [True, "'text/html'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'Content-type'"], [False, ', '], [True, "'text/html'"], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 54, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Sets a http header.\\nFirst argument is name of header and last is value(both string)."""', 'command': '@doc', 'args_str': '"""Sets a http header.\\nFirst argument is name of header and last is value(both string)."""', 'args': ['"""Sets', 'a', 'http', 'header.\\nFirst', 'argument', 'is', 'name', 'of', 'header', 'and', 'last', 'is', 'value(both', 'string)."""'], 'file_path': '@web', 'line_number': 55, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Sets a http header.\\nFirst argument is name of header and last is value(both string)."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Sets a http header.\\nFirst argument is name of header and last is value(both string)."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func set_header(string $name, $value)', 'command': 'func', 'args_str': 'set_header(string $name, $value)', 'args': ['set_header(string', '$name,', '$value)'], 'file_path': '@web', 'line_number': 56, 'strings': [[False, 'func set_header(string $name, $value)']], 'arg_strings': [[False, 'set_header(string $name, $value)']]}, {'str': "if is_defined('WEB_END_HEADERS')", 'command': 'if', 'args_str': "is_defined('WEB_END_HEADERS')", 'args': ["is_defined('WEB_END_HEADERS')"], 'file_path': '@web', 'line_number': 57, 'strings': [[False, 'if is_defined('], [True, "'WEB_END_HEADERS'"], [False, ')']], 'arg_strings': [[False, 'is_defined('], [True, "'WEB_END_HEADERS'"], [False, ')']]}, {'str': "mem not (is_defined('WEB_END_HEADERS'))", 'command': 'mem', 'args_str': "not (is_defined('WEB_END_HEADERS'))", 'args': ['not', "(is_defined('WEB_END_HEADERS'))"], 'file_path': '<system>', 'line_number': 79, 'strings': [[False, 'mem not (is_defined('], [True, "'WEB_END_HEADERS'"], [False, '))']], 'arg_strings': [[False, 'not (is_defined('], [True, "'WEB_END_HEADERS'"], [False, '))']]}, {'str': 'gotoif tmplabelif44_2', 'command': 'gotoif', 'args_str': 'tmplabelif44_2', 'args': ['tmplabelif44_2'], 'file_path': '<system>', 'line_number': 79, 'strings': [[False, 'gotoif tmplabelif44_2']], 'arg_strings': [[False, 'tmplabelif44_2']]}, {'str': "raise (Error('HeaderError', 'headers already sent'))", 'command': 'raise', 'args_str': "(Error('HeaderError', 'headers already sent'))", 'args': ["(Error('HeaderError',", "'headers", 'already', "sent'))"], 'file_path': '@web', 'line_number': 58, 'strings': [[False, 'raise (Error('], [True, "'HeaderError'"], [False, ', '], [True, "'headers already sent'"], [False, '))']], 'arg_strings': [[False, '(Error('], [True, "'HeaderError'"], [False, ', '], [True, "'headers already sent'"], [False, '))']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 59, 'strings': [[False, 'return']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 60, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif44_2', 'command': 'label', 'args_str': 'tmplabelif44_2', 'args': ['tmplabelif44_2'], 'file_path': '<system>', 'line_number': 84, 'strings': [[False, 'label tmplabelif44_2']], 'arg_strings': [[False, 'tmplabelif44_2']]}, {'str': 'label tmplabelif44_end', 'command': 'label', 'args_str': 'tmplabelif44_end', 'args': ['tmplabelif44_end'], 'file_path': '<system>', 'line_number': 84, 'strings': [[False, 'label tmplabelif44_end']], 'arg_strings': [[False, 'tmplabelif44_end']]}, {'str': "print (str($name) + ': ' + str($value) + '\\n')", 'command': 'print', 'args_str': "(str($name) + ': ' + str($value) + '\\n')", 'args': ['(str($name)', '+', "':", "'", '+', 'str($value)', '+', "'\\n')"], 'file_path': '@web', 'line_number': 61, 'strings': [[False, 'print (str($name) + '], [True, "': '"], [False, ' + str($value) + '], [True, "'\\n'"], [False, ')']], 'arg_strings': [[False, '(str($name) + '], [True, "': '"], [False, ' + str($value) + '], [True, "'\\n'"], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 62, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Sets http response code.\\nGets code as int."""', 'command': '@doc', 'args_str': '"""Sets http response code.\\nGets code as int."""', 'args': ['"""Sets', 'http', 'response', 'code.\\nGets', 'code', 'as', 'int."""'], 'file_path': '@web', 'line_number': 63, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Sets http response code.\\nGets code as int."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Sets http response code.\\nGets code as int."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func status(int $code)', 'command': 'func', 'args_str': 'status(int $code)', 'args': ['status(int', '$code)'], 'file_path': '@web', 'line_number': 64, 'strings': [[False, 'func status(int $code)']], 'arg_strings': [[False, 'status(int $code)']]}, {'str': "set_header ('Status', str($code))", 'command': 'set_header', 'args_str': "('Status', str($code))", 'args': ["('Status',", 'str($code))'], 'file_path': '@web', 'line_number': 65, 'strings': [[False, 'set_header ('], [True, "'Status'"], [False, ', str($code))']], 'arg_strings': [[False, '('], [True, "'Status'"], [False, ', str($code))']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 66, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc """Sets a HTTP cookie.\\nGets options as dictionary."""', 'command': '@doc', 'args_str': '"""Sets a HTTP cookie.\\nGets options as dictionary."""', 'args': ['"""Sets', 'a', 'HTTP', 'cookie.\\nGets', 'options', 'as', 'dictionary."""'], 'file_path': '@web', 'line_number': 67, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Sets a HTTP cookie.\\nGets options as dictionary."'], [False, ''], [True, '""'], [False, '']], 'arg_strings': [[False, ''], [True, '""'], [False, ''], [True, '"Sets a HTTP cookie.\\nGets options as dictionary."'], [False, ''], [True, '""'], [False, '']]}, {'str': 'func set_cookie(dict $options)', 'command': 'func', 'args_str': 'set_cookie(dict $options)', 'args': ['set_cookie(dict', '$options)'], 'file_path': '@web', 'line_number': 68, 'strings': [[False, 'func set_cookie(dict $options)']], 'arg_strings': [[False, 'set_cookie(dict $options)']]}, {'str': "$options->setdefault ('value', '')", 'command': '$options->setdefault', 'args_str': "('value', '')", 'args': ["('value',", "'')"], 'file_path': '@web', 'line_number': 69, 'strings': [[False, '$options->setdefault ('], [True, "'value'"], [False, ', '], [True, "''"], [False, ')']], 'arg_strings': [[False, '('], [True, "'value'"], [False, ', '], [True, "''"], [False, ')']]}, {'str': "$tmp = urllib.parse.urlencode([        ($options['name'], $options['value'])    ])->split('=', 1)", 'command': '$tmp', 'args_str': "= urllib.parse.urlencode([        ($options['name'], $options['value'])    ])->split('=', 1)", 'args': ['=', 'urllib.parse.urlencode([', "($options['name'],", "$options['value'])", "])->split('=',", '1)'], 'file_path': '@web', 'line_number': 70, 'strings': [[False, '$tmp = urllib.parse.urlencode([        ($options['], [True, "'name'"], [False, '], $options['], [True, "'value'"], [False, '])    ])->split('], [True, "'='"], [False, ', 1)']], 'arg_strings': [[False, '= urllib.parse.urlencode([        ($options['], [True, "'name'"], [False, '], $options['], [True, "'value'"], [False, '])    ])->split('], [True, "'='"], [False, ', 1)']]}, {'str': "$options['name'] = $tmp[0]->strip()", 'command': "$options['name']", 'args_str': '= $tmp[0]->strip()', 'args': ['=', '$tmp[0]->strip()'], 'file_path': '@web', 'line_number': 71, 'strings': [[False, '$options['], [True, "'name'"], [False, '] = $tmp[0]->strip()']], 'arg_strings': [[False, '= $tmp[0]->strip()']]}, {'str': "$options['value'] = $tmp[1]", 'command': "$options['value']", 'args_str': '= $tmp[1]', 'args': ['=', '$tmp[1]'], 'file_path': '@web', 'line_number': 72, 'strings': [[False, '$options['], [True, "'value'"], [False, '] = $tmp[1]']], 'arg_strings': [[False, '= $tmp[1]']]}, {'str': '$base_cookie = http.cookies.BaseCookie()', 'command': '$base_cookie', 'args_str': '= http.cookies.BaseCookie()', 'args': ['=', 'http.cookies.BaseCookie()'], 'file_path': '@web', 'line_number': 73, 'strings': [[False, '$base_cookie = http.cookies.BaseCookie()']], 'arg_strings': [[False, '= http.cookies.BaseCookie()']]}, {'str': "$base_cookie[$options['name']] = $options['value']", 'command': "$base_cookie[$options['name']]", 'args_str': "= $options['value']", 'args': ['=', "$options['value']"], 'file_path': '@web', 'line_number': 74, 'strings': [[False, '$base_cookie[$options['], [True, "'name'"], [False, ']] = $options['], [True, "'value'"], [False, ']']], 'arg_strings': [[False, '= $options['], [True, "'value'"], [False, ']']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web', 'line_number': 75, 'strings': [[False, '$i = 0']], 'arg_strings': [[False, '= 0']]}, {'str': '$keys = list($options->keys())', 'command': '$keys', 'args_str': '= list($options->keys())', 'args': ['=', 'list($options->keys())'], 'file_path': '@web', 'line_number': 76, 'strings': [[False, '$keys = list($options->keys())']], 'arg_strings': [[False, '= list($options->keys())']]}, {'str': 'while $i < len($keys)', 'command': 'while', 'args_str': '$i < len($keys)', 'args': ['$i', '<', 'len($keys)'], 'file_path': '@web', 'line_number': 77, 'strings': [[False, 'while $i < len($keys)']], 'arg_strings': [[False, '$i < len($keys)']]}, {'str': "if $keys[$i] not in ['name', 'value']", 'command': 'if', 'args_str': "$keys[$i] not in ['name', 'value']", 'args': ['$keys[$i]', 'not', 'in', "['name',", "'value']"], 'file_path': '@web', 'line_number': 78, 'strings': [[False, 'if $keys[$i] not in ['], [True, "'name'"], [False, ', '], [True, "'value'"], [False, ']']], 'arg_strings': [[False, '$keys[$i] not in ['], [True, "'name'"], [False, ', '], [True, "'value'"], [False, ']']]}, {'str': "mem not ($keys[$i] not in ['name', 'value'])", 'command': 'mem', 'args_str': "not ($keys[$i] not in ['name', 'value'])", 'args': ['not', '($keys[$i]', 'not', 'in', "['name',", "'value'])"], 'file_path': '<system>', 'line_number': 104, 'strings': [[False, 'mem not ($keys[$i] not in ['], [True, "'name'"], [False, ', '], [True, "'value'"], [False, '])']], 'arg_strings': [[False, 'not ($keys[$i] not in ['], [True, "'name'"], [False, ', '], [True, "'value'"], [False, '])']]}, {'str': 'gotoif tmplabelif45_2', 'command': 'gotoif', 'args_str': 'tmplabelif45_2', 'args': ['tmplabelif45_2'], 'file_path': '<system>', 'line_number': 104, 'strings': [[False, 'gotoif tmplabelif45_2']], 'arg_strings': [[False, 'tmplabelif45_2']]}, {'str': "$base_cookie[$options['name']][$keys[$i]] = $options[$keys[$i]]", 'command': "$base_cookie[$options['name']][$keys[$i]]", 'args_str': '= $options[$keys[$i]]', 'args': ['=', '$options[$keys[$i]]'], 'file_path': '@web', 'line_number': 79, 'strings': [[False, '$base_cookie[$options['], [True, "'name'"], [False, ']][$keys[$i]] = $options[$keys[$i]]']], 'arg_strings': [[False, '= $options[$keys[$i]]']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 80, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif45_2', 'command': 'label', 'args_str': 'tmplabelif45_2', 'args': ['tmplabelif45_2'], 'file_path': '<system>', 'line_number': 108, 'strings': [[False, 'label tmplabelif45_2']], 'arg_strings': [[False, 'tmplabelif45_2']]}, {'str': 'label tmplabelif45_end', 'command': 'label', 'args_str': 'tmplabelif45_end', 'args': ['tmplabelif45_end'], 'file_path': '<system>', 'line_number': 108, 'strings': [[False, 'label tmplabelif45_end']], 'arg_strings': [[False, 'tmplabelif45_end']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web', 'line_number': 81, 'strings': [[False, '$i = $i + 1']], 'arg_strings': [[False, '= $i + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 82, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': '$output = $base_cookie->output()', 'command': '$output', 'args_str': '= $base_cookie->output()', 'args': ['=', '$base_cookie->output()'], 'file_path': '@web', 'line_number': 83, 'strings': [[False, '$output = $base_cookie->output()']], 'arg_strings': [[False, '= $base_cookie->output()']]}, {'str': "$output = $output->split(':', 1)[-1]->strip()->split('=', 1)", 'command': '$output', 'args_str': "= $output->split(':', 1)[-1]->strip()->split('=', 1)", 'args': ['=', "$output->split(':',", "1)[-1]->strip()->split('=',", '1)'], 'file_path': '@web', 'line_number': 84, 'strings': [[False, '$output = $output->split('], [True, "':'"], [False, ', 1)[-1]->strip()->split('], [True, "'='"], [False, ', 1)']], 'arg_strings': [[False, '= $output->split('], [True, "':'"], [False, ', 1)[-1]->strip()->split('], [True, "'='"], [False, ', 1)']]}, {'str': "set_header ('Set-Cookie', $output[0]->strip() + '=' + $output[-1])", 'command': 'set_header', 'args_str': "('Set-Cookie', $output[0]->strip() + '=' + $output[-1])", 'args': ["('Set-Cookie',", '$output[0]->strip()', '+', "'='", '+', '$output[-1])'], 'file_path': '@web', 'line_number': 85, 'strings': [[False, 'set_header ('], [True, "'Set-Cookie'"], [False, ', $output[0]->strip() + '], [True, "'='"], [False, ' + $output[-1])']], 'arg_strings': [[False, '('], [True, "'Set-Cookie'"], [False, ', $output[0]->strip() + '], [True, "'='"], [False, ' + $output[-1])']]}, {'str': "$real_cookies = gget('web.cookies')", 'command': '$real_cookies', 'args_str': "= gget('web.cookies')", 'args': ['=', "gget('web.cookies')"], 'file_path': '@web', 'line_number': 86, 'strings': [[False, '$real_cookies = gget('], [True, "'web.cookies'"], [False, ')']], 'arg_strings': [[False, '= gget('], [True, "'web.cookies'"], [False, ')']]}, {'str': "$tmp = urllib.parse.parse_qsl($output[0]->strip() + '=' + $output[-1])", 'command': '$tmp', 'args_str': "= urllib.parse.parse_qsl($output[0]->strip() + '=' + $output[-1])", 'args': ['=', 'urllib.parse.parse_qsl($output[0]->strip()', '+', "'='", '+', '$output[-1])'], 'file_path': '@web', 'line_number': 87, 'strings': [[False, '$tmp = urllib.parse.parse_qsl($output[0]->strip() + '], [True, "'='"], [False, ' + $output[-1])']], 'arg_strings': [[False, '= urllib.parse.parse_qsl($output[0]->strip() + '], [True, "'='"], [False, ' + $output[-1])']]}, {'str': '$real_cookies[$tmp[0][0]] = $tmp[0][1]', 'command': '$real_cookies[$tmp[0][0]]', 'args_str': '= $tmp[0][1]', 'args': ['=', '$tmp[0][1]'], 'file_path': '@web', 'line_number': 88, 'strings': [[False, '$real_cookies[$tmp[0][0]] = $tmp[0][1]']], 'arg_strings': [[False, '= $tmp[0][1]']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 89, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "Ends the headers"', 'command': '@doc', 'args_str': '"Ends the headers"', 'args': ['"Ends', 'the', 'headers"'], 'file_path': '@web', 'line_number': 90, 'strings': [[False, '@doc '], [True, '"Ends the headers"'], [False, '']], 'arg_strings': [[False, ''], [True, '"Ends the headers"'], [False, '']]}, {'str': 'func end_headers()', 'command': 'func', 'args_str': 'end_headers()', 'args': ['end_headers()'], 'file_path': '@web', 'line_number': 91, 'strings': [[False, 'func end_headers()']], 'arg_strings': [[False, 'end_headers()']]}, {'str': "println ('')", 'command': 'println', 'args_str': "('')", 'args': ["('')"], 'file_path': '@web', 'line_number': 92, 'strings': [[False, 'println ('], [True, "''"], [False, ')']], 'arg_strings': [[False, '('], [True, "''"], [False, ')']]}, {'str': "define ('WEB_END_HEADERS', true)", 'command': 'define', 'args_str': "('WEB_END_HEADERS', true)", 'args': ["('WEB_END_HEADERS',", 'true)'], 'file_path': '@web', 'line_number': 93, 'strings': [[False, 'define ('], [True, "'WEB_END_HEADERS'"], [False, ', true)']], 'arg_strings': [[False, '('], [True, "'WEB_END_HEADERS'"], [False, ', true)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 94, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 95, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}]
modules["web.server"] = [{'str': 'namespace web', 'command': 'namespace', 'args_str': 'web', 'args': ['web'], 'file_path': '@web.server', 'line_number': 1, 'strings': [[False, 'namespace web']], 'arg_strings': [[False, 'web']]}, {'str': 'namespace server', 'command': 'namespace', 'args_str': 'server', 'args': ['server'], 'file_path': '@web.server', 'line_number': 1, 'strings': [[False, 'namespace server']], 'arg_strings': [[False, 'server']]}, {'str': 'class WebServer', 'command': 'class', 'args_str': 'WebServer', 'args': ['WebServer'], 'file_path': '@web.server', 'line_number': 2, 'strings': [[False, 'class WebServer']], 'arg_strings': [[False, 'WebServer']]}, {'str': 'func __init__(string $host, int $port=8000)', 'command': 'func', 'args_str': '__init__(string $host, int $port=8000)', 'args': ['__init__(string', '$host,', 'int', '$port=8000)'], 'file_path': '@web.server', 'line_number': 3, 'strings': [[False, 'func __init__(string $host, int $port=8000)']], 'arg_strings': [[False, '__init__(string $host, int $port=8000)']]}, {'str': '$this->host = $host', 'command': '$this->host', 'args_str': '= $host', 'args': ['=', '$host'], 'file_path': '@web.server', 'line_number': 4, 'strings': [[False, '$this->host = $host']], 'arg_strings': [[False, '= $host']]}, {'str': '$this->port = $port', 'command': '$this->port', 'args_str': '= $port', 'args': ['=', '$port'], 'file_path': '@web.server', 'line_number': 5, 'strings': [[False, '$this->port = $port']], 'arg_strings': [[False, '= $port']]}, {'str': '$this->do_get = null', 'command': '$this->do_get', 'args_str': '= null', 'args': ['=', 'null'], 'file_path': '@web.server', 'line_number': 6, 'strings': [[False, '$this->do_get = null']], 'arg_strings': [[False, '= null']]}, {'str': '$this->do_post = null', 'command': '$this->do_post', 'args_str': '= null', 'args': ['=', 'null'], 'file_path': '@web.server', 'line_number': 7, 'strings': [[False, '$this->do_post = null']], 'arg_strings': [[False, '= null']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 8, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func web.server.WebServer::set_get($func)', 'command': 'func', 'args_str': 'web.server.WebServer::set_get($func)', 'args': ['web.server.WebServer::set_get($func)'], 'file_path': '@web.server', 'line_number': 9, 'strings': [[False, 'func web.server.WebServer::set_get($func)']], 'arg_strings': [[False, 'web.server.WebServer::set_get($func)']]}, {'str': '$this->do_get = $func', 'command': '$this->do_get', 'args_str': '= $func', 'args': ['=', '$func'], 'file_path': '@web.server', 'line_number': 10, 'strings': [[False, '$this->do_get = $func']], 'arg_strings': [[False, '= $func']]}, {'str': 'return $this', 'command': 'return', 'args_str': '$this', 'args': ['$this'], 'file_path': '@web.server', 'line_number': 11, 'strings': [[False, 'return $this']], 'arg_strings': [[False, '$this']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 12, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func web.server.WebServer::set_post($func)', 'command': 'func', 'args_str': 'web.server.WebServer::set_post($func)', 'args': ['web.server.WebServer::set_post($func)'], 'file_path': '@web.server', 'line_number': 13, 'strings': [[False, 'func web.server.WebServer::set_post($func)']], 'arg_strings': [[False, 'web.server.WebServer::set_post($func)']]}, {'str': '$this->do_post = $func', 'command': '$this->do_post', 'args_str': '= $func', 'args': ['=', '$func'], 'file_path': '@web.server', 'line_number': 14, 'strings': [[False, '$this->do_post = $func']], 'arg_strings': [[False, '= $func']]}, {'str': 'return $this', 'command': 'return', 'args_str': '$this', 'args': ['$this'], 'file_path': '@web.server', 'line_number': 15, 'strings': [[False, 'return $this']], 'arg_strings': [[False, '$this']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 16, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func serve()', 'command': 'func', 'args_str': 'serve()', 'args': ['serve()'], 'file_path': '@web.server', 'line_number': 17, 'strings': [[False, 'func serve()']], 'arg_strings': [[False, 'serve()']]}, {'str': '$py_code = \'def serve(host, port, do_get=None, do_post=None):\\n    class TheServer(http.server.BaseHTTPRequestHandler):\\n        def do_GET(self):\\n            if self.get_event != None:\\n                self.get_event(self)\\n        def do_POST(self):\\n            if self.post_event != None:\\n                self.post_event(self)\\n    tmp_TheServer = copy.deepcopy(TheServer)\\n    tmp_TheServer.get_event = do_get\\n    tmp_TheServer.post_event = do_post\\n    webServer = http.server.HTTPServer((host, port), tmp_TheServer)\\n    return webServer\\nself.mem = serve(self.get_var("this").host, self.get_var("this").port, self.get_var("this").do_get, self.get_var("this").do_post)\\n            \'', 'command': '$py_code', 'args_str': '= \'def serve(host, port, do_get=None, do_post=None):\\n    class TheServer(http.server.BaseHTTPRequestHandler):\\n        def do_GET(self):\\n            if self.get_event != None:\\n                self.get_event(self)\\n        def do_POST(self):\\n            if self.post_event != None:\\n                self.post_event(self)\\n    tmp_TheServer = copy.deepcopy(TheServer)\\n    tmp_TheServer.get_event = do_get\\n    tmp_TheServer.post_event = do_post\\n    webServer = http.server.HTTPServer((host, port), tmp_TheServer)\\n    return webServer\\nself.mem = serve(self.get_var("this").host, self.get_var("this").port, self.get_var("this").do_get, self.get_var("this").do_post)\\n            \'', 'args': ['=', "'def", 'serve(host,', 'port,', 'do_get=None,', 'do_post=None):\\n', 'class', 'TheServer(http.server.BaseHTTPRequestHandler):\\n', 'def', 'do_GET(self):\\n', 'if', 'self.get_event', '!=', 'None:\\n', 'self.get_event(self)\\n', 'def', 'do_POST(self):\\n', 'if', 'self.post_event', '!=', 'None:\\n', 'self.post_event(self)\\n', 'tmp_TheServer', '=', 'copy.deepcopy(TheServer)\\n', 'tmp_TheServer.get_event', '=', 'do_get\\n', 'tmp_TheServer.post_event', '=', 'do_post\\n', 'webServer', '=', 'http.server.HTTPServer((host,', 'port),', 'tmp_TheServer)\\n', 'return', 'webServer\\nself.mem', '=', 'serve(self.get_var("this").host,', 'self.get_var("this").port,', 'self.get_var("this").do_get,', 'self.get_var("this").do_post)\\n', "'"], 'file_path': '@web.server', 'line_number': 18, 'strings': [[False, '$py_code = '], [True, '\'def serve(host, port, do_get=None, do_post=None):\\n    class TheServer(http.server.BaseHTTPRequestHandler):\\n        def do_GET(self):\\n            if self.get_event != None:\\n                self.get_event(self)\\n        def do_POST(self):\\n            if self.post_event != None:\\n                self.post_event(self)\\n    tmp_TheServer = copy.deepcopy(TheServer)\\n    tmp_TheServer.get_event = do_get\\n    tmp_TheServer.post_event = do_post\\n    webServer = http.server.HTTPServer((host, port), tmp_TheServer)\\n    return webServer\\nself.mem = serve(self.get_var("this").host, self.get_var("this").port, self.get_var("this").do_get, self.get_var("this").do_post)\\n            \''], [False, '']], 'arg_strings': [[False, '= '], [True, '\'def serve(host, port, do_get=None, do_post=None):\\n    class TheServer(http.server.BaseHTTPRequestHandler):\\n        def do_GET(self):\\n            if self.get_event != None:\\n                self.get_event(self)\\n        def do_POST(self):\\n            if self.post_event != None:\\n                self.post_event(self)\\n    tmp_TheServer = copy.deepcopy(TheServer)\\n    tmp_TheServer.get_event = do_get\\n    tmp_TheServer.post_event = do_post\\n    webServer = http.server.HTTPServer((host, port), tmp_TheServer)\\n    return webServer\\nself.mem = serve(self.get_var("this").host, self.get_var("this").port, self.get_var("this").do_get, self.get_var("this").do_post)\\n            \''], [False, '']]}, {'str': '$this->server = python($py_code)', 'command': '$this->server', 'args_str': '= python($py_code)', 'args': ['=', 'python($py_code)'], 'file_path': '@web.server', 'line_number': 19, 'strings': [[False, '$this->server = python($py_code)']], 'arg_strings': [[False, '= python($py_code)']]}, {'str': '$this->server->serve_forever ()', 'command': '$this->server->serve_forever', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 20, 'strings': [[False, '$this->server->serve_forever ()']], 'arg_strings': [[False, '()']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 21, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endclass ', 'command': 'endclass', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 22, 'strings': [[False, 'endclass']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 23, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 23, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@web.server', 'line_number': 24, 'strings': [[False, 'if $__ismain__']], 'arg_strings': [[False, '$__ismain__']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 25, 'strings': [[False, 'mem not ($__ismain__)']], 'arg_strings': [[False, 'not ($__ismain__)']]}, {'str': 'gotoif tmplabelif46_2', 'command': 'gotoif', 'args_str': 'tmplabelif46_2', 'args': ['tmplabelif46_2'], 'file_path': '<system>', 'line_number': 25, 'strings': [[False, 'gotoif tmplabelif46_2']], 'arg_strings': [[False, 'tmplabelif46_2']]}, {'str': 'import "@sys",  "@os"', 'command': 'import', 'args_str': '"@sys",  "@os"', 'args': ['"@sys",', '"@os"'], 'file_path': '@web.server', 'line_number': 25, 'strings': [[False, 'import '], [True, '"@sys"'], [False, ',  '], [True, '"@os"'], [False, '']], 'arg_strings': [[False, ''], [True, '"@sys"'], [False, ',  '], [True, '"@os"'], [False, '']]}, {'str': "if '--help' in $argv", 'command': 'if', 'args_str': "'--help' in $argv", 'args': ["'--help'", 'in', '$argv'], 'file_path': '@web.server', 'line_number': 26, 'strings': [[False, 'if '], [True, "'--help'"], [False, ' in $argv']], 'arg_strings': [[False, ''], [True, "'--help'"], [False, ' in $argv']]}, {'str': "mem not ('--help' in $argv)", 'command': 'mem', 'args_str': "not ('--help' in $argv)", 'args': ['not', "('--help'", 'in', '$argv)'], 'file_path': '<system>', 'line_number': 29, 'strings': [[False, 'mem not ('], [True, "'--help'"], [False, ' in $argv)']], 'arg_strings': [[False, 'not ('], [True, "'--help'"], [False, ' in $argv)']]}, {'str': 'gotoif tmplabelif47_2', 'command': 'gotoif', 'args_str': 'tmplabelif47_2', 'args': ['tmplabelif47_2'], 'file_path': '<system>', 'line_number': 29, 'strings': [[False, 'gotoif tmplabelif47_2']], 'arg_strings': [[False, 'tmplabelif47_2']]}, {'str': "println ('Serve a simple webserver for development environment')", 'command': 'println', 'args_str': "('Serve a simple webserver for development environment')", 'args': ["('Serve", 'a', 'simple', 'webserver', 'for', 'development', "environment')"], 'file_path': '@web.server', 'line_number': 27, 'strings': [[False, 'println ('], [True, "'Serve a simple webserver for development environment'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'Serve a simple webserver for development environment'"], [False, ')']]}, {'str': "println ('')", 'command': 'println', 'args_str': "('')", 'args': ["('')"], 'file_path': '@web.server', 'line_number': 28, 'strings': [[False, 'println ('], [True, "''"], [False, ')']], 'arg_strings': [[False, '('], [True, "''"], [False, ')']]}, {'str': "println ('Usage:   pashmak @serve <port>')", 'command': 'println', 'args_str': "('Usage:   pashmak @serve <port>')", 'args': ["('Usage:", 'pashmak', '@serve', "<port>')"], 'file_path': '@web.server', 'line_number': 29, 'strings': [[False, 'println ('], [True, "'Usage:   pashmak @serve <port>'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'Usage:   pashmak @serve <port>'"], [False, ')']]}, {'str': "println ('         pashmak @serve <host> <port>')", 'command': 'println', 'args_str': "('         pashmak @serve <host> <port>')", 'args': ["('", 'pashmak', '@serve', '<host>', "<port>')"], 'file_path': '@web.server', 'line_number': 30, 'strings': [[False, 'println ('], [True, "'         pashmak @serve <host> <port>'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'         pashmak @serve <host> <port>'"], [False, ')']]}, {'str': "println ('         pashmak @serve <host> <port> <directory>')", 'command': 'println', 'args_str': "('         pashmak @serve <host> <port> <directory>')", 'args': ["('", 'pashmak', '@serve', '<host>', '<port>', "<directory>')"], 'file_path': '@web.server', 'line_number': 31, 'strings': [[False, 'println ('], [True, "'         pashmak @serve <host> <port> <directory>'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'         pashmak @serve <host> <port> <directory>'"], [False, ')']]}, {'str': "println ('         pashmak @serve <host> <port> <directory> <main-script: main file is request handler>')", 'command': 'println', 'args_str': "('         pashmak @serve <host> <port> <directory> <main-script: main file is request handler>')", 'args': ["('", 'pashmak', '@serve', '<host>', '<port>', '<directory>', '<main-script:', 'main', 'file', 'is', 'request', "handler>')"], 'file_path': '@web.server', 'line_number': 32, 'strings': [[False, 'println ('], [True, "'         pashmak @serve <host> <port> <directory> <main-script: main file is request handler>'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'         pashmak @serve <host> <port> <directory> <main-script: main file is request handler>'"], [False, ')']]}, {'str': "println ('Example: pashmak @serve 8080')", 'command': 'println', 'args_str': "('Example: pashmak @serve 8080')", 'args': ["('Example:", 'pashmak', '@serve', "8080')"], 'file_path': '@web.server', 'line_number': 33, 'strings': [[False, 'println ('], [True, "'Example: pashmak @serve 8080'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'Example: pashmak @serve 8080'"], [False, ')']]}, {'str': "println ('         pashmak @serve 0.0.0.0 8080')", 'command': 'println', 'args_str': "('         pashmak @serve 0.0.0.0 8080')", 'args': ["('", 'pashmak', '@serve', '0.0.0.0', "8080')"], 'file_path': '@web.server', 'line_number': 34, 'strings': [[False, 'println ('], [True, "'         pashmak @serve 0.0.0.0 8080'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'         pashmak @serve 0.0.0.0 8080'"], [False, ')']]}, {'str': "println ('         pashmak @serve 0.0.0.0 8080 path/to/public/html')", 'command': 'println', 'args_str': "('         pashmak @serve 0.0.0.0 8080 path/to/public/html')", 'args': ["('", 'pashmak', '@serve', '0.0.0.0', '8080', "path/to/public/html')"], 'file_path': '@web.server', 'line_number': 35, 'strings': [[False, 'println ('], [True, "'         pashmak @serve 0.0.0.0 8080 path/to/public/html'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'         pashmak @serve 0.0.0.0 8080 path/to/public/html'"], [False, ')']]}, {'str': "println ('         pashmak @serve 0.0.0.0 8080 path/to/public/html path/to/public/html/server.pashm')", 'command': 'println', 'args_str': "('         pashmak @serve 0.0.0.0 8080 path/to/public/html path/to/public/html/server.pashm')", 'args': ["('", 'pashmak', '@serve', '0.0.0.0', '8080', 'path/to/public/html', "path/to/public/html/server.pashm')"], 'file_path': '@web.server', 'line_number': 36, 'strings': [[False, 'println ('], [True, "'         pashmak @serve 0.0.0.0 8080 path/to/public/html path/to/public/html/server.pashm'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'         pashmak @serve 0.0.0.0 8080 path/to/public/html path/to/public/html/server.pashm'"], [False, ')']]}, {'str': 'exit ()', 'command': 'exit', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 37, 'strings': [[False, 'exit ()']], 'arg_strings': [[False, '()']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 38, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif47_2', 'command': 'label', 'args_str': 'tmplabelif47_2', 'args': ['tmplabelif47_2'], 'file_path': '<system>', 'line_number': 43, 'strings': [[False, 'label tmplabelif47_2']], 'arg_strings': [[False, 'tmplabelif47_2']]}, {'str': 'label tmplabelif47_end', 'command': 'label', 'args_str': 'tmplabelif47_end', 'args': ['tmplabelif47_end'], 'file_path': '<system>', 'line_number': 43, 'strings': [[False, 'label tmplabelif47_end']], 'arg_strings': [[False, 'tmplabelif47_end']]}, {'str': '$port = 8000', 'command': '$port', 'args_str': '= 8000', 'args': ['=', '8000'], 'file_path': '@web.server', 'line_number': 39, 'strings': [[False, '$port = 8000']], 'arg_strings': [[False, '= 8000']]}, {'str': "$host = 'localhost'", 'command': '$host', 'args_str': "= 'localhost'", 'args': ['=', "'localhost'"], 'file_path': '@web.server', 'line_number': 40, 'strings': [[False, '$host = '], [True, "'localhost'"], [False, '']], 'arg_strings': [[False, '= '], [True, "'localhost'"], [False, '']]}, {'str': '$dir = os.getcwd()', 'command': '$dir', 'args_str': '= os.getcwd()', 'args': ['=', 'os.getcwd()'], 'file_path': '@web.server', 'line_number': 41, 'strings': [[False, '$dir = os.getcwd()']], 'arg_strings': [[False, '= os.getcwd()']]}, {'str': '$main = null', 'command': '$main', 'args_str': '= null', 'args': ['=', 'null'], 'file_path': '@web.server', 'line_number': 42, 'strings': [[False, '$main = null']], 'arg_strings': [[False, '= null']]}, {'str': 'if len($argv) > 2', 'command': 'if', 'args_str': 'len($argv) > 2', 'args': ['len($argv)', '>', '2'], 'file_path': '@web.server', 'line_number': 43, 'strings': [[False, 'if len($argv) > 2']], 'arg_strings': [[False, 'len($argv) > 2']]}, {'str': 'mem not (len($argv) > 2)', 'command': 'mem', 'args_str': 'not (len($argv) > 2)', 'args': ['not', '(len($argv)', '>', '2)'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'mem not (len($argv) > 2)']], 'arg_strings': [[False, 'not (len($argv) > 2)']]}, {'str': 'gotoif tmplabelif48_2', 'command': 'gotoif', 'args_str': 'tmplabelif48_2', 'args': ['tmplabelif48_2'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'gotoif tmplabelif48_2']], 'arg_strings': [[False, 'tmplabelif48_2']]}, {'str': '$host = $argv[1]', 'command': '$host', 'args_str': '= $argv[1]', 'args': ['=', '$argv[1]'], 'file_path': '@web.server', 'line_number': 44, 'strings': [[False, '$host = $argv[1]']], 'arg_strings': [[False, '= $argv[1]']]}, {'str': '$port = int($argv[2])', 'command': '$port', 'args_str': '= int($argv[2])', 'args': ['=', 'int($argv[2])'], 'file_path': '@web.server', 'line_number': 45, 'strings': [[False, '$port = int($argv[2])']], 'arg_strings': [[False, '= int($argv[2])']]}, {'str': 'if len($argv) > 3', 'command': 'if', 'args_str': 'len($argv) > 3', 'args': ['len($argv)', '>', '3'], 'file_path': '@web.server', 'line_number': 46, 'strings': [[False, 'if len($argv) > 3']], 'arg_strings': [[False, 'len($argv) > 3']]}, {'str': 'mem not (len($argv) > 3)', 'command': 'mem', 'args_str': 'not (len($argv) > 3)', 'args': ['not', '(len($argv)', '>', '3)'], 'file_path': '<system>', 'line_number': 55, 'strings': [[False, 'mem not (len($argv) > 3)']], 'arg_strings': [[False, 'not (len($argv) > 3)']]}, {'str': 'gotoif tmplabelif49_2', 'command': 'gotoif', 'args_str': 'tmplabelif49_2', 'args': ['tmplabelif49_2'], 'file_path': '<system>', 'line_number': 55, 'strings': [[False, 'gotoif tmplabelif49_2']], 'arg_strings': [[False, 'tmplabelif49_2']]}, {'str': '$dir = $argv[3]', 'command': '$dir', 'args_str': '= $argv[3]', 'args': ['=', '$argv[3]'], 'file_path': '@web.server', 'line_number': 47, 'strings': [[False, '$dir = $argv[3]']], 'arg_strings': [[False, '= $argv[3]']]}, {'str': 'if len($argv) > 4', 'command': 'if', 'args_str': 'len($argv) > 4', 'args': ['len($argv)', '>', '4'], 'file_path': '@web.server', 'line_number': 48, 'strings': [[False, 'if len($argv) > 4']], 'arg_strings': [[False, 'len($argv) > 4']]}, {'str': 'mem not (len($argv) > 4)', 'command': 'mem', 'args_str': 'not (len($argv) > 4)', 'args': ['not', '(len($argv)', '>', '4)'], 'file_path': '<system>', 'line_number': 59, 'strings': [[False, 'mem not (len($argv) > 4)']], 'arg_strings': [[False, 'not (len($argv) > 4)']]}, {'str': 'gotoif tmplabelif50_2', 'command': 'gotoif', 'args_str': 'tmplabelif50_2', 'args': ['tmplabelif50_2'], 'file_path': '<system>', 'line_number': 59, 'strings': [[False, 'gotoif tmplabelif50_2']], 'arg_strings': [[False, 'tmplabelif50_2']]}, {'str': '$main = $argv[4]', 'command': '$main', 'args_str': '= $argv[4]', 'args': ['=', '$argv[4]'], 'file_path': '@web.server', 'line_number': 49, 'strings': [[False, '$main = $argv[4]']], 'arg_strings': [[False, '= $argv[4]']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 50, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif50_2', 'command': 'label', 'args_str': 'tmplabelif50_2', 'args': ['tmplabelif50_2'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'label tmplabelif50_2']], 'arg_strings': [[False, 'tmplabelif50_2']]}, {'str': 'label tmplabelif50_end', 'command': 'label', 'args_str': 'tmplabelif50_end', 'args': ['tmplabelif50_end'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'label tmplabelif50_end']], 'arg_strings': [[False, 'tmplabelif50_end']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 51, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif49_2', 'command': 'label', 'args_str': 'tmplabelif49_2', 'args': ['tmplabelif49_2'], 'file_path': '<system>', 'line_number': 66, 'strings': [[False, 'label tmplabelif49_2']], 'arg_strings': [[False, 'tmplabelif49_2']]}, {'str': 'label tmplabelif49_end', 'command': 'label', 'args_str': 'tmplabelif49_end', 'args': ['tmplabelif49_end'], 'file_path': '<system>', 'line_number': 66, 'strings': [[False, 'label tmplabelif49_end']], 'arg_strings': [[False, 'tmplabelif49_end']]}, {'str': 'elif len($argv) > 1', 'command': 'elif', 'args_str': 'len($argv) > 1', 'args': ['len($argv)', '>', '1'], 'file_path': '@web.server', 'line_number': 52, 'strings': [[False, 'elif len($argv) > 1']], 'arg_strings': [[False, 'len($argv) > 1']]}, {'str': 'goto tmplabelif48_end', 'command': 'goto', 'args_str': 'tmplabelif48_end', 'args': ['tmplabelif48_end'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'goto tmplabelif48_end']], 'arg_strings': [[False, 'tmplabelif48_end']]}, {'str': 'label tmplabelif48_2', 'command': 'label', 'args_str': 'tmplabelif48_2', 'args': ['tmplabelif48_2'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'label tmplabelif48_2']], 'arg_strings': [[False, 'tmplabelif48_2']]}, {'str': 'mem not (len($argv) > 1)', 'command': 'mem', 'args_str': 'not (len($argv) > 1)', 'args': ['not', '(len($argv)', '>', '1)'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'mem not (len($argv) > 1)']], 'arg_strings': [[False, 'not (len($argv) > 1)']]}, {'str': 'gotoif tmplabelif48_3', 'command': 'gotoif', 'args_str': 'tmplabelif48_3', 'args': ['tmplabelif48_3'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'gotoif tmplabelif48_3']], 'arg_strings': [[False, 'tmplabelif48_3']]}, {'str': '$port = int($argv[1])', 'command': '$port', 'args_str': '= int($argv[1])', 'args': ['=', 'int($argv[1])'], 'file_path': '@web.server', 'line_number': 53, 'strings': [[False, '$port = int($argv[1])']], 'arg_strings': [[False, '= int($argv[1])']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 54, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif48_3', 'command': 'label', 'args_str': 'tmplabelif48_3', 'args': ['tmplabelif48_3'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'label tmplabelif48_3']], 'arg_strings': [[False, 'tmplabelif48_3']]}, {'str': 'label tmplabelif48_end', 'command': 'label', 'args_str': 'tmplabelif48_end', 'args': ['tmplabelif48_end'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'label tmplabelif48_end']], 'arg_strings': [[False, 'tmplabelif48_end']]}, {'str': '$server = web.server.WebServer($host, $port)', 'command': '$server', 'args_str': '= web.server.WebServer($host, $port)', 'args': ['=', 'web.server.WebServer($host,', '$port)'], 'file_path': '@web.server', 'line_number': 55, 'strings': [[False, '$server = web.server.WebServer($host, $port)']], 'arg_strings': [[False, '= web.server.WebServer($host, $port)']]}, {'str': 'func get_handler($handler)', 'command': 'func', 'args_str': 'get_handler($handler)', 'args': ['get_handler($handler)'], 'file_path': '@web.server', 'line_number': 56, 'strings': [[False, 'func get_handler($handler)']], 'arg_strings': [[False, 'get_handler($handler)']]}, {'str': "the_handler ($handler, 'GET')", 'command': 'the_handler', 'args_str': "($handler, 'GET')", 'args': ['($handler,', "'GET')"], 'file_path': '@web.server', 'line_number': 57, 'strings': [[False, 'the_handler ($handler, '], [True, "'GET'"], [False, ')']], 'arg_strings': [[False, '($handler, '], [True, "'GET'"], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 58, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func post_handler($handler)', 'command': 'func', 'args_str': 'post_handler($handler)', 'args': ['post_handler($handler)'], 'file_path': '@web.server', 'line_number': 59, 'strings': [[False, 'func post_handler($handler)']], 'arg_strings': [[False, 'post_handler($handler)']]}, {'str': "the_handler ($handler, 'POST')", 'command': 'the_handler', 'args_str': "($handler, 'POST')", 'args': ['($handler,', "'POST')"], 'file_path': '@web.server', 'line_number': 60, 'strings': [[False, 'the_handler ($handler, '], [True, "'POST'"], [False, ')']], 'arg_strings': [[False, '($handler, '], [True, "'POST'"], [False, ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 61, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'func the_handler($handler, string $request_method)', 'command': 'func', 'args_str': 'the_handler($handler, string $request_method)', 'args': ['the_handler($handler,', 'string', '$request_method)'], 'file_path': '@web.server', 'line_number': 62, 'strings': [[False, 'func the_handler($handler, string $request_method)']], 'arg_strings': [[False, 'the_handler($handler, string $request_method)']]}, {'str': '$path = str($handler->path)', 'command': '$path', 'args_str': '= str($handler->path)', 'args': ['=', 'str($handler->path)'], 'file_path': '@web.server', 'line_number': 63, 'strings': [[False, '$path = str($handler->path)']], 'arg_strings': [[False, '= str($handler->path)']]}, {'str': "$path = $path->split('?', 1)", 'command': '$path', 'args_str': "= $path->split('?', 1)", 'args': ['=', "$path->split('?',", '1)'], 'file_path': '@web.server', 'line_number': 64, 'strings': [[False, '$path = $path->split('], [True, "'?'"], [False, ', 1)']], 'arg_strings': [[False, '= $path->split('], [True, "'?'"], [False, ', 1)']]}, {'str': "$query_string = ''", 'command': '$query_string', 'args_str': "= ''", 'args': ['=', "''"], 'file_path': '@web.server', 'line_number': 65, 'strings': [[False, '$query_string = '], [True, "''"], [False, '']], 'arg_strings': [[False, '= '], [True, "''"], [False, '']]}, {'str': 'if len($path) > 1', 'command': 'if', 'args_str': 'len($path) > 1', 'args': ['len($path)', '>', '1'], 'file_path': '@web.server', 'line_number': 66, 'strings': [[False, 'if len($path) > 1']], 'arg_strings': [[False, 'len($path) > 1']]}, {'str': 'mem not (len($path) > 1)', 'command': 'mem', 'args_str': 'not (len($path) > 1)', 'args': ['not', '(len($path)', '>', '1)'], 'file_path': '<system>', 'line_number': 89, 'strings': [[False, 'mem not (len($path) > 1)']], 'arg_strings': [[False, 'not (len($path) > 1)']]}, {'str': 'gotoif tmplabelif51_2', 'command': 'gotoif', 'args_str': 'tmplabelif51_2', 'args': ['tmplabelif51_2'], 'file_path': '<system>', 'line_number': 89, 'strings': [[False, 'gotoif tmplabelif51_2']], 'arg_strings': [[False, 'tmplabelif51_2']]}, {'str': '$query_string = $path[1]', 'command': '$query_string', 'args_str': '= $path[1]', 'args': ['=', '$path[1]'], 'file_path': '@web.server', 'line_number': 67, 'strings': [[False, '$query_string = $path[1]']], 'arg_strings': [[False, '= $path[1]']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 68, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif51_2', 'command': 'label', 'args_str': 'tmplabelif51_2', 'args': ['tmplabelif51_2'], 'file_path': '<system>', 'line_number': 93, 'strings': [[False, 'label tmplabelif51_2']], 'arg_strings': [[False, 'tmplabelif51_2']]}, {'str': 'label tmplabelif51_end', 'command': 'label', 'args_str': 'tmplabelif51_end', 'args': ['tmplabelif51_end'], 'file_path': '<system>', 'line_number': 93, 'strings': [[False, 'label tmplabelif51_end']], 'arg_strings': [[False, 'tmplabelif51_end']]}, {'str': '$path = $path[0]', 'command': '$path', 'args_str': '= $path[0]', 'args': ['=', '$path[0]'], 'file_path': '@web.server', 'line_number': 69, 'strings': [[False, '$path = $path[0]']], 'arg_strings': [[False, '= $path[0]']]}, {'str': '$has_index = false', 'command': '$has_index', 'args_str': '= false', 'args': ['=', 'false'], 'file_path': '@web.server', 'line_number': 70, 'strings': [[False, '$has_index = false']], 'arg_strings': [[False, '= false']]}, {'str': "if os.path.isdir($dir + '/' + $path)", 'command': 'if', 'args_str': "os.path.isdir($dir + '/' + $path)", 'args': ['os.path.isdir($dir', '+', "'/'", '+', '$path)'], 'file_path': '@web.server', 'line_number': 71, 'strings': [[False, 'if os.path.isdir($dir + '], [True, "'/'"], [False, ' + $path)']], 'arg_strings': [[False, 'os.path.isdir($dir + '], [True, "'/'"], [False, ' + $path)']]}, {'str': "mem not (os.path.isdir($dir + '/' + $path))", 'command': 'mem', 'args_str': "not (os.path.isdir($dir + '/' + $path))", 'args': ['not', '(os.path.isdir($dir', '+', "'/'", '+', '$path))'], 'file_path': '<system>', 'line_number': 98, 'strings': [[False, 'mem not (os.path.isdir($dir + '], [True, "'/'"], [False, ' + $path))']], 'arg_strings': [[False, 'not (os.path.isdir($dir + '], [True, "'/'"], [False, ' + $path))']]}, {'str': 'gotoif tmplabelif52_2', 'command': 'gotoif', 'args_str': 'tmplabelif52_2', 'args': ['tmplabelif52_2'], 'file_path': '<system>', 'line_number': 98, 'strings': [[False, 'gotoif tmplabelif52_2']], 'arg_strings': [[False, 'tmplabelif52_2']]}, {'str': "$allowed_indexes = ['index.pashm', 'index.pit', 'index.pashm.html', 'html']", 'command': '$allowed_indexes', 'args_str': "= ['index.pashm', 'index.pit', 'index.pashm.html', 'html']", 'args': ['=', "['index.pashm',", "'index.pit',", "'index.pashm.html',", "'html']"], 'file_path': '@web.server', 'line_number': 72, 'strings': [[False, '$allowed_indexes = ['], [True, "'index.pashm'"], [False, ', '], [True, "'index.pit'"], [False, ', '], [True, "'index.pashm.html'"], [False, ', '], [True, "'html'"], [False, ']']], 'arg_strings': [[False, '= ['], [True, "'index.pashm'"], [False, ', '], [True, "'index.pit'"], [False, ', '], [True, "'index.pashm.html'"], [False, ', '], [True, "'html'"], [False, ']']]}, {'str': '$z = 0', 'command': '$z', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web.server', 'line_number': 73, 'strings': [[False, '$z = 0']], 'arg_strings': [[False, '= 0']]}, {'str': 'while $z < len($allowed_indexes)', 'command': 'while', 'args_str': '$z < len($allowed_indexes)', 'args': ['$z', '<', 'len($allowed_indexes)'], 'file_path': '@web.server', 'line_number': 74, 'strings': [[False, 'while $z < len($allowed_indexes)']], 'arg_strings': [[False, '$z < len($allowed_indexes)']]}, {'str': "if os.path.isfile($dir + '/' + $path + '/' + $allowed_indexes[$z])", 'command': 'if', 'args_str': "os.path.isfile($dir + '/' + $path + '/' + $allowed_indexes[$z])", 'args': ['os.path.isfile($dir', '+', "'/'", '+', '$path', '+', "'/'", '+', '$allowed_indexes[$z])'], 'file_path': '@web.server', 'line_number': 75, 'strings': [[False, 'if os.path.isfile($dir + '], [True, "'/'"], [False, ' + $path + '], [True, "'/'"], [False, ' + $allowed_indexes[$z])']], 'arg_strings': [[False, 'os.path.isfile($dir + '], [True, "'/'"], [False, ' + $path + '], [True, "'/'"], [False, ' + $allowed_indexes[$z])']]}, {'str': "mem not (os.path.isfile($dir + '/' + $path + '/' + $allowed_indexes[$z]))", 'command': 'mem', 'args_str': "not (os.path.isfile($dir + '/' + $path + '/' + $allowed_indexes[$z]))", 'args': ['not', '(os.path.isfile($dir', '+', "'/'", '+', '$path', '+', "'/'", '+', '$allowed_indexes[$z]))'], 'file_path': '<system>', 'line_number': 104, 'strings': [[False, 'mem not (os.path.isfile($dir + '], [True, "'/'"], [False, ' + $path + '], [True, "'/'"], [False, ' + $allowed_indexes[$z]))']], 'arg_strings': [[False, 'not (os.path.isfile($dir + '], [True, "'/'"], [False, ' + $path + '], [True, "'/'"], [False, ' + $allowed_indexes[$z]))']]}, {'str': 'gotoif tmplabelif53_2', 'command': 'gotoif', 'args_str': 'tmplabelif53_2', 'args': ['tmplabelif53_2'], 'file_path': '<system>', 'line_number': 104, 'strings': [[False, 'gotoif tmplabelif53_2']], 'arg_strings': [[False, 'tmplabelif53_2']]}, {'str': "$has_index = $dir + '/' + $path + '/' + $allowed_indexes[$z]", 'command': '$has_index', 'args_str': "= $dir + '/' + $path + '/' + $allowed_indexes[$z]", 'args': ['=', '$dir', '+', "'/'", '+', '$path', '+', "'/'", '+', '$allowed_indexes[$z]'], 'file_path': '@web.server', 'line_number': 76, 'strings': [[False, '$has_index = $dir + '], [True, "'/'"], [False, ' + $path + '], [True, "'/'"], [False, ' + $allowed_indexes[$z]']], 'arg_strings': [[False, '= $dir + '], [True, "'/'"], [False, ' + $path + '], [True, "'/'"], [False, ' + $allowed_indexes[$z]']]}, {'str': 'break ', 'command': 'break', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 77, 'strings': [[False, 'break']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 78, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif53_2', 'command': 'label', 'args_str': 'tmplabelif53_2', 'args': ['tmplabelif53_2'], 'file_path': '<system>', 'line_number': 109, 'strings': [[False, 'label tmplabelif53_2']], 'arg_strings': [[False, 'tmplabelif53_2']]}, {'str': 'label tmplabelif53_end', 'command': 'label', 'args_str': 'tmplabelif53_end', 'args': ['tmplabelif53_end'], 'file_path': '<system>', 'line_number': 109, 'strings': [[False, 'label tmplabelif53_end']], 'arg_strings': [[False, 'tmplabelif53_end']]}, {'str': '$z = $z + 1', 'command': '$z', 'args_str': '= $z + 1', 'args': ['=', '$z', '+', '1'], 'file_path': '@web.server', 'line_number': 79, 'strings': [[False, '$z = $z + 1']], 'arg_strings': [[False, '= $z + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 80, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 81, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif52_2', 'command': 'label', 'args_str': 'tmplabelif52_2', 'args': ['tmplabelif52_2'], 'file_path': '<system>', 'line_number': 114, 'strings': [[False, 'label tmplabelif52_2']], 'arg_strings': [[False, 'tmplabelif52_2']]}, {'str': 'label tmplabelif52_end', 'command': 'label', 'args_str': 'tmplabelif52_end', 'args': ['tmplabelif52_end'], 'file_path': '<system>', 'line_number': 114, 'strings': [[False, 'label tmplabelif52_end']], 'arg_strings': [[False, 'tmplabelif52_end']]}, {'str': "if os.path.isfile($dir + '/' + $path) or $main != null or $has_index", 'command': 'if', 'args_str': "os.path.isfile($dir + '/' + $path) or $main != null or $has_index", 'args': ['os.path.isfile($dir', '+', "'/'", '+', '$path)', 'or', '$main', '!=', 'null', 'or', '$has_index'], 'file_path': '@web.server', 'line_number': 82, 'strings': [[False, 'if os.path.isfile($dir + '], [True, "'/'"], [False, ' + $path) or $main != null or $has_index']], 'arg_strings': [[False, 'os.path.isfile($dir + '], [True, "'/'"], [False, ' + $path) or $main != null or $has_index']]}, {'str': "mem not (os.path.isfile($dir + '/' + $path) or $main != null or $has_index)", 'command': 'mem', 'args_str': "not (os.path.isfile($dir + '/' + $path) or $main != null or $has_index)", 'args': ['not', '(os.path.isfile($dir', '+', "'/'", '+', '$path)', 'or', '$main', '!=', 'null', 'or', '$has_index)'], 'file_path': '<system>', 'line_number': 117, 'strings': [[False, 'mem not (os.path.isfile($dir + '], [True, "'/'"], [False, ' + $path) or $main != null or $has_index)']], 'arg_strings': [[False, 'not (os.path.isfile($dir + '], [True, "'/'"], [False, ' + $path) or $main != null or $has_index)']]}, {'str': 'gotoif tmplabelif54_2', 'command': 'gotoif', 'args_str': 'tmplabelif54_2', 'args': ['tmplabelif54_2'], 'file_path': '<system>', 'line_number': 117, 'strings': [[False, 'gotoif tmplabelif54_2']], 'arg_strings': [[False, 'tmplabelif54_2']]}, {'str': 'if $has_index', 'command': 'if', 'args_str': '$has_index', 'args': ['$has_index'], 'file_path': '@web.server', 'line_number': 83, 'strings': [[False, 'if $has_index']], 'arg_strings': [[False, '$has_index']]}, {'str': 'mem not ($has_index)', 'command': 'mem', 'args_str': 'not ($has_index)', 'args': ['not', '($has_index)'], 'file_path': '<system>', 'line_number': 120, 'strings': [[False, 'mem not ($has_index)']], 'arg_strings': [[False, 'not ($has_index)']]}, {'str': 'gotoif tmplabelif55_2', 'command': 'gotoif', 'args_str': 'tmplabelif55_2', 'args': ['tmplabelif55_2'], 'file_path': '<system>', 'line_number': 120, 'strings': [[False, 'gotoif tmplabelif55_2']], 'arg_strings': [[False, 'tmplabelif55_2']]}, {'str': '$full_path = $has_index', 'command': '$full_path', 'args_str': '= $has_index', 'args': ['=', '$has_index'], 'file_path': '@web.server', 'line_number': 84, 'strings': [[False, '$full_path = $has_index']], 'arg_strings': [[False, '= $has_index']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 85, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif55_end', 'command': 'goto', 'args_str': 'tmplabelif55_end', 'args': ['tmplabelif55_end'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'goto tmplabelif55_end']], 'arg_strings': [[False, 'tmplabelif55_end']]}, {'str': 'label tmplabelif55_2', 'command': 'label', 'args_str': 'tmplabelif55_2', 'args': ['tmplabelif55_2'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'label tmplabelif55_2']], 'arg_strings': [[False, 'tmplabelif55_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif55_3', 'command': 'gotoif', 'args_str': 'tmplabelif55_3', 'args': ['tmplabelif55_3'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'gotoif tmplabelif55_3']], 'arg_strings': [[False, 'tmplabelif55_3']]}, {'str': "$full_path = os.path.abspath($dir + '/' + $path)", 'command': '$full_path', 'args_str': "= os.path.abspath($dir + '/' + $path)", 'args': ['=', 'os.path.abspath($dir', '+', "'/'", '+', '$path)'], 'file_path': '@web.server', 'line_number': 86, 'strings': [[False, '$full_path = os.path.abspath($dir + '], [True, "'/'"], [False, ' + $path)']], 'arg_strings': [[False, '= os.path.abspath($dir + '], [True, "'/'"], [False, ' + $path)']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 87, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif55_3', 'command': 'label', 'args_str': 'tmplabelif55_3', 'args': ['tmplabelif55_3'], 'file_path': '<system>', 'line_number': 130, 'strings': [[False, 'label tmplabelif55_3']], 'arg_strings': [[False, 'tmplabelif55_3']]}, {'str': 'label tmplabelif55_end', 'command': 'label', 'args_str': 'tmplabelif55_end', 'args': ['tmplabelif55_end'], 'file_path': '<system>', 'line_number': 130, 'strings': [[False, 'label tmplabelif55_end']], 'arg_strings': [[False, 'tmplabelif55_end']]}, {'str': "$full_path = $full_path->replace('//', '/')", 'command': '$full_path', 'args_str': "= $full_path->replace('//', '/')", 'args': ['=', "$full_path->replace('//',", "'/')"], 'file_path': '@web.server', 'line_number': 88, 'strings': [[False, '$full_path = $full_path->replace('], [True, "'//'"], [False, ', '], [True, "'/'"], [False, ')']], 'arg_strings': [[False, '= $full_path->replace('], [True, "'//'"], [False, ', '], [True, "'/'"], [False, ')']]}, {'str': "$full_path = $full_path->replace('//', '/')", 'command': '$full_path', 'args_str': "= $full_path->replace('//', '/')", 'args': ['=', "$full_path->replace('//',", "'/')"], 'file_path': '@web.server', 'line_number': 89, 'strings': [[False, '$full_path = $full_path->replace('], [True, "'//'"], [False, ', '], [True, "'/'"], [False, ')']], 'arg_strings': [[False, '= $full_path->replace('], [True, "'//'"], [False, ', '], [True, "'/'"], [False, ')']]}, {'str': '$mime = mimetypes.guess_type($full_path)[0]', 'command': '$mime', 'args_str': '= mimetypes.guess_type($full_path)[0]', 'args': ['=', 'mimetypes.guess_type($full_path)[0]'], 'file_path': '@web.server', 'line_number': 90, 'strings': [[False, '$mime = mimetypes.guess_type($full_path)[0]']], 'arg_strings': [[False, '= mimetypes.guess_type($full_path)[0]']]}, {'str': "if $full_path->endswith('.pashm') or $full_path->endswith('.pit') or $full_path->endswith('.pashm.html') or $main != null", 'command': 'if', 'args_str': "$full_path->endswith('.pashm') or $full_path->endswith('.pit') or $full_path->endswith('.pashm.html') or $main != null", 'args': ["$full_path->endswith('.pashm')", 'or', "$full_path->endswith('.pit')", 'or', "$full_path->endswith('.pashm.html')", 'or', '$main', '!=', 'null'], 'file_path': '@web.server', 'line_number': 91, 'strings': [[False, 'if $full_path->endswith('], [True, "'.pashm'"], [False, ') or $full_path->endswith('], [True, "'.pit'"], [False, ') or $full_path->endswith('], [True, "'.pashm.html'"], [False, ') or $main != null']], 'arg_strings': [[False, '$full_path->endswith('], [True, "'.pashm'"], [False, ') or $full_path->endswith('], [True, "'.pit'"], [False, ') or $full_path->endswith('], [True, "'.pashm.html'"], [False, ') or $main != null']]}, {'str': "mem not ($full_path->endswith('.pashm') or $full_path->endswith('.pit') or $full_path->endswith('.pashm.html') or $main != null)", 'command': 'mem', 'args_str': "not ($full_path->endswith('.pashm') or $full_path->endswith('.pit') or $full_path->endswith('.pashm.html') or $main != null)", 'args': ['not', "($full_path->endswith('.pashm')", 'or', "$full_path->endswith('.pit')", 'or', "$full_path->endswith('.pashm.html')", 'or', '$main', '!=', 'null)'], 'file_path': '<system>', 'line_number': 136, 'strings': [[False, 'mem not ($full_path->endswith('], [True, "'.pashm'"], [False, ') or $full_path->endswith('], [True, "'.pit'"], [False, ') or $full_path->endswith('], [True, "'.pashm.html'"], [False, ') or $main != null)']], 'arg_strings': [[False, 'not ($full_path->endswith('], [True, "'.pashm'"], [False, ') or $full_path->endswith('], [True, "'.pit'"], [False, ') or $full_path->endswith('], [True, "'.pashm.html'"], [False, ') or $main != null)']]}, {'str': 'gotoif tmplabelif56_2', 'command': 'gotoif', 'args_str': 'tmplabelif56_2', 'args': ['tmplabelif56_2'], 'file_path': '<system>', 'line_number': 136, 'strings': [[False, 'gotoif tmplabelif56_2']], 'arg_strings': [[False, 'tmplabelif56_2']]}, {'str': 'if $main != null', 'command': 'if', 'args_str': '$main != null', 'args': ['$main', '!=', 'null'], 'file_path': '@web.server', 'line_number': 92, 'strings': [[False, 'if $main != null']], 'arg_strings': [[False, '$main != null']]}, {'str': 'mem not ($main != null)', 'command': 'mem', 'args_str': 'not ($main != null)', 'args': ['not', '($main', '!=', 'null)'], 'file_path': '<system>', 'line_number': 139, 'strings': [[False, 'mem not ($main != null)']], 'arg_strings': [[False, 'not ($main != null)']]}, {'str': 'gotoif tmplabelif57_2', 'command': 'gotoif', 'args_str': 'tmplabelif57_2', 'args': ['tmplabelif57_2'], 'file_path': '<system>', 'line_number': 139, 'strings': [[False, 'gotoif tmplabelif57_2']], 'arg_strings': [[False, 'tmplabelif57_2']]}, {'str': '$full_path = $main', 'command': '$full_path', 'args_str': '= $main', 'args': ['=', '$main'], 'file_path': '@web.server', 'line_number': 93, 'strings': [[False, '$full_path = $main']], 'arg_strings': [[False, '= $main']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 94, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif57_2', 'command': 'label', 'args_str': 'tmplabelif57_2', 'args': ['tmplabelif57_2'], 'file_path': '<system>', 'line_number': 143, 'strings': [[False, 'label tmplabelif57_2']], 'arg_strings': [[False, 'tmplabelif57_2']]}, {'str': 'label tmplabelif57_end', 'command': 'label', 'args_str': 'tmplabelif57_end', 'args': ['tmplabelif57_end'], 'file_path': '<system>', 'line_number': 143, 'strings': [[False, 'label tmplabelif57_end']], 'arg_strings': [[False, 'tmplabelif57_end']]}, {'str': '$command = [$sys.pashmakexe, repr($full_path)]', 'command': '$command', 'args_str': '= [$sys.pashmakexe, repr($full_path)]', 'args': ['=', '[$sys.pashmakexe,', 'repr($full_path)]'], 'file_path': '@web.server', 'line_number': 95, 'strings': [[False, '$command = [$sys.pashmakexe, repr($full_path)]']], 'arg_strings': [[False, '= [$sys.pashmakexe, repr($full_path)]']]}, {'str': "$f = open($full_path, 'r')", 'command': '$f', 'args_str': "= open($full_path, 'r')", 'args': ['=', 'open($full_path,', "'r')"], 'file_path': '@web.server', 'line_number': 96, 'strings': [[False, '$f = open($full_path, '], [True, "'r'"], [False, ')']], 'arg_strings': [[False, '= open($full_path, '], [True, "'r'"], [False, ')']]}, {'str': '$content = $f->read()', 'command': '$content', 'args_str': '= $f->read()', 'args': ['=', '$f->read()'], 'file_path': '@web.server', 'line_number': 97, 'strings': [[False, '$content = $f->read()']], 'arg_strings': [[False, '= $f->read()']]}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 98, 'strings': [[False, '$f->close ()']], 'arg_strings': [[False, '()']]}, {'str': "if $content->split('\\n', 1)[0]->endswith('@pit') and $content->split('\\n', 1)[0]->startswith('#!/')", 'command': 'if', 'args_str': "$content->split('\\n', 1)[0]->endswith('@pit') and $content->split('\\n', 1)[0]->startswith('#!/')", 'args': ["$content->split('\\n',", "1)[0]->endswith('@pit')", 'and', "$content->split('\\n',", "1)[0]->startswith('#!/')"], 'file_path': '@web.server', 'line_number': 99, 'strings': [[False, 'if $content->split('], [True, "'\\n'"], [False, ', 1)[0]->endswith('], [True, "'@pit'"], [False, ') and $content->split('], [True, "'\\n'"], [False, ', 1)[0]->startswith('], [True, "'#!/'"], [False, ')']], 'arg_strings': [[False, '$content->split('], [True, "'\\n'"], [False, ', 1)[0]->endswith('], [True, "'@pit'"], [False, ') and $content->split('], [True, "'\\n'"], [False, ', 1)[0]->startswith('], [True, "'#!/'"], [False, ')']]}, {'str': "mem not ($content->split('\\n', 1)[0]->endswith('@pit') and $content->split('\\n', 1)[0]->startswith('#!/'))", 'command': 'mem', 'args_str': "not ($content->split('\\n', 1)[0]->endswith('@pit') and $content->split('\\n', 1)[0]->startswith('#!/'))", 'args': ['not', "($content->split('\\n',", "1)[0]->endswith('@pit')", 'and', "$content->split('\\n',", "1)[0]->startswith('#!/'))"], 'file_path': '<system>', 'line_number': 150, 'strings': [[False, 'mem not ($content->split('], [True, "'\\n'"], [False, ', 1)[0]->endswith('], [True, "'@pit'"], [False, ') and $content->split('], [True, "'\\n'"], [False, ', 1)[0]->startswith('], [True, "'#!/'"], [False, '))']], 'arg_strings': [[False, 'not ($content->split('], [True, "'\\n'"], [False, ', 1)[0]->endswith('], [True, "'@pit'"], [False, ') and $content->split('], [True, "'\\n'"], [False, ', 1)[0]->startswith('], [True, "'#!/'"], [False, '))']]}, {'str': 'gotoif tmplabelif58_2', 'command': 'gotoif', 'args_str': 'tmplabelif58_2', 'args': ['tmplabelif58_2'], 'file_path': '<system>', 'line_number': 150, 'strings': [[False, 'gotoif tmplabelif58_2']], 'arg_strings': [[False, 'tmplabelif58_2']]}, {'str': "$command->insert (1, '@pit')", 'command': '$command->insert', 'args_str': "(1, '@pit')", 'args': ['(1,', "'@pit')"], 'file_path': '@web.server', 'line_number': 100, 'strings': [[False, '$command->insert (1, '], [True, "'@pit'"], [False, ')']], 'arg_strings': [[False, '(1, '], [True, "'@pit'"], [False, ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 101, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif58_2', 'command': 'label', 'args_str': 'tmplabelif58_2', 'args': ['tmplabelif58_2'], 'file_path': '<system>', 'line_number': 154, 'strings': [[False, 'label tmplabelif58_2']], 'arg_strings': [[False, 'tmplabelif58_2']]}, {'str': 'label tmplabelif58_end', 'command': 'label', 'args_str': 'tmplabelif58_end', 'args': ['tmplabelif58_end'], 'file_path': '<system>', 'line_number': 154, 'strings': [[False, 'label tmplabelif58_end']], 'arg_strings': [[False, 'tmplabelif58_end']]}, {'str': '$env = {                    "PASHMAKPATH": $os.env[\'PASHMAKPATH\'],                    "REQUEST_URI": $handler->path,                    "REQUEST_METHOD": $request_method,                    "REMOTE_ADDR": $handler->client_address[0],                    "REMOTE_PORT": str($handler->client_address[1]),                    "SERVER_PORT": str($handler->server->server_port),                    "SERVER_SOFTWARE": \'Pashmak Builtin Web Server (\' + $sys.pashmakinfo[\'version\'] + \')\',                    "SERVER_SIGNATURE": \'Pashmak Builtin Web Server (\' + $sys.pashmakinfo[\'version\'] + \')\',                    \'DOCUMENT_ROOT\': $dir,                    \'CONTEXT_DOCUMENT_ROOT\': $dir,                    \'SCRIPT_FILENAME\': $full_path,                    \'SCRIPT_NAME\': $path,                    \'QUERY_STRING\': $query_string,                    "SERVER_PROTOCOL": $handler->protocol_version,                    "REQUEST_SCHEME": \'http\',                    "SERVER_NAME": $host,                    "SERVER_ADDR": \'127.0.0.1\' if $host == \'localhost\' else $host,                }', 'command': '$env', 'args_str': '= {                    "PASHMAKPATH": $os.env[\'PASHMAKPATH\'],                    "REQUEST_URI": $handler->path,                    "REQUEST_METHOD": $request_method,                    "REMOTE_ADDR": $handler->client_address[0],                    "REMOTE_PORT": str($handler->client_address[1]),                    "SERVER_PORT": str($handler->server->server_port),                    "SERVER_SOFTWARE": \'Pashmak Builtin Web Server (\' + $sys.pashmakinfo[\'version\'] + \')\',                    "SERVER_SIGNATURE": \'Pashmak Builtin Web Server (\' + $sys.pashmakinfo[\'version\'] + \')\',                    \'DOCUMENT_ROOT\': $dir,                    \'CONTEXT_DOCUMENT_ROOT\': $dir,                    \'SCRIPT_FILENAME\': $full_path,                    \'SCRIPT_NAME\': $path,                    \'QUERY_STRING\': $query_string,                    "SERVER_PROTOCOL": $handler->protocol_version,                    "REQUEST_SCHEME": \'http\',                    "SERVER_NAME": $host,                    "SERVER_ADDR": \'127.0.0.1\' if $host == \'localhost\' else $host,                }', 'args': ['=', '{', '"PASHMAKPATH":', "$os.env['PASHMAKPATH'],", '"REQUEST_URI":', '$handler->path,', '"REQUEST_METHOD":', '$request_method,', '"REMOTE_ADDR":', '$handler->client_address[0],', '"REMOTE_PORT":', 'str($handler->client_address[1]),', '"SERVER_PORT":', 'str($handler->server->server_port),', '"SERVER_SOFTWARE":', "'Pashmak", 'Builtin', 'Web', 'Server', "('", '+', "$sys.pashmakinfo['version']", '+', "')',", '"SERVER_SIGNATURE":', "'Pashmak", 'Builtin', 'Web', 'Server', "('", '+', "$sys.pashmakinfo['version']", '+', "')',", "'DOCUMENT_ROOT':", '$dir,', "'CONTEXT_DOCUMENT_ROOT':", '$dir,', "'SCRIPT_FILENAME':", '$full_path,', "'SCRIPT_NAME':", '$path,', "'QUERY_STRING':", '$query_string,', '"SERVER_PROTOCOL":', '$handler->protocol_version,', '"REQUEST_SCHEME":', "'http',", '"SERVER_NAME":', '$host,', '"SERVER_ADDR":', "'127.0.0.1'", 'if', '$host', '==', "'localhost'", 'else', '$host,', '}'], 'file_path': '@web.server', 'line_number': 102, 'strings': [[False, '$env = {                    '], [True, '"PASHMAKPATH"'], [False, ': $os.env['], [True, "'PASHMAKPATH'"], [False, '],                    '], [True, '"REQUEST_URI"'], [False, ': $handler->path,                    '], [True, '"REQUEST_METHOD"'], [False, ': $request_method,                    '], [True, '"REMOTE_ADDR"'], [False, ': $handler->client_address[0],                    '], [True, '"REMOTE_PORT"'], [False, ': str($handler->client_address[1]),                    '], [True, '"SERVER_PORT"'], [False, ': str($handler->server->server_port),                    '], [True, '"SERVER_SOFTWARE"'], [False, ': '], [True, "'Pashmak Builtin Web Server ('"], [False, ' + $sys.pashmakinfo['], [True, "'version'"], [False, '] + '], [True, "')'"], [False, ',                    '], [True, '"SERVER_SIGNATURE"'], [False, ': '], [True, "'Pashmak Builtin Web Server ('"], [False, ' + $sys.pashmakinfo['], [True, "'version'"], [False, '] + '], [True, "')'"], [False, ',                    '], [True, "'DOCUMENT_ROOT'"], [False, ': $dir,                    '], [True, "'CONTEXT_DOCUMENT_ROOT'"], [False, ': $dir,                    '], [True, "'SCRIPT_FILENAME'"], [False, ': $full_path,                    '], [True, "'SCRIPT_NAME'"], [False, ': $path,                    '], [True, "'QUERY_STRING'"], [False, ': $query_string,                    '], [True, '"SERVER_PROTOCOL"'], [False, ': $handler->protocol_version,                    '], [True, '"REQUEST_SCHEME"'], [False, ': '], [True, "'http'"], [False, ',                    '], [True, '"SERVER_NAME"'], [False, ': $host,                    '], [True, '"SERVER_ADDR"'], [False, ': '], [True, "'127.0.0.1'"], [False, ' if $host == '], [True, "'localhost'"], [False, ' else $host,                }']], 'arg_strings': [[False, '= {                    '], [True, '"PASHMAKPATH"'], [False, ': $os.env['], [True, "'PASHMAKPATH'"], [False, '],                    '], [True, '"REQUEST_URI"'], [False, ': $handler->path,                    '], [True, '"REQUEST_METHOD"'], [False, ': $request_method,                    '], [True, '"REMOTE_ADDR"'], [False, ': $handler->client_address[0],                    '], [True, '"REMOTE_PORT"'], [False, ': str($handler->client_address[1]),                    '], [True, '"SERVER_PORT"'], [False, ': str($handler->server->server_port),                    '], [True, '"SERVER_SOFTWARE"'], [False, ': '], [True, "'Pashmak Builtin Web Server ('"], [False, ' + $sys.pashmakinfo['], [True, "'version'"], [False, '] + '], [True, "')'"], [False, ',                    '], [True, '"SERVER_SIGNATURE"'], [False, ': '], [True, "'Pashmak Builtin Web Server ('"], [False, ' + $sys.pashmakinfo['], [True, "'version'"], [False, '] + '], [True, "')'"], [False, ',                    '], [True, "'DOCUMENT_ROOT'"], [False, ': $dir,                    '], [True, "'CONTEXT_DOCUMENT_ROOT'"], [False, ': $dir,                    '], [True, "'SCRIPT_FILENAME'"], [False, ': $full_path,                    '], [True, "'SCRIPT_NAME'"], [False, ': $path,                    '], [True, "'QUERY_STRING'"], [False, ': $query_string,                    '], [True, '"SERVER_PROTOCOL"'], [False, ': $handler->protocol_version,                    '], [True, '"REQUEST_SCHEME"'], [False, ': '], [True, "'http'"], [False, ',                    '], [True, '"SERVER_NAME"'], [False, ': $host,                    '], [True, '"SERVER_ADDR"'], [False, ': '], [True, "'127.0.0.1'"], [False, ' if $host == '], [True, "'localhost'"], [False, ' else $host,                }']]}, {'str': "$request_headers = str($handler->headers)->strip()->split('\\n')", 'command': '$request_headers', 'args_str': "= str($handler->headers)->strip()->split('\\n')", 'args': ['=', "str($handler->headers)->strip()->split('\\n')"], 'file_path': '@web.server', 'line_number': 103, 'strings': [[False, '$request_headers = str($handler->headers)->strip()->split('], [True, "'\\n'"], [False, ')']], 'arg_strings': [[False, '= str($handler->headers)->strip()->split('], [True, "'\\n'"], [False, ')']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web.server', 'line_number': 104, 'strings': [[False, '$i = 0']], 'arg_strings': [[False, '= 0']]}, {'str': 'while $i < len($request_headers)', 'command': 'while', 'args_str': '$i < len($request_headers)', 'args': ['$i', '<', 'len($request_headers)'], 'file_path': '@web.server', 'line_number': 105, 'strings': [[False, 'while $i < len($request_headers)']], 'arg_strings': [[False, '$i < len($request_headers)']]}, {'str': "$key = $request_headers[$i]->split(':', 1)", 'command': '$key', 'args_str': "= $request_headers[$i]->split(':', 1)", 'args': ['=', "$request_headers[$i]->split(':',", '1)'], 'file_path': '@web.server', 'line_number': 106, 'strings': [[False, '$key = $request_headers[$i]->split('], [True, "':'"], [False, ', 1)']], 'arg_strings': [[False, '= $request_headers[$i]->split('], [True, "':'"], [False, ', 1)']]}, {'str': '$value = $key[-1]', 'command': '$value', 'args_str': '= $key[-1]', 'args': ['=', '$key[-1]'], 'file_path': '@web.server', 'line_number': 107, 'strings': [[False, '$value = $key[-1]']], 'arg_strings': [[False, '= $key[-1]']]}, {'str': '$key = $key[0]', 'command': '$key', 'args_str': '= $key[0]', 'args': ['=', '$key[0]'], 'file_path': '@web.server', 'line_number': 108, 'strings': [[False, '$key = $key[0]']], 'arg_strings': [[False, '= $key[0]']]}, {'str': "$key = 'HTTP_' + $key->replace('-', '_')->upper()", 'command': '$key', 'args_str': "= 'HTTP_' + $key->replace('-', '_')->upper()", 'args': ['=', "'HTTP_'", '+', "$key->replace('-',", "'_')->upper()"], 'file_path': '@web.server', 'line_number': 109, 'strings': [[False, '$key = '], [True, "'HTTP_'"], [False, ' + $key->replace('], [True, "'-'"], [False, ', '], [True, "'_'"], [False, ')->upper()']], 'arg_strings': [[False, '= '], [True, "'HTTP_'"], [False, ' + $key->replace('], [True, "'-'"], [False, ', '], [True, "'_'"], [False, ')->upper()']]}, {'str': '$env[$key] = $value->strip()', 'command': '$env[$key]', 'args_str': '= $value->strip()', 'args': ['=', '$value->strip()'], 'file_path': '@web.server', 'line_number': 110, 'strings': [[False, '$env[$key] = $value->strip()']], 'arg_strings': [[False, '= $value->strip()']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web.server', 'line_number': 111, 'strings': [[False, '$i = $i + 1']], 'arg_strings': [[False, '= $i + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 112, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': "$post_data = ''", 'command': '$post_data', 'args_str': "= ''", 'args': ['=', "''"], 'file_path': '@web.server', 'line_number': 113, 'strings': [[False, '$post_data = '], [True, "''"], [False, '']], 'arg_strings': [[False, '= '], [True, "''"], [False, '']]}, {'str': "if $request_method == 'POST'", 'command': 'if', 'args_str': "$request_method == 'POST'", 'args': ['$request_method', '==', "'POST'"], 'file_path': '@web.server', 'line_number': 114, 'strings': [[False, 'if $request_method == '], [True, "'POST'"], [False, '']], 'arg_strings': [[False, '$request_method == '], [True, "'POST'"], [False, '']]}, {'str': "mem not ($request_method == 'POST')", 'command': 'mem', 'args_str': "not ($request_method == 'POST')", 'args': ['not', '($request_method', '==', "'POST')"], 'file_path': '<system>', 'line_number': 169, 'strings': [[False, 'mem not ($request_method == '], [True, "'POST'"], [False, ')']], 'arg_strings': [[False, 'not ($request_method == '], [True, "'POST'"], [False, ')']]}, {'str': 'gotoif tmplabelif59_2', 'command': 'gotoif', 'args_str': 'tmplabelif59_2', 'args': ['tmplabelif59_2'], 'file_path': '<system>', 'line_number': 169, 'strings': [[False, 'gotoif tmplabelif59_2']], 'arg_strings': [[False, 'tmplabelif59_2']]}, {'str': "$post_data = $handler->rfile->read(int($env['HTTP_CONTENT_LENGTH']))", 'command': '$post_data', 'args_str': "= $handler->rfile->read(int($env['HTTP_CONTENT_LENGTH']))", 'args': ['=', "$handler->rfile->read(int($env['HTTP_CONTENT_LENGTH']))"], 'file_path': '@web.server', 'line_number': 115, 'strings': [[False, '$post_data = $handler->rfile->read(int($env['], [True, "'HTTP_CONTENT_LENGTH'"], [False, ']))']], 'arg_strings': [[False, '= $handler->rfile->read(int($env['], [True, "'HTTP_CONTENT_LENGTH'"], [False, ']))']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 116, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif59_2', 'command': 'label', 'args_str': 'tmplabelif59_2', 'args': ['tmplabelif59_2'], 'file_path': '<system>', 'line_number': 173, 'strings': [[False, 'label tmplabelif59_2']], 'arg_strings': [[False, 'tmplabelif59_2']]}, {'str': 'label tmplabelif59_end', 'command': 'label', 'args_str': 'tmplabelif59_end', 'args': ['tmplabelif59_end'], 'file_path': '<system>', 'line_number': 173, 'strings': [[False, 'label tmplabelif59_end']], 'arg_strings': [[False, 'tmplabelif59_end']]}, {'str': "$result = subprocess.Popen(' '->join($command), stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, env=$env, shell=true)", 'command': '$result', 'args_str': "= subprocess.Popen(' '->join($command), stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, env=$env, shell=true)", 'args': ['=', "subprocess.Popen('", "'->join($command),", 'stdout=subprocess.PIPE,', 'stderr=subprocess.PIPE,', 'stdin=subprocess.PIPE,', 'env=$env,', 'shell=true)'], 'file_path': '@web.server', 'line_number': 117, 'strings': [[False, '$result = subprocess.Popen('], [True, "' '"], [False, '->join($command), stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, env=$env, shell=true)']], 'arg_strings': [[False, '= subprocess.Popen('], [True, "' '"], [False, '->join($command), stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, env=$env, shell=true)']]}, {'str': '$result = $result->communicate(input=$post_data)', 'command': '$result', 'args_str': '= $result->communicate(input=$post_data)', 'args': ['=', '$result->communicate(input=$post_data)'], 'file_path': '@web.server', 'line_number': 118, 'strings': [[False, '$result = $result->communicate(input=$post_data)']], 'arg_strings': [[False, '= $result->communicate(input=$post_data)']]}, {'str': '$result = $result[0]', 'command': '$result', 'args_str': '= $result[0]', 'args': ['=', '$result[0]'], 'file_path': '@web.server', 'line_number': 119, 'strings': [[False, '$result = $result[0]']], 'arg_strings': [[False, '= $result[0]']]}, {'str': '$headers = []', 'command': '$headers', 'args_str': '= []', 'args': ['=', '[]'], 'file_path': '@web.server', 'line_number': 120, 'strings': [[False, '$headers = []']], 'arg_strings': [[False, '= []']]}, {'str': "$tmp_cookies = str($result->decode())->strip()->split('\\n\\n', 1)[0]->strip()->split('\\n')", 'command': '$tmp_cookies', 'args_str': "= str($result->decode())->strip()->split('\\n\\n', 1)[0]->strip()->split('\\n')", 'args': ['=', "str($result->decode())->strip()->split('\\n\\n',", "1)[0]->strip()->split('\\n')"], 'file_path': '@web.server', 'line_number': 121, 'strings': [[False, '$tmp_cookies = str($result->decode())->strip()->split('], [True, "'\\n\\n'"], [False, ', 1)[0]->strip()->split('], [True, "'\\n'"], [False, ')']], 'arg_strings': [[False, '= str($result->decode())->strip()->split('], [True, "'\\n\\n'"], [False, ', 1)[0]->strip()->split('], [True, "'\\n'"], [False, ')']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web.server', 'line_number': 122, 'strings': [[False, '$i = 0']], 'arg_strings': [[False, '= 0']]}, {'str': '$res_code = 200', 'command': '$res_code', 'args_str': '= 200', 'args': ['=', '200'], 'file_path': '@web.server', 'line_number': 123, 'strings': [[False, '$res_code = 200']], 'arg_strings': [[False, '= 200']]}, {'str': 'while $i < len($tmp_cookies)', 'command': 'while', 'args_str': '$i < len($tmp_cookies)', 'args': ['$i', '<', 'len($tmp_cookies)'], 'file_path': '@web.server', 'line_number': 124, 'strings': [[False, 'while $i < len($tmp_cookies)']], 'arg_strings': [[False, '$i < len($tmp_cookies)']]}, {'str': "$key = $tmp_cookies[$i]->split(':', 1)", 'command': '$key', 'args_str': "= $tmp_cookies[$i]->split(':', 1)", 'args': ['=', "$tmp_cookies[$i]->split(':',", '1)'], 'file_path': '@web.server', 'line_number': 125, 'strings': [[False, '$key = $tmp_cookies[$i]->split('], [True, "':'"], [False, ', 1)']], 'arg_strings': [[False, '= $tmp_cookies[$i]->split('], [True, "':'"], [False, ', 1)']]}, {'str': '$value = $key[-1]', 'command': '$value', 'args_str': '= $key[-1]', 'args': ['=', '$key[-1]'], 'file_path': '@web.server', 'line_number': 126, 'strings': [[False, '$value = $key[-1]']], 'arg_strings': [[False, '= $key[-1]']]}, {'str': '$key = $key[0]', 'command': '$key', 'args_str': '= $key[0]', 'args': ['=', '$key[0]'], 'file_path': '@web.server', 'line_number': 127, 'strings': [[False, '$key = $key[0]']], 'arg_strings': [[False, '= $key[0]']]}, {'str': "if $key == 'Status'", 'command': 'if', 'args_str': "$key == 'Status'", 'args': ['$key', '==', "'Status'"], 'file_path': '@web.server', 'line_number': 128, 'strings': [[False, 'if $key == '], [True, "'Status'"], [False, '']], 'arg_strings': [[False, '$key == '], [True, "'Status'"], [False, '']]}, {'str': "mem not ($key == 'Status')", 'command': 'mem', 'args_str': "not ($key == 'Status')", 'args': ['not', '($key', '==', "'Status')"], 'file_path': '<system>', 'line_number': 187, 'strings': [[False, 'mem not ($key == '], [True, "'Status'"], [False, ')']], 'arg_strings': [[False, 'not ($key == '], [True, "'Status'"], [False, ')']]}, {'str': 'gotoif tmplabelif60_2', 'command': 'gotoif', 'args_str': 'tmplabelif60_2', 'args': ['tmplabelif60_2'], 'file_path': '<system>', 'line_number': 187, 'strings': [[False, 'gotoif tmplabelif60_2']], 'arg_strings': [[False, 'tmplabelif60_2']]}, {'str': '$res_code = int($value)', 'command': '$res_code', 'args_str': '= int($value)', 'args': ['=', 'int($value)'], 'file_path': '@web.server', 'line_number': 129, 'strings': [[False, '$res_code = int($value)']], 'arg_strings': [[False, '= int($value)']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 130, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif60_end', 'command': 'goto', 'args_str': 'tmplabelif60_end', 'args': ['tmplabelif60_end'], 'file_path': '<system>', 'line_number': 191, 'strings': [[False, 'goto tmplabelif60_end']], 'arg_strings': [[False, 'tmplabelif60_end']]}, {'str': 'label tmplabelif60_2', 'command': 'label', 'args_str': 'tmplabelif60_2', 'args': ['tmplabelif60_2'], 'file_path': '<system>', 'line_number': 191, 'strings': [[False, 'label tmplabelif60_2']], 'arg_strings': [[False, 'tmplabelif60_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 191, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif60_3', 'command': 'gotoif', 'args_str': 'tmplabelif60_3', 'args': ['tmplabelif60_3'], 'file_path': '<system>', 'line_number': 191, 'strings': [[False, 'gotoif tmplabelif60_3']], 'arg_strings': [[False, 'tmplabelif60_3']]}, {'str': '$headers->append ([$key->strip(), $value->strip()])', 'command': '$headers->append', 'args_str': '([$key->strip(), $value->strip()])', 'args': ['([$key->strip(),', '$value->strip()])'], 'file_path': '@web.server', 'line_number': 131, 'strings': [[False, '$headers->append ([$key->strip(), $value->strip()])']], 'arg_strings': [[False, '([$key->strip(), $value->strip()])']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 132, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif60_3', 'command': 'label', 'args_str': 'tmplabelif60_3', 'args': ['tmplabelif60_3'], 'file_path': '<system>', 'line_number': 197, 'strings': [[False, 'label tmplabelif60_3']], 'arg_strings': [[False, 'tmplabelif60_3']]}, {'str': 'label tmplabelif60_end', 'command': 'label', 'args_str': 'tmplabelif60_end', 'args': ['tmplabelif60_end'], 'file_path': '<system>', 'line_number': 197, 'strings': [[False, 'label tmplabelif60_end']], 'arg_strings': [[False, 'tmplabelif60_end']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web.server', 'line_number': 133, 'strings': [[False, '$i = $i + 1']], 'arg_strings': [[False, '= $i + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 134, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web.server', 'line_number': 135, 'strings': [[False, '$i = 0']], 'arg_strings': [[False, '= 0']]}, {'str': '$handler->send_response ($res_code)', 'command': '$handler->send_response', 'args_str': '($res_code)', 'args': ['($res_code)'], 'file_path': '@web.server', 'line_number': 136, 'strings': [[False, '$handler->send_response ($res_code)']], 'arg_strings': [[False, '($res_code)']]}, {'str': 'while $i < len($headers)', 'command': 'while', 'args_str': '$i < len($headers)', 'args': ['$i', '<', 'len($headers)'], 'file_path': '@web.server', 'line_number': 137, 'strings': [[False, 'while $i < len($headers)']], 'arg_strings': [[False, '$i < len($headers)']]}, {'str': '$handler->send_header ($headers[$i][0], $headers[$i][1])', 'command': '$handler->send_header', 'args_str': '($headers[$i][0], $headers[$i][1])', 'args': ['($headers[$i][0],', '$headers[$i][1])'], 'file_path': '@web.server', 'line_number': 138, 'strings': [[False, '$handler->send_header ($headers[$i][0], $headers[$i][1])']], 'arg_strings': [[False, '($headers[$i][0], $headers[$i][1])']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web.server', 'line_number': 139, 'strings': [[False, '$i = $i + 1']], 'arg_strings': [[False, '= $i + 1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 140, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': '$handler->end_headers ()', 'command': '$handler->end_headers', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 141, 'strings': [[False, '$handler->end_headers ()']], 'arg_strings': [[False, '()']]}, {'str': "$handler->wfile->write (                    str($result->decode())->strip()->split('\\n\\n', 1)[-1]->encode()                )", 'command': '$handler->wfile->write', 'args_str': "(                    str($result->decode())->strip()->split('\\n\\n', 1)[-1]->encode()                )", 'args': ['(', "str($result->decode())->strip()->split('\\n\\n',", '1)[-1]->encode()', ')'], 'file_path': '@web.server', 'line_number': 142, 'strings': [[False, '$handler->wfile->write (                    str($result->decode())->strip()->split('], [True, "'\\n\\n'"], [False, ', 1)[-1]->encode()                )']], 'arg_strings': [[False, '(                    str($result->decode())->strip()->split('], [True, "'\\n\\n'"], [False, ', 1)[-1]->encode()                )']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 143, 'strings': [[False, 'return']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 144, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif56_2', 'command': 'label', 'args_str': 'tmplabelif56_2', 'args': ['tmplabelif56_2'], 'file_path': '<system>', 'line_number': 211, 'strings': [[False, 'label tmplabelif56_2']], 'arg_strings': [[False, 'tmplabelif56_2']]}, {'str': 'label tmplabelif56_end', 'command': 'label', 'args_str': 'tmplabelif56_end', 'args': ['tmplabelif56_end'], 'file_path': '<system>', 'line_number': 211, 'strings': [[False, 'label tmplabelif56_end']], 'arg_strings': [[False, 'tmplabelif56_end']]}, {'str': 'try handle_file_error', 'command': 'try', 'args_str': 'handle_file_error', 'args': ['handle_file_error'], 'file_path': '@web.server', 'line_number': 145, 'strings': [[False, 'try handle_file_error']], 'arg_strings': [[False, 'handle_file_error']]}, {'str': "$f = open($full_path, 'r')", 'command': '$f', 'args_str': "= open($full_path, 'r')", 'args': ['=', 'open($full_path,', "'r')"], 'file_path': '@web.server', 'line_number': 146, 'strings': [[False, '$f = open($full_path, '], [True, "'r'"], [False, ')']], 'arg_strings': [[False, '= open($full_path, '], [True, "'r'"], [False, ')']]}, {'str': '$content = $f->read()', 'command': '$content', 'args_str': '= $f->read()', 'args': ['=', '$f->read()'], 'file_path': '@web.server', 'line_number': 147, 'strings': [[False, '$content = $f->read()']], 'arg_strings': [[False, '= $f->read()']]}, {'str': '$f->read ()', 'command': '$f->read', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 148, 'strings': [[False, '$f->read ()']], 'arg_strings': [[False, '()']]}, {'str': 'endtry ', 'command': 'endtry', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 149, 'strings': [[False, 'endtry']], 'arg_strings': [[False, '']]}, {'str': 'goto after_handle_file_error', 'command': 'goto', 'args_str': 'after_handle_file_error', 'args': ['after_handle_file_error'], 'file_path': '@web.server', 'line_number': 150, 'strings': [[False, 'goto after_handle_file_error']], 'arg_strings': [[False, 'after_handle_file_error']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'arg_strings': [[False, '']]}, {'str': 'label handle_file_error', 'command': 'label', 'args_str': 'handle_file_error', 'args': ['handle_file_error'], 'file_path': '@web.server', 'line_number': 150, 'strings': [[False, 'label handle_file_error']], 'arg_strings': [[False, 'handle_file_error']]}, {'str': '$handler->send_response (403)', 'command': '$handler->send_response', 'args_str': '(403)', 'args': ['(403)'], 'file_path': '@web.server', 'line_number': 151, 'strings': [[False, '$handler->send_response (403)']], 'arg_strings': [[False, '(403)']]}, {'str': '$handler->send_header ("Content-type", "text/html")', 'command': '$handler->send_header', 'args_str': '("Content-type", "text/html")', 'args': ['("Content-type",', '"text/html")'], 'file_path': '@web.server', 'line_number': 152, 'strings': [[False, '$handler->send_header ('], [True, '"Content-type"'], [False, ', '], [True, '"text/html"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"Content-type"'], [False, ', '], [True, '"text/html"'], [False, ')']]}, {'str': '$handler->end_headers ()', 'command': '$handler->end_headers', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 153, 'strings': [[False, '$handler->end_headers ()']], 'arg_strings': [[False, '()']]}, {'str': '$handler->wfile->write (bytes(\'403 - Access Denied\', "utf-8"))', 'command': '$handler->wfile->write', 'args_str': '(bytes(\'403 - Access Denied\', "utf-8"))', 'args': ["(bytes('403", '-', 'Access', "Denied',", '"utf-8"))'], 'file_path': '@web.server', 'line_number': 154, 'strings': [[False, '$handler->wfile->write (bytes('], [True, "'403 - Access Denied'"], [False, ', '], [True, '"utf-8"'], [False, '))']], 'arg_strings': [[False, '(bytes('], [True, "'403 - Access Denied'"], [False, ', '], [True, '"utf-8"'], [False, '))']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 155, 'strings': [[False, 'return']], 'arg_strings': [[False, '']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'arg_strings': [[False, '']]}, {'str': 'label after_handle_file_error', 'command': 'label', 'args_str': 'after_handle_file_error', 'args': ['after_handle_file_error'], 'file_path': '@web.server', 'line_number': 156, 'strings': [[False, 'label after_handle_file_error']], 'arg_strings': [[False, 'after_handle_file_error']]}, {'str': '$handler->send_response (200)', 'command': '$handler->send_response', 'args_str': '(200)', 'args': ['(200)'], 'file_path': '@web.server', 'line_number': 157, 'strings': [[False, '$handler->send_response (200)']], 'arg_strings': [[False, '(200)']]}, {'str': 'if $mime == null', 'command': 'if', 'args_str': '$mime == null', 'args': ['$mime', '==', 'null'], 'file_path': '@web.server', 'line_number': 158, 'strings': [[False, 'if $mime == null']], 'arg_strings': [[False, '$mime == null']]}, {'str': 'mem not ($mime == null)', 'command': 'mem', 'args_str': 'not ($mime == null)', 'args': ['not', '($mime', '==', 'null)'], 'file_path': '<system>', 'line_number': 230, 'strings': [[False, 'mem not ($mime == null)']], 'arg_strings': [[False, 'not ($mime == null)']]}, {'str': 'gotoif tmplabelif61_2', 'command': 'gotoif', 'args_str': 'tmplabelif61_2', 'args': ['tmplabelif61_2'], 'file_path': '<system>', 'line_number': 230, 'strings': [[False, 'gotoif tmplabelif61_2']], 'arg_strings': [[False, 'tmplabelif61_2']]}, {'str': "$mime = 'text/plain'", 'command': '$mime', 'args_str': "= 'text/plain'", 'args': ['=', "'text/plain'"], 'file_path': '@web.server', 'line_number': 159, 'strings': [[False, '$mime = '], [True, "'text/plain'"], [False, '']], 'arg_strings': [[False, '= '], [True, "'text/plain'"], [False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 160, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif61_2', 'command': 'label', 'args_str': 'tmplabelif61_2', 'args': ['tmplabelif61_2'], 'file_path': '<system>', 'line_number': 234, 'strings': [[False, 'label tmplabelif61_2']], 'arg_strings': [[False, 'tmplabelif61_2']]}, {'str': 'label tmplabelif61_end', 'command': 'label', 'args_str': 'tmplabelif61_end', 'args': ['tmplabelif61_end'], 'file_path': '<system>', 'line_number': 234, 'strings': [[False, 'label tmplabelif61_end']], 'arg_strings': [[False, 'tmplabelif61_end']]}, {'str': '$handler->send_header ("Content-type", $mime)', 'command': '$handler->send_header', 'args_str': '("Content-type", $mime)', 'args': ['("Content-type",', '$mime)'], 'file_path': '@web.server', 'line_number': 161, 'strings': [[False, '$handler->send_header ('], [True, '"Content-type"'], [False, ', $mime)']], 'arg_strings': [[False, '('], [True, '"Content-type"'], [False, ', $mime)']]}, {'str': '$handler->end_headers ()', 'command': '$handler->end_headers', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 162, 'strings': [[False, '$handler->end_headers ()']], 'arg_strings': [[False, '()']]}, {'str': '$handler->wfile->write (bytes($content, "utf-8"))', 'command': '$handler->wfile->write', 'args_str': '(bytes($content, "utf-8"))', 'args': ['(bytes($content,', '"utf-8"))'], 'file_path': '@web.server', 'line_number': 163, 'strings': [[False, '$handler->wfile->write (bytes($content, '], [True, '"utf-8"'], [False, '))']], 'arg_strings': [[False, '(bytes($content, '], [True, '"utf-8"'], [False, '))']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 164, 'strings': [[False, 'return']], 'arg_strings': [[False, '']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 165, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif54_end', 'command': 'goto', 'args_str': 'tmplabelif54_end', 'args': ['tmplabelif54_end'], 'file_path': '<system>', 'line_number': 241, 'strings': [[False, 'goto tmplabelif54_end']], 'arg_strings': [[False, 'tmplabelif54_end']]}, {'str': 'label tmplabelif54_2', 'command': 'label', 'args_str': 'tmplabelif54_2', 'args': ['tmplabelif54_2'], 'file_path': '<system>', 'line_number': 241, 'strings': [[False, 'label tmplabelif54_2']], 'arg_strings': [[False, 'tmplabelif54_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 241, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif54_3', 'command': 'gotoif', 'args_str': 'tmplabelif54_3', 'args': ['tmplabelif54_3'], 'file_path': '<system>', 'line_number': 241, 'strings': [[False, 'gotoif tmplabelif54_3']], 'arg_strings': [[False, 'tmplabelif54_3']]}, {'str': '$handler->send_response (404)', 'command': '$handler->send_response', 'args_str': '(404)', 'args': ['(404)'], 'file_path': '@web.server', 'line_number': 166, 'strings': [[False, '$handler->send_response (404)']], 'arg_strings': [[False, '(404)']]}, {'str': '$handler->send_header ("Content-type", "text/html")', 'command': '$handler->send_header', 'args_str': '("Content-type", "text/html")', 'args': ['("Content-type",', '"text/html")'], 'file_path': '@web.server', 'line_number': 167, 'strings': [[False, '$handler->send_header ('], [True, '"Content-type"'], [False, ', '], [True, '"text/html"'], [False, ')']], 'arg_strings': [[False, '('], [True, '"Content-type"'], [False, ', '], [True, '"text/html"'], [False, ')']]}, {'str': '$handler->end_headers ()', 'command': '$handler->end_headers', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 168, 'strings': [[False, '$handler->end_headers ()']], 'arg_strings': [[False, '()']]}, {'str': '$handler->wfile->write (bytes(\'404 - Not Found\', "utf-8"))', 'command': '$handler->wfile->write', 'args_str': '(bytes(\'404 - Not Found\', "utf-8"))', 'args': ["(bytes('404", '-', 'Not', "Found',", '"utf-8"))'], 'file_path': '@web.server', 'line_number': 169, 'strings': [[False, '$handler->wfile->write (bytes('], [True, "'404 - Not Found'"], [False, ', '], [True, '"utf-8"'], [False, '))']], 'arg_strings': [[False, '(bytes('], [True, "'404 - Not Found'"], [False, ', '], [True, '"utf-8"'], [False, '))']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 170, 'strings': [[False, 'return']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 171, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif54_3', 'command': 'label', 'args_str': 'tmplabelif54_3', 'args': ['tmplabelif54_3'], 'file_path': '<system>', 'line_number': 251, 'strings': [[False, 'label tmplabelif54_3']], 'arg_strings': [[False, 'tmplabelif54_3']]}, {'str': 'label tmplabelif54_end', 'command': 'label', 'args_str': 'tmplabelif54_end', 'args': ['tmplabelif54_end'], 'file_path': '<system>', 'line_number': 251, 'strings': [[False, 'label tmplabelif54_end']], 'arg_strings': [[False, 'tmplabelif54_end']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 172, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '$server->set_get (get_handler)', 'command': '$server->set_get', 'args_str': '(get_handler)', 'args': ['(get_handler)'], 'file_path': '@web.server', 'line_number': 173, 'strings': [[False, '$server->set_get (get_handler)']], 'arg_strings': [[False, '(get_handler)']]}, {'str': '$server->set_post (post_handler)', 'command': '$server->set_post', 'args_str': '(post_handler)', 'args': ['(post_handler)'], 'file_path': '@web.server', 'line_number': 174, 'strings': [[False, '$server->set_post (post_handler)']], 'arg_strings': [[False, '(post_handler)']]}, {'str': "println ('Serving the development server on http://' + $host + ':' + str($port) + ' - Do not use this on production')", 'command': 'println', 'args_str': "('Serving the development server on http://' + $host + ':' + str($port) + ' - Do not use this on production')", 'args': ["('Serving", 'the', 'development', 'server', 'on', "http://'", '+', '$host', '+', "':'", '+', 'str($port)', '+', "'", '-', 'Do', 'not', 'use', 'this', 'on', "production')"], 'file_path': '@web.server', 'line_number': 175, 'strings': [[False, 'println ('], [True, "'Serving the development server on http://'"], [False, ' + $host + '], [True, "':'"], [False, ' + str($port) + '], [True, "' - Do not use this on production'"], [False, ')']], 'arg_strings': [[False, '('], [True, "'Serving the development server on http://'"], [False, ' + $host + '], [True, "':'"], [False, ' + str($port) + '], [True, "' - Do not use this on production'"], [False, ')']]}, {'str': '$server->serve ()', 'command': '$server->serve', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 176, 'strings': [[False, '$server->serve ()']], 'arg_strings': [[False, '()']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 177, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif46_2', 'command': 'label', 'args_str': 'tmplabelif46_2', 'args': ['tmplabelif46_2'], 'file_path': '<system>', 'line_number': 259, 'strings': [[False, 'label tmplabelif46_2']], 'arg_strings': [[False, 'tmplabelif46_2']]}, {'str': 'label tmplabelif46_end', 'command': 'label', 'args_str': 'tmplabelif46_end', 'args': ['tmplabelif46_end'], 'file_path': '<system>', 'line_number': 259, 'strings': [[False, 'label tmplabelif46_end']], 'arg_strings': [[False, 'tmplabelif46_end']]}]
modules["web.session"] = [{'str': 'namespace web', 'command': 'namespace', 'args_str': 'web', 'args': ['web'], 'file_path': '@web.session', 'line_number': 1, 'strings': [[False, 'namespace web']], 'arg_strings': [[False, 'web']]}, {'str': "$session_dir = '/tmp'", 'command': '$session_dir', 'args_str': "= '/tmp'", 'args': ['=', "'/tmp'"], 'file_path': '@web.session', 'line_number': 2, 'strings': [[False, '$session_dir = '], [True, "'/tmp'"], [False, '']], 'arg_strings': [[False, '= '], [True, "'/tmp'"], [False, '']]}, {'str': '@doc "    Generates a random session Id and returns it.    "', 'command': '@doc', 'args_str': '"    Generates a random session Id and returns it.    "', 'args': ['"', 'Generates', 'a', 'random', 'session', 'Id', 'and', 'returns', 'it.', '"'], 'file_path': '@web.session', 'line_number': 3, 'strings': [[False, '@doc '], [True, '"    Generates a random session Id and returns it.    "'], [False, '']], 'arg_strings': [[False, ''], [True, '"    Generates a random session Id and returns it.    "'], [False, '']]}, {'str': 'func string::generate_random_session_id()', 'command': 'func', 'args_str': 'string::generate_random_session_id()', 'args': ['string::generate_random_session_id()'], 'file_path': '@web.session', 'line_number': 4, 'strings': [[False, 'func string::generate_random_session_id()']], 'arg_strings': [[False, 'string::generate_random_session_id()']]}, {'str': "$uuid = py_load_module('uuid')", 'command': '$uuid', 'args_str': "= py_load_module('uuid')", 'args': ['=', "py_load_module('uuid')"], 'file_path': '@web.session', 'line_number': 5, 'strings': [[False, '$uuid = py_load_module('], [True, "'uuid'"], [False, ')']], 'arg_strings': [[False, '= py_load_module('], [True, "'uuid'"], [False, ')']]}, {'str': "$abc = 'abcdefghijknmlopqrstuvwxyz'", 'command': '$abc', 'args_str': "= 'abcdefghijknmlopqrstuvwxyz'", 'args': ['=', "'abcdefghijknmlopqrstuvwxyz'"], 'file_path': '@web.session', 'line_number': 6, 'strings': [[False, '$abc = '], [True, "'abcdefghijknmlopqrstuvwxyz'"], [False, '']], 'arg_strings': [[False, '= '], [True, "'abcdefghijknmlopqrstuvwxyz'"], [False, '']]}, {'str': '$abc = $abc + $abc->upper()', 'command': '$abc', 'args_str': '= $abc + $abc->upper()', 'args': ['=', '$abc', '+', '$abc->upper()'], 'file_path': '@web.session', 'line_number': 7, 'strings': [[False, '$abc = $abc + $abc->upper()']], 'arg_strings': [[False, '= $abc + $abc->upper()']]}, {'str': "$abc = $abc + '0123456789'", 'command': '$abc', 'args_str': "= $abc + '0123456789'", 'args': ['=', '$abc', '+', "'0123456789'"], 'file_path': '@web.session', 'line_number': 8, 'strings': [[False, '$abc = $abc + '], [True, "'0123456789'"], [False, '']], 'arg_strings': [[False, '= $abc + '], [True, "'0123456789'"], [False, '']]}, {'str': "$a = str($uuid->uuid4())->replace('-', '')", 'command': '$a', 'args_str': "= str($uuid->uuid4())->replace('-', '')", 'args': ['=', "str($uuid->uuid4())->replace('-',", "'')"], 'file_path': '@web.session', 'line_number': 9, 'strings': [[False, '$a = str($uuid->uuid4())->replace('], [True, "'-'"], [False, ', '], [True, "''"], [False, ')']], 'arg_strings': [[False, '= str($uuid->uuid4())->replace('], [True, "'-'"], [False, ', '], [True, "''"], [False, ')']]}, {'str': "$t = str(time.time()).replace('.', '')", 'command': '$t', 'args_str': "= str(time.time()).replace('.', '')", 'args': ['=', "str(time.time()).replace('.',", "'')"], 'file_path': '@web.session', 'line_number': 10, 'strings': [[False, '$t = str(time.time()).replace('], [True, "'.'"], [False, ', '], [True, "''"], [False, ')']], 'arg_strings': [[False, '= str(time.time()).replace('], [True, "'.'"], [False, ', '], [True, "''"], [False, ')']]}, {'str': "$r = str(random.random())->replace('.', '')", 'command': '$r', 'args_str': "= str(random.random())->replace('.', '')", 'args': ['=', "str(random.random())->replace('.',", "'')"], 'file_path': '@web.session', 'line_number': 11, 'strings': [[False, '$r = str(random.random())->replace('], [True, "'.'"], [False, ', '], [True, "''"], [False, ')']], 'arg_strings': [[False, '= str(random.random())->replace('], [True, "'.'"], [False, ', '], [True, "''"], [False, ')']]}, {'str': '$result = $a + $t + $r + $abc', 'command': '$result', 'args_str': '= $a + $t + $r + $abc', 'args': ['=', '$a', '+', '$t', '+', '$r', '+', '$abc'], 'file_path': '@web.session', 'line_number': 12, 'strings': [[False, '$result = $a + $t + $r + $abc']], 'arg_strings': [[False, '= $a + $t + $r + $abc']]}, {'str': '$result = $result * 5', 'command': '$result', 'args_str': '= $result * 5', 'args': ['=', '$result', '*', '5'], 'file_path': '@web.session', 'line_number': 13, 'strings': [[False, '$result = $result * 5']], 'arg_strings': [[False, '= $result * 5']]}, {'str': "$result = ''->join(random.sample($result*3, len($result)*2))", 'command': '$result', 'args_str': "= ''->join(random.sample($result*3, len($result)*2))", 'args': ['=', "''->join(random.sample($result*3,", 'len($result)*2))'], 'file_path': '@web.session', 'line_number': 14, 'strings': [[False, '$result = '], [True, "''"], [False, '->join(random.sample($result*3, len($result)*2))']], 'arg_strings': [[False, '= '], [True, "''"], [False, '->join(random.sample($result*3, len($result)*2))']]}, {'str': "$result = $result->replace(' ', '')->replace('<', '')->replace('>', '')->replace('-', '')", 'command': '$result', 'args_str': "= $result->replace(' ', '')->replace('<', '')->replace('>', '')->replace('-', '')", 'args': ['=', "$result->replace('", "',", "'')->replace('<',", "'')->replace('>',", "'')->replace('-',", "'')"], 'file_path': '@web.session', 'line_number': 15, 'strings': [[False, '$result = $result->replace('], [True, "' '"], [False, ', '], [True, "''"], [False, ')->replace('], [True, "'<'"], [False, ', '], [True, "''"], [False, ')->replace('], [True, "'>'"], [False, ', '], [True, "''"], [False, ')->replace('], [True, "'-'"], [False, ', '], [True, "''"], [False, ')']], 'arg_strings': [[False, '= $result->replace('], [True, "' '"], [False, ', '], [True, "''"], [False, ')->replace('], [True, "'<'"], [False, ', '], [True, "''"], [False, ')->replace('], [True, "'>'"], [False, ', '], [True, "''"], [False, ')->replace('], [True, "'-'"], [False, ', '], [True, "''"], [False, ')']]}, {'str': "return 'pashmaksession' + $result[:200]", 'command': 'return', 'args_str': "'pashmaksession' + $result[:200]", 'args': ["'pashmaksession'", '+', '$result[:200]'], 'file_path': '@web.session', 'line_number': 16, 'strings': [[False, 'return '], [True, "'pashmaksession'"], [False, ' + $result[:200]']], 'arg_strings': [[False, ''], [True, "'pashmaksession'"], [False, ' + $result[:200]']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 17, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "Gets a session id and validates it. if it is valid, returns that.\\n    But if is not valid, returns a new id.    "', 'command': '@doc', 'args_str': '"Gets a session id and validates it. if it is valid, returns that.\\n    But if is not valid, returns a new id.    "', 'args': ['"Gets', 'a', 'session', 'id', 'and', 'validates', 'it.', 'if', 'it', 'is', 'valid,', 'returns', 'that.\\n', 'But', 'if', 'is', 'not', 'valid,', 'returns', 'a', 'new', 'id.', '"'], 'file_path': '@web.session', 'line_number': 18, 'strings': [[False, '@doc '], [True, '"Gets a session id and validates it. if it is valid, returns that.\\n    But if is not valid, returns a new id.    "'], [False, '']], 'arg_strings': [[False, ''], [True, '"Gets a session id and validates it. if it is valid, returns that.\\n    But if is not valid, returns a new id.    "'], [False, '']]}, {'str': 'func string::validate_session_id(string $id)', 'command': 'func', 'args_str': 'string::validate_session_id(string $id)', 'args': ['string::validate_session_id(string', '$id)'], 'file_path': '@web.session', 'line_number': 19, 'strings': [[False, 'func string::validate_session_id(string $id)']], 'arg_strings': [[False, 'string::validate_session_id(string $id)']]}, {'str': "if (            len($id) != 214 or             '.' in $id or             '/' in $id or             '\\\\' in $id or             '\\n' in $id        )", 'command': 'if', 'args_str': "(            len($id) != 214 or             '.' in $id or             '/' in $id or             '\\\\' in $id or             '\\n' in $id        )", 'args': ['(', 'len($id)', '!=', '214', 'or', "'.'", 'in', '$id', 'or', "'/'", 'in', '$id', 'or', "'\\\\'", 'in', '$id', 'or', "'\\n'", 'in', '$id', ')'], 'file_path': '@web.session', 'line_number': 20, 'strings': [[False, 'if (            len($id) != 214 or             '], [True, "'.'"], [False, ' in $id or             '], [True, "'/'"], [False, ' in $id or             '], [True, "'\\\\'"], [False, ' in $id or             '], [True, "'\\n'"], [False, ' in $id        )']], 'arg_strings': [[False, '(            len($id) != 214 or             '], [True, "'.'"], [False, ' in $id or             '], [True, "'/'"], [False, ' in $id or             '], [True, "'\\\\'"], [False, ' in $id or             '], [True, "'\\n'"], [False, ' in $id        )']]}, {'str': "mem not ((            len($id) != 214 or             '.' in $id or             '/' in $id or             '\\\\' in $id or             '\\n' in $id        ))", 'command': 'mem', 'args_str': "not ((            len($id) != 214 or             '.' in $id or             '/' in $id or             '\\\\' in $id or             '\\n' in $id        ))", 'args': ['not', '((', '', '', '', '', '', '', '', '', '', '', '', 'len($id)', '!=', '214', 'or', '', '', '', '', '', '', '', '', '', '', '', '', "'.'", 'in', '$id', 'or', '', '', '', '', '', '', '', '', '', '', '', '', "'/'", 'in', '$id', 'or', '', '', '', '', '', '', '', '', '', '', '', '', "'\\\\'", 'in', '$id', 'or', '', '', '', '', '', '', '', '', '', '', '', '', "'\\n'", 'in', '$id', '', '', '', '', '', '', '', '))'], 'file_path': '<system>', 'line_number': 19, 'strings': [[False, 'mem not ((            len($id) != 214 or             '], [True, "'.'"], [False, ' in $id or             '], [True, "'/'"], [False, ' in $id or             '], [True, "'\\\\'"], [False, ' in $id or             '], [True, "'\\n'"], [False, ' in $id        ))']], 'arg_strings': [[False, 'not ((            len($id) != 214 or             '], [True, "'.'"], [False, ' in $id or             '], [True, "'/'"], [False, ' in $id or             '], [True, "'\\\\'"], [False, ' in $id or             '], [True, "'\\n'"], [False, ' in $id        ))']]}, {'str': 'gotoif tmplabelif62_2', 'command': 'gotoif', 'args_str': 'tmplabelif62_2', 'args': ['tmplabelif62_2'], 'file_path': '<system>', 'line_number': 19, 'strings': [[False, 'gotoif tmplabelif62_2']], 'arg_strings': [[False, 'tmplabelif62_2']]}, {'str': 'return generate_random_session_id()', 'command': 'return', 'args_str': 'generate_random_session_id()', 'args': ['generate_random_session_id()'], 'file_path': '@web.session', 'line_number': 21, 'strings': [[False, 'return generate_random_session_id()']], 'arg_strings': [[False, 'generate_random_session_id()']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 22, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif62_2', 'command': 'label', 'args_str': 'tmplabelif62_2', 'args': ['tmplabelif62_2'], 'file_path': '<system>', 'line_number': 23, 'strings': [[False, 'label tmplabelif62_2']], 'arg_strings': [[False, 'tmplabelif62_2']]}, {'str': 'label tmplabelif62_end', 'command': 'label', 'args_str': 'tmplabelif62_end', 'args': ['tmplabelif62_end'], 'file_path': '<system>', 'line_number': 23, 'strings': [[False, 'label tmplabelif62_end']], 'arg_strings': [[False, 'tmplabelif62_end']]}, {'str': 'return $id', 'command': 'return', 'args_str': '$id', 'args': ['$id'], 'file_path': '@web.session', 'line_number': 23, 'strings': [[False, 'return $id']], 'arg_strings': [[False, '$id']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 24, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "    Writes a new session and returns the ID.\\n    Also can get a optional custom ID.    Also can get a optional second argument named default value for session.    "', 'command': '@doc', 'args_str': '"    Writes a new session and returns the ID.\\n    Also can get a optional custom ID.    Also can get a optional second argument named default value for session.    "', 'args': ['"', 'Writes', 'a', 'new', 'session', 'and', 'returns', 'the', 'ID.\\n', 'Also', 'can', 'get', 'a', 'optional', 'custom', 'ID.', 'Also', 'can', 'get', 'a', 'optional', 'second', 'argument', 'named', 'default', 'value', 'for', 'session.', '"'], 'file_path': '@web.session', 'line_number': 25, 'strings': [[False, '@doc '], [True, '"    Writes a new session and returns the ID.\\n    Also can get a optional custom ID.    Also can get a optional second argument named default value for session.    "'], [False, '']], 'arg_strings': [[False, ''], [True, '"    Writes a new session and returns the ID.\\n    Also can get a optional custom ID.    Also can get a optional second argument named default value for session.    "'], [False, '']]}, {'str': 'func string::write_session(string $custom_id=null, dict $default_value={})', 'command': 'func', 'args_str': 'string::write_session(string $custom_id=null, dict $default_value={})', 'args': ['string::write_session(string', '$custom_id=null,', 'dict', '$default_value={})'], 'file_path': '@web.session', 'line_number': 26, 'strings': [[False, 'func string::write_session(string $custom_id=null, dict $default_value={})']], 'arg_strings': [[False, 'string::write_session(string $custom_id=null, dict $default_value={})']]}, {'str': 'if $custom_id is null', 'command': 'if', 'args_str': '$custom_id is null', 'args': ['$custom_id', 'is', 'null'], 'file_path': '@web.session', 'line_number': 27, 'strings': [[False, 'if $custom_id is null']], 'arg_strings': [[False, '$custom_id is null']]}, {'str': 'mem not ($custom_id is null)', 'command': 'mem', 'args_str': 'not ($custom_id is null)', 'args': ['not', '($custom_id', 'is', 'null)'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'mem not ($custom_id is null)']], 'arg_strings': [[False, 'not ($custom_id is null)']]}, {'str': 'gotoif tmplabelif63_2', 'command': 'gotoif', 'args_str': 'tmplabelif63_2', 'args': ['tmplabelif63_2'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'gotoif tmplabelif63_2']], 'arg_strings': [[False, 'tmplabelif63_2']]}, {'str': '$custom_id = generate_random_session_id()', 'command': '$custom_id', 'args_str': '= generate_random_session_id()', 'args': ['=', 'generate_random_session_id()'], 'file_path': '@web.session', 'line_number': 28, 'strings': [[False, '$custom_id = generate_random_session_id()']], 'arg_strings': [[False, '= generate_random_session_id()']]}, {'str': "while os.path.isfile($session_dir + '/' + $custom_id)", 'command': 'while', 'args_str': "os.path.isfile($session_dir + '/' + $custom_id)", 'args': ['os.path.isfile($session_dir', '+', "'/'", '+', '$custom_id)'], 'file_path': '@web.session', 'line_number': 29, 'strings': [[False, 'while os.path.isfile($session_dir + '], [True, "'/'"], [False, ' + $custom_id)']], 'arg_strings': [[False, 'os.path.isfile($session_dir + '], [True, "'/'"], [False, ' + $custom_id)']]}, {'str': '$custom_id = generate_random_session_id()', 'command': '$custom_id', 'args_str': '= generate_random_session_id()', 'args': ['=', 'generate_random_session_id()'], 'file_path': '@web.session', 'line_number': 30, 'strings': [[False, '$custom_id = generate_random_session_id()']], 'arg_strings': [[False, '= generate_random_session_id()']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 31, 'strings': [[False, 'endwhile']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 32, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif63_2', 'command': 'label', 'args_str': 'tmplabelif63_2', 'args': ['tmplabelif63_2'], 'file_path': '<system>', 'line_number': 37, 'strings': [[False, 'label tmplabelif63_2']], 'arg_strings': [[False, 'tmplabelif63_2']]}, {'str': 'label tmplabelif63_end', 'command': 'label', 'args_str': 'tmplabelif63_end', 'args': ['tmplabelif63_end'], 'file_path': '<system>', 'line_number': 37, 'strings': [[False, 'label tmplabelif63_end']], 'arg_strings': [[False, 'tmplabelif63_end']]}, {'str': "$path = $session_dir + '/' + $custom_id", 'command': '$path', 'args_str': "= $session_dir + '/' + $custom_id", 'args': ['=', '$session_dir', '+', "'/'", '+', '$custom_id'], 'file_path': '@web.session', 'line_number': 33, 'strings': [[False, '$path = $session_dir + '], [True, "'/'"], [False, ' + $custom_id']], 'arg_strings': [[False, '= $session_dir + '], [True, "'/'"], [False, ' + $custom_id']]}, {'str': "$f = open($path, 'wb')", 'command': '$f', 'args_str': "= open($path, 'wb')", 'args': ['=', 'open($path,', "'wb')"], 'file_path': '@web.session', 'line_number': 34, 'strings': [[False, '$f = open($path, '], [True, "'wb'"], [False, ')']], 'arg_strings': [[False, '= open($path, '], [True, "'wb'"], [False, ')']]}, {'str': 'pickle.dump ($default_value, $f)', 'command': 'pickle.dump', 'args_str': '($default_value, $f)', 'args': ['($default_value,', '$f)'], 'file_path': '@web.session', 'line_number': 35, 'strings': [[False, 'pickle.dump ($default_value, $f)']], 'arg_strings': [[False, '($default_value, $f)']]}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@web.session', 'line_number': 36, 'strings': [[False, '$f->close ()']], 'arg_strings': [[False, '()']]}, {'str': 'return $custom_id', 'command': 'return', 'args_str': '$custom_id', 'args': ['$custom_id'], 'file_path': '@web.session', 'line_number': 37, 'strings': [[False, 'return $custom_id']], 'arg_strings': [[False, '$custom_id']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 38, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "    Loads the session dictionary by unique id.    "', 'command': '@doc', 'args_str': '"    Loads the session dictionary by unique id.    "', 'args': ['"', 'Loads', 'the', 'session', 'dictionary', 'by', 'unique', 'id.', '"'], 'file_path': '@web.session', 'line_number': 39, 'strings': [[False, '@doc '], [True, '"    Loads the session dictionary by unique id.    "'], [False, '']], 'arg_strings': [[False, ''], [True, '"    Loads the session dictionary by unique id.    "'], [False, '']]}, {'str': 'func dict::load_session_by_id(string $id)', 'command': 'func', 'args_str': 'dict::load_session_by_id(string $id)', 'args': ['dict::load_session_by_id(string', '$id)'], 'file_path': '@web.session', 'line_number': 40, 'strings': [[False, 'func dict::load_session_by_id(string $id)']], 'arg_strings': [[False, 'dict::load_session_by_id(string $id)']]}, {'str': '$id = validate_session_id($id)', 'command': '$id', 'args_str': '= validate_session_id($id)', 'args': ['=', 'validate_session_id($id)'], 'file_path': '@web.session', 'line_number': 41, 'strings': [[False, '$id = validate_session_id($id)']], 'arg_strings': [[False, '= validate_session_id($id)']]}, {'str': "if not os.path.isfile($session_dir + '/' + $id)", 'command': 'if', 'args_str': "not os.path.isfile($session_dir + '/' + $id)", 'args': ['not', 'os.path.isfile($session_dir', '+', "'/'", '+', '$id)'], 'file_path': '@web.session', 'line_number': 42, 'strings': [[False, 'if not os.path.isfile($session_dir + '], [True, "'/'"], [False, ' + $id)']], 'arg_strings': [[False, 'not os.path.isfile($session_dir + '], [True, "'/'"], [False, ' + $id)']]}, {'str': "mem not (not os.path.isfile($session_dir + '/' + $id))", 'command': 'mem', 'args_str': "not (not os.path.isfile($session_dir + '/' + $id))", 'args': ['not', '(not', 'os.path.isfile($session_dir', '+', "'/'", '+', '$id))'], 'file_path': '<system>', 'line_number': 49, 'strings': [[False, 'mem not (not os.path.isfile($session_dir + '], [True, "'/'"], [False, ' + $id))']], 'arg_strings': [[False, 'not (not os.path.isfile($session_dir + '], [True, "'/'"], [False, ' + $id))']]}, {'str': 'gotoif tmplabelif64_2', 'command': 'gotoif', 'args_str': 'tmplabelif64_2', 'args': ['tmplabelif64_2'], 'file_path': '<system>', 'line_number': 49, 'strings': [[False, 'gotoif tmplabelif64_2']], 'arg_strings': [[False, 'tmplabelif64_2']]}, {'str': 'write_session ($id)', 'command': 'write_session', 'args_str': '($id)', 'args': ['($id)'], 'file_path': '@web.session', 'line_number': 43, 'strings': [[False, 'write_session ($id)']], 'arg_strings': [[False, '($id)']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 44, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif64_2', 'command': 'label', 'args_str': 'tmplabelif64_2', 'args': ['tmplabelif64_2'], 'file_path': '<system>', 'line_number': 53, 'strings': [[False, 'label tmplabelif64_2']], 'arg_strings': [[False, 'tmplabelif64_2']]}, {'str': 'label tmplabelif64_end', 'command': 'label', 'args_str': 'tmplabelif64_end', 'args': ['tmplabelif64_end'], 'file_path': '<system>', 'line_number': 53, 'strings': [[False, 'label tmplabelif64_end']], 'arg_strings': [[False, 'tmplabelif64_end']]}, {'str': "$f = open($session_dir + '/' + $id, 'rb')", 'command': '$f', 'args_str': "= open($session_dir + '/' + $id, 'rb')", 'args': ['=', 'open($session_dir', '+', "'/'", '+', '$id,', "'rb')"], 'file_path': '@web.session', 'line_number': 45, 'strings': [[False, '$f = open($session_dir + '], [True, "'/'"], [False, ' + $id, '], [True, "'rb'"], [False, ')']], 'arg_strings': [[False, '= open($session_dir + '], [True, "'/'"], [False, ' + $id, '], [True, "'rb'"], [False, ')']]}, {'str': '$content = pickle.load($f)', 'command': '$content', 'args_str': '= pickle.load($f)', 'args': ['=', 'pickle.load($f)'], 'file_path': '@web.session', 'line_number': 46, 'strings': [[False, '$content = pickle.load($f)']], 'arg_strings': [[False, '= pickle.load($f)']]}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@web.session', 'line_number': 47, 'strings': [[False, '$f->close ()']], 'arg_strings': [[False, '()']]}, {'str': 'return $content', 'command': 'return', 'args_str': '$content', 'args': ['$content'], 'file_path': '@web.session', 'line_number': 48, 'strings': [[False, 'return $content']], 'arg_strings': [[False, '$content']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 49, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "    Starts the session.    "', 'command': '@doc', 'args_str': '"    Starts the session.    "', 'args': ['"', 'Starts', 'the', 'session.', '"'], 'file_path': '@web.session', 'line_number': 50, 'strings': [[False, '@doc '], [True, '"    Starts the session.    "'], [False, '']], 'arg_strings': [[False, ''], [True, '"    Starts the session.    "'], [False, '']]}, {'str': 'func start_session()', 'command': 'func', 'args_str': 'start_session()', 'args': ['start_session()'], 'file_path': '@web.session', 'line_number': 51, 'strings': [[False, 'func start_session()']], 'arg_strings': [[False, 'start_session()']]}, {'str': "if not is_defined('WEB_INITED')", 'command': 'if', 'args_str': "not is_defined('WEB_INITED')", 'args': ['not', "is_defined('WEB_INITED')"], 'file_path': '@web.session', 'line_number': 52, 'strings': [[False, 'if not is_defined('], [True, "'WEB_INITED'"], [False, ')']], 'arg_strings': [[False, 'not is_defined('], [True, "'WEB_INITED'"], [False, ')']]}, {'str': "mem not (not is_defined('WEB_INITED'))", 'command': 'mem', 'args_str': "not (not is_defined('WEB_INITED'))", 'args': ['not', '(not', "is_defined('WEB_INITED'))"], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'mem not (not is_defined('], [True, "'WEB_INITED'"], [False, '))']], 'arg_strings': [[False, 'not (not is_defined('], [True, "'WEB_INITED'"], [False, '))']]}, {'str': 'gotoif tmplabelif65_2', 'command': 'gotoif', 'args_str': 'tmplabelif65_2', 'args': ['tmplabelif65_2'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'gotoif tmplabelif65_2']], 'arg_strings': [[False, 'tmplabelif65_2']]}, {'str': "gset ('web.session', {})", 'command': 'gset', 'args_str': "('web.session', {})", 'args': ["('web.session',", '{})'], 'file_path': '@web.session', 'line_number': 53, 'strings': [[False, 'gset ('], [True, "'web.session'"], [False, ', {})']], 'arg_strings': [[False, '('], [True, "'web.session'"], [False, ', {})']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 54, 'strings': [[False, 'return']], 'arg_strings': [[False, '']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 55, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif65_2', 'command': 'label', 'args_str': 'tmplabelif65_2', 'args': ['tmplabelif65_2'], 'file_path': '<system>', 'line_number': 68, 'strings': [[False, 'label tmplabelif65_2']], 'arg_strings': [[False, 'tmplabelif65_2']]}, {'str': 'label tmplabelif65_end', 'command': 'label', 'args_str': 'tmplabelif65_end', 'args': ['tmplabelif65_end'], 'file_path': '<system>', 'line_number': 68, 'strings': [[False, 'label tmplabelif65_end']], 'arg_strings': [[False, 'tmplabelif65_end']]}, {'str': "if 'PASHMAK_SESSION' in list($web.cookies->keys())", 'command': 'if', 'args_str': "'PASHMAK_SESSION' in list($web.cookies->keys())", 'args': ["'PASHMAK_SESSION'", 'in', 'list($web.cookies->keys())'], 'file_path': '@web.session', 'line_number': 56, 'strings': [[False, 'if '], [True, "'PASHMAK_SESSION'"], [False, ' in list($web.cookies->keys())']], 'arg_strings': [[False, ''], [True, "'PASHMAK_SESSION'"], [False, ' in list($web.cookies->keys())']]}, {'str': "mem not ('PASHMAK_SESSION' in list($web.cookies->keys()))", 'command': 'mem', 'args_str': "not ('PASHMAK_SESSION' in list($web.cookies->keys()))", 'args': ['not', "('PASHMAK_SESSION'", 'in', 'list($web.cookies->keys()))'], 'file_path': '<system>', 'line_number': 71, 'strings': [[False, 'mem not ('], [True, "'PASHMAK_SESSION'"], [False, ' in list($web.cookies->keys()))']], 'arg_strings': [[False, 'not ('], [True, "'PASHMAK_SESSION'"], [False, ' in list($web.cookies->keys()))']]}, {'str': 'gotoif tmplabelif66_2', 'command': 'gotoif', 'args_str': 'tmplabelif66_2', 'args': ['tmplabelif66_2'], 'file_path': '<system>', 'line_number': 71, 'strings': [[False, 'gotoif tmplabelif66_2']], 'arg_strings': [[False, 'tmplabelif66_2']]}, {'str': "$id = $web.cookies['PASHMAK_SESSION']", 'command': '$id', 'args_str': "= $web.cookies['PASHMAK_SESSION']", 'args': ['=', "$web.cookies['PASHMAK_SESSION']"], 'file_path': '@web.session', 'line_number': 57, 'strings': [[False, '$id = $web.cookies['], [True, "'PASHMAK_SESSION'"], [False, ']']], 'arg_strings': [[False, '= $web.cookies['], [True, "'PASHMAK_SESSION'"], [False, ']']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 58, 'strings': [[False, 'else']], 'arg_strings': [[False, '']]}, {'str': 'goto tmplabelif66_end', 'command': 'goto', 'args_str': 'tmplabelif66_end', 'args': ['tmplabelif66_end'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'goto tmplabelif66_end']], 'arg_strings': [[False, 'tmplabelif66_end']]}, {'str': 'label tmplabelif66_2', 'command': 'label', 'args_str': 'tmplabelif66_2', 'args': ['tmplabelif66_2'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'label tmplabelif66_2']], 'arg_strings': [[False, 'tmplabelif66_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'mem not (True)']], 'arg_strings': [[False, 'not (True)']]}, {'str': 'gotoif tmplabelif66_3', 'command': 'gotoif', 'args_str': 'tmplabelif66_3', 'args': ['tmplabelif66_3'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'gotoif tmplabelif66_3']], 'arg_strings': [[False, 'tmplabelif66_3']]}, {'str': '$id = write_session()', 'command': '$id', 'args_str': '= write_session()', 'args': ['=', 'write_session()'], 'file_path': '@web.session', 'line_number': 59, 'strings': [[False, '$id = write_session()']], 'arg_strings': [[False, '= write_session()']]}, {'str': "set_cookie ({                'name': 'PASHMAK_SESSION',                'value': $id,            })", 'command': 'set_cookie', 'args_str': "({                'name': 'PASHMAK_SESSION',                'value': $id,            })", 'args': ['({', "'name':", "'PASHMAK_SESSION',", "'value':", '$id,', '})'], 'file_path': '@web.session', 'line_number': 60, 'strings': [[False, 'set_cookie ({                '], [True, "'name'"], [False, ': '], [True, "'PASHMAK_SESSION'"], [False, ',                '], [True, "'value'"], [False, ': $id,            })']], 'arg_strings': [[False, '({                '], [True, "'name'"], [False, ': '], [True, "'PASHMAK_SESSION'"], [False, ',                '], [True, "'value'"], [False, ': $id,            })']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 61, 'strings': [[False, 'endif']], 'arg_strings': [[False, '']]}, {'str': 'label tmplabelif66_3', 'command': 'label', 'args_str': 'tmplabelif66_3', 'args': ['tmplabelif66_3'], 'file_path': '<system>', 'line_number': 82, 'strings': [[False, 'label tmplabelif66_3']], 'arg_strings': [[False, 'tmplabelif66_3']]}, {'str': 'label tmplabelif66_end', 'command': 'label', 'args_str': 'tmplabelif66_end', 'args': ['tmplabelif66_end'], 'file_path': '<system>', 'line_number': 82, 'strings': [[False, 'label tmplabelif66_end']], 'arg_strings': [[False, 'tmplabelif66_end']]}, {'str': "define ('WEB_SESSION_ID', $id)", 'command': 'define', 'args_str': "('WEB_SESSION_ID', $id)", 'args': ["('WEB_SESSION_ID',", '$id)'], 'file_path': '@web.session', 'line_number': 62, 'strings': [[False, 'define ('], [True, "'WEB_SESSION_ID'"], [False, ', $id)']], 'arg_strings': [[False, '('], [True, "'WEB_SESSION_ID'"], [False, ', $id)']]}, {'str': '$session = load_session_by_id($id)', 'command': '$session', 'args_str': '= load_session_by_id($id)', 'args': ['=', 'load_session_by_id($id)'], 'file_path': '@web.session', 'line_number': 63, 'strings': [[False, '$session = load_session_by_id($id)']], 'arg_strings': [[False, '= load_session_by_id($id)']]}, {'str': "gset ('web.session', $session)", 'command': 'gset', 'args_str': "('web.session', $session)", 'args': ["('web.session',", '$session)'], 'file_path': '@web.session', 'line_number': 64, 'strings': [[False, 'gset ('], [True, "'web.session'"], [False, ', $session)']], 'arg_strings': [[False, '('], [True, "'web.session'"], [False, ', $session)']]}, {'str': 'register_shutdown (end_session)', 'command': 'register_shutdown', 'args_str': '(end_session)', 'args': ['(end_session)'], 'file_path': '@web.session', 'line_number': 65, 'strings': [[False, 'register_shutdown (end_session)']], 'arg_strings': [[False, '(end_session)']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 66, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': '@doc "Re-Write the sessions"', 'command': '@doc', 'args_str': '"Re-Write the sessions"', 'args': ['"Re-Write', 'the', 'sessions"'], 'file_path': '@web.session', 'line_number': 67, 'strings': [[False, '@doc '], [True, '"Re-Write the sessions"'], [False, '']], 'arg_strings': [[False, ''], [True, '"Re-Write the sessions"'], [False, '']]}, {'str': 'func end_session()', 'command': 'func', 'args_str': 'end_session()', 'args': ['end_session()'], 'file_path': '@web.session', 'line_number': 68, 'strings': [[False, 'func end_session()']], 'arg_strings': [[False, 'end_session()']]}, {'str': "write_session (WEB_SESSION_ID, gget('web.session'))", 'command': 'write_session', 'args_str': "(WEB_SESSION_ID, gget('web.session'))", 'args': ['(WEB_SESSION_ID,', "gget('web.session'))"], 'file_path': '@web.session', 'line_number': 69, 'strings': [[False, 'write_session (WEB_SESSION_ID, gget('], [True, "'web.session'"], [False, '))']], 'arg_strings': [[False, '(WEB_SESSION_ID, gget('], [True, "'web.session'"], [False, '))']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 70, 'strings': [[False, 'endfunc']], 'arg_strings': [[False, '']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 71, 'strings': [[False, 'endns']], 'arg_strings': [[False, '']]}]
