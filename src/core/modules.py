#
# modules.py
#
# The Pashmak Project
# Copyright 2020-2021 parsa shahmaleki <parsampsh@gmail.com>
#
# This file is part of Pashmak.
#
# Pashmak is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Pashmak is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Pashmak.  If not, see <https://www.gnu.org/licenses/>.
#########################################################################

""" Internal modules """

# This file is auto generated by `make module`.
# Do Not change this file
# The modules in `src/` folder with `.pashm` extension will be mixed here
# to be accessible in the python code for interpreter cores

modules = {}
""" The builtin modules as dictionary """

modules["compiler"] = [{'str': '@doc "The Mixer class gets a file path and crawls in that, finds imports and mixes them\\nExample:    $mixer = Mixer(\'/path/to/file.pashm\')    # then, finally generated code is accessible:    println($mixer->total_content)"', 'command': '@doc', 'args_str': '"The Mixer class gets a file path and crawls in that, finds imports and mixes them\\nExample:    $mixer = Mixer(\'/path/to/file.pashm\')    # then, finally generated code is accessible:    println($mixer->total_content)"', 'args': ['"The', 'Mixer', 'class', 'gets', 'a', 'file', 'path', 'and', 'crawls', 'in', 'that,', 'finds', 'imports', 'and', 'mixes', 'them\\nExample:', '$mixer', '=', "Mixer('/path/to/file.pashm')", '#', 'then,', 'finally', 'generated', 'code', 'is', 'accessible:', 'println($mixer->total_content)"'], 'file_path': '@compiler', 'line_number': 1}, {'str': 'class Mixer', 'command': 'class', 'args_str': 'Mixer', 'args': ['Mixer'], 'file_path': '@compiler', 'line_number': 2}, {'str': 'func __init__(string $path)', 'command': 'func', 'args_str': '__init__(string $path)', 'args': ['__init__(string', '$path)'], 'file_path': '@compiler', 'line_number': 3}, {'str': "$this->total_content = ''", 'command': '$this->total_content', 'args_str': "= ''", 'args': ['=', "''"], 'file_path': '@compiler', 'line_number': 4}, {'str': '$this->imported_files = []', 'command': '$this->imported_files', 'args_str': '= []', 'args': ['=', '[]'], 'file_path': '@compiler', 'line_number': 5}, {'str': "$this->last_is_main = 'True'", 'command': '$this->last_is_main', 'args_str': "= 'True'", 'args': ['=', "'True'"], 'file_path': '@compiler', 'line_number': 6}, {'str': '$this->crawl ($path)', 'command': '$this->crawl', 'args_str': '($path)', 'args': ['($path)'], 'file_path': '@compiler', 'line_number': 7}, {'str': '$parsed_code = parser.parse($this->total_content, filepath=$path, only_parse=True)', 'command': '$parsed_code', 'args_str': '= parser.parse($this->total_content, filepath=$path, only_parse=True)', 'args': ['=', 'parser.parse($this->total_content,', 'filepath=$path,', 'only_parse=True)'], 'file_path': '@compiler', 'line_number': 8}, {'str': "$new_content = '#!/usr/bin/env pashmak\\n'", 'command': '$new_content', 'args_str': "= '#!/usr/bin/env pashmak\\n'", 'args': ['=', "'#!/usr/bin/env", "pashmak\\n'"], 'file_path': '@compiler', 'line_number': 9}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@compiler', 'line_number': 10}, {'str': 'while $i < len($parsed_code)', 'command': 'while', 'args_str': '$i < len($parsed_code)', 'args': ['$i', '<', 'len($parsed_code)'], 'file_path': '@compiler', 'line_number': 11}, {'str': "$new_content = $new_content + $parsed_code[$i]['str'] + ';'", 'command': '$new_content', 'args_str': "= $new_content + $parsed_code[$i]['str'] + ';'", 'args': ['=', '$new_content', '+', "$parsed_code[$i]['str']", '+', "';'"], 'file_path': '@compiler', 'line_number': 12}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@compiler', 'line_number': 13}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 14}, {'str': '$this->total_content = $new_content->strip()', 'command': '$this->total_content', 'args_str': '= $new_content->strip()', 'args': ['=', '$new_content->strip()'], 'file_path': '@compiler', 'line_number': 15}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 16}, {'str': '@doc "    Crawls in a path and finds imports    \\n    This method is called recursively    "', 'command': '@doc', 'args_str': '"    Crawls in a path and finds imports    \\n    This method is called recursively    "', 'args': ['"', 'Crawls', 'in', 'a', 'path', 'and', 'finds', 'imports', '\\n', 'This', 'method', 'is', 'called', 'recursively', '"'], 'file_path': '@compiler', 'line_number': 17}, {'str': 'func crawl(string $path)', 'command': 'func', 'args_str': 'crawl(string $path)', 'args': ['crawl(string', '$path)'], 'file_path': '@compiler', 'line_number': 18}, {'str': '$path = os.path.abspath($path)', 'command': '$path', 'args_str': '= os.path.abspath($path)', 'args': ['=', 'os.path.abspath($path)'], 'file_path': '@compiler', 'line_number': 19}, {'str': 'if os.path.isdir($path)', 'command': 'if', 'args_str': 'os.path.isdir($path)', 'args': ['os.path.isdir($path)'], 'file_path': '@compiler', 'line_number': 20}, {'str': 'mem not (os.path.isdir($path))', 'command': 'mem', 'args_str': 'not (os.path.isdir($path))', 'args': ['not', '(os.path.isdir($path))'], 'file_path': '<system>', 'line_number': 19}, {'str': 'gotoif tmplabelif0_2', 'command': 'gotoif', 'args_str': 'tmplabelif0_2', 'args': ['tmplabelif0_2'], 'file_path': '<system>', 'line_number': 19}, {'str': "$path = $path + '/__init__.pashm'", 'command': '$path', 'args_str': "= $path + '/__init__.pashm'", 'args': ['=', '$path', '+', "'/__init__.pashm'"], 'file_path': '@compiler', 'line_number': 21}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 22}, {'str': 'label tmplabelif0_2', 'command': 'label', 'args_str': 'tmplabelif0_2', 'args': ['tmplabelif0_2'], 'file_path': '<system>', 'line_number': 23}, {'str': 'label tmplabelif0_end', 'command': 'label', 'args_str': 'tmplabelif0_end', 'args': ['tmplabelif0_end'], 'file_path': '<system>', 'line_number': 23}, {'str': "$f = open($path, 'r')", 'command': '$f', 'args_str': "= open($path, 'r')", 'args': ['=', 'open($path,', "'r')"], 'file_path': '@compiler', 'line_number': 23}, {'str': '$content = $f->read()', 'command': '$content', 'args_str': '= $f->read()', 'args': ['=', '$f->read()'], 'file_path': '@compiler', 'line_number': 24}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@compiler', 'line_number': 25}, {'str': '$parsed_code = parser.parse($content, filepath=$path, only_parse=True)', 'command': '$parsed_code', 'args_str': '= parser.parse($content, filepath=$path, only_parse=True)', 'args': ['=', 'parser.parse($content,', 'filepath=$path,', 'only_parse=True)'], 'file_path': '@compiler', 'line_number': 26}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@compiler', 'line_number': 27}, {'str': 'while $i < len($parsed_code)', 'command': 'while', 'args_str': '$i < len($parsed_code)', 'args': ['$i', '<', 'len($parsed_code)'], 'file_path': '@compiler', 'line_number': 28}, {'str': "if $parsed_code[$i]['command'] == 'import' or $parsed_code[$i]['command'] == 'import_once'", 'command': 'if', 'args_str': "$parsed_code[$i]['command'] == 'import' or $parsed_code[$i]['command'] == 'import_once'", 'args': ["$parsed_code[$i]['command']", '==', "'import'", 'or', "$parsed_code[$i]['command']", '==', "'import_once'"], 'file_path': '@compiler', 'line_number': 29}, {'str': "mem not ($parsed_code[$i]['command'] == 'import' or $parsed_code[$i]['command'] == 'import_once')", 'command': 'mem', 'args_str': "not ($parsed_code[$i]['command'] == 'import' or $parsed_code[$i]['command'] == 'import_once')", 'args': ['not', "($parsed_code[$i]['command']", '==', "'import'", 'or', "$parsed_code[$i]['command']", '==', "'import_once')"], 'file_path': '<system>', 'line_number': 32}, {'str': 'gotoif tmplabelif1_2', 'command': 'gotoif', 'args_str': 'tmplabelif1_2', 'args': ['tmplabelif1_2'], 'file_path': '<system>', 'line_number': 32}, {'str': '$import_cmd_arg = False', 'command': '$import_cmd_arg', 'args_str': '= False', 'args': ['=', 'False'], 'file_path': '@compiler', 'line_number': 30}, {'str': 'try error', 'command': 'try', 'args_str': 'error', 'args': ['error'], 'file_path': '@compiler', 'line_number': 31}, {'str': '$__old_dir__ = $__dir__', 'command': '$__old_dir__', 'args_str': '= $__dir__', 'args': ['=', '$__dir__'], 'file_path': '@compiler', 'line_number': 32}, {'str': '$__old_file__ = $__file__', 'command': '$__old_file__', 'args_str': '= $__file__', 'args': ['=', '$__file__'], 'file_path': '@compiler', 'line_number': 33}, {'str': '$__dir__ = os.path.dirname($path)', 'command': '$__dir__', 'args_str': '= os.path.dirname($path)', 'args': ['=', 'os.path.dirname($path)'], 'file_path': '@compiler', 'line_number': 34}, {'str': '$__file__ = $path', 'command': '$__file__', 'args_str': '= $path', 'args': ['=', '$path'], 'file_path': '@compiler', 'line_number': 35}, {'str': "$import_cmd_arg = python('self.mem = self.eval(' + repr($parsed_code[$i]['args_str']) + ')')", 'command': '$import_cmd_arg', 'args_str': "= python('self.mem = self.eval(' + repr($parsed_code[$i]['args_str']) + ')')", 'args': ['=', "python('self.mem", '=', "self.eval('", '+', "repr($parsed_code[$i]['args_str'])", '+', "')')"], 'file_path': '@compiler', 'line_number': 36}, {'str': '$__dir__ = $__old_dir__', 'command': '$__dir__', 'args_str': '= $__old_dir__', 'args': ['=', '$__old_dir__'], 'file_path': '@compiler', 'line_number': 37}, {'str': '$__file__ = $__old_file__', 'command': '$__file__', 'args_str': '= $__old_file__', 'args': ['=', '$__old_file__'], 'file_path': '@compiler', 'line_number': 38}, {'str': 'endtry ', 'command': 'endtry', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 39}, {'str': 'goto after_error', 'command': 'goto', 'args_str': 'after_error', 'args': ['after_error'], 'file_path': '@compiler', 'line_number': 39}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0}, {'str': 'label error', 'command': 'label', 'args_str': 'error', 'args': ['error'], 'file_path': '@compiler', 'line_number': 39}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0}, {'str': 'label after_error', 'command': 'label', 'args_str': 'after_error', 'args': ['after_error'], 'file_path': '@compiler', 'line_number': 40}, {'str': 'if $import_cmd_arg != False', 'command': 'if', 'args_str': '$import_cmd_arg != False', 'args': ['$import_cmd_arg', '!=', 'False'], 'file_path': '@compiler', 'line_number': 41}, {'str': 'mem not ($import_cmd_arg != False)', 'command': 'mem', 'args_str': 'not ($import_cmd_arg != False)', 'args': ['not', '($import_cmd_arg', '!=', 'False)'], 'file_path': '<system>', 'line_number': 50}, {'str': 'gotoif tmplabelif2_2', 'command': 'gotoif', 'args_str': 'tmplabelif2_2', 'args': ['tmplabelif2_2'], 'file_path': '<system>', 'line_number': 50}, {'str': 'if typeof($import_cmd_arg) != tuple', 'command': 'if', 'args_str': 'typeof($import_cmd_arg) != tuple', 'args': ['typeof($import_cmd_arg)', '!=', 'tuple'], 'file_path': '@compiler', 'line_number': 42}, {'str': 'mem not (typeof($import_cmd_arg) != tuple)', 'command': 'mem', 'args_str': 'not (typeof($import_cmd_arg) != tuple)', 'args': ['not', '(typeof($import_cmd_arg)', '!=', 'tuple)'], 'file_path': '<system>', 'line_number': 53}, {'str': 'gotoif tmplabelif3_2', 'command': 'gotoif', 'args_str': 'tmplabelif3_2', 'args': ['tmplabelif3_2'], 'file_path': '<system>', 'line_number': 53}, {'str': '$import_cmd_arg = $import_cmd_arg,', 'command': '$import_cmd_arg', 'args_str': '= $import_cmd_arg,', 'args': ['=', '$import_cmd_arg,'], 'file_path': '@compiler', 'line_number': 43}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 44}, {'str': 'label tmplabelif3_2', 'command': 'label', 'args_str': 'tmplabelif3_2', 'args': ['tmplabelif3_2'], 'file_path': '<system>', 'line_number': 57}, {'str': 'label tmplabelif3_end', 'command': 'label', 'args_str': 'tmplabelif3_end', 'args': ['tmplabelif3_end'], 'file_path': '<system>', 'line_number': 57}, {'str': '$import_cmd_arg = list($import_cmd_arg)', 'command': '$import_cmd_arg', 'args_str': '= list($import_cmd_arg)', 'args': ['=', 'list($import_cmd_arg)'], 'file_path': '@compiler', 'line_number': 45}, {'str': '$x = 0', 'command': '$x', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@compiler', 'line_number': 46}, {'str': 'while $x < len($import_cmd_arg)', 'command': 'while', 'args_str': '$x < len($import_cmd_arg)', 'args': ['$x', '<', 'len($import_cmd_arg)'], 'file_path': '@compiler', 'line_number': 47}, {'str': 'if $import_cmd_arg[$x]', 'command': 'if', 'args_str': '$import_cmd_arg[$x]', 'args': ['$import_cmd_arg[$x]'], 'file_path': '@compiler', 'line_number': 48}, {'str': 'mem not ($import_cmd_arg[$x])', 'command': 'mem', 'args_str': 'not ($import_cmd_arg[$x])', 'args': ['not', '($import_cmd_arg[$x])'], 'file_path': '<system>', 'line_number': 63}, {'str': 'gotoif tmplabelif4_2', 'command': 'gotoif', 'args_str': 'tmplabelif4_2', 'args': ['tmplabelif4_2'], 'file_path': '<system>', 'line_number': 63}, {'str': "if $import_cmd_arg[$x][0] == '@'", 'command': 'if', 'args_str': "$import_cmd_arg[$x][0] == '@'", 'args': ['$import_cmd_arg[$x][0]', '==', "'@'"], 'file_path': '@compiler', 'line_number': 49}, {'str': "mem not ($import_cmd_arg[$x][0] == '@')", 'command': 'mem', 'args_str': "not ($import_cmd_arg[$x][0] == '@')", 'args': ['not', '($import_cmd_arg[$x][0]', '==', "'@')"], 'file_path': '<system>', 'line_number': 66}, {'str': 'gotoif tmplabelif5_2', 'command': 'gotoif', 'args_str': 'tmplabelif5_2', 'args': ['tmplabelif5_2'], 'file_path': '<system>', 'line_number': 66}, {'str': "$this->total_content = $this->total_content + $parsed_code[$i]['str'] + '\\n'", 'command': '$this->total_content', 'args_str': "= $this->total_content + $parsed_code[$i]['str'] + '\\n'", 'args': ['=', '$this->total_content', '+', "$parsed_code[$i]['str']", '+', "'\\n'"], 'file_path': '@compiler', 'line_number': 50}, {'str': '$x = $x + 1', 'command': '$x', 'args_str': '= $x + 1', 'args': ['=', '$x', '+', '1'], 'file_path': '@compiler', 'line_number': 51}, {'str': 'continue ', 'command': 'continue', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 52}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 53}, {'str': 'label tmplabelif5_2', 'command': 'label', 'args_str': 'tmplabelif5_2', 'args': ['tmplabelif5_2'], 'file_path': '<system>', 'line_number': 72}, {'str': 'label tmplabelif5_end', 'command': 'label', 'args_str': 'tmplabelif5_end', 'args': ['tmplabelif5_end'], 'file_path': '<system>', 'line_number': 72}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 54}, {'str': 'label tmplabelif4_2', 'command': 'label', 'args_str': 'tmplabelif4_2', 'args': ['tmplabelif4_2'], 'file_path': '<system>', 'line_number': 75}, {'str': 'label tmplabelif4_end', 'command': 'label', 'args_str': 'tmplabelif4_end', 'args': ['tmplabelif4_end'], 'file_path': '<system>', 'line_number': 75}, {'str': '$import_cmd_arg[$x] = os.path.abspath($import_cmd_arg[$x])', 'command': '$import_cmd_arg[$x]', 'args_str': '= os.path.abspath($import_cmd_arg[$x])', 'args': ['=', 'os.path.abspath($import_cmd_arg[$x])'], 'file_path': '@compiler', 'line_number': 55}, {'str': "if ($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['command'] != 'import_once'", 'command': 'if', 'args_str': "($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['command'] != 'import_once'", 'args': ['($import_cmd_arg[$x]', 'not', 'in', '$this->imported_files)', 'or', "$parsed_code[$i]['command']", '!=', "'import_once'"], 'file_path': '@compiler', 'line_number': 56}, {'str': "mem not (($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['command'] != 'import_once')", 'command': 'mem', 'args_str': "not (($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['command'] != 'import_once')", 'args': ['not', '(($import_cmd_arg[$x]', 'not', 'in', '$this->imported_files)', 'or', "$parsed_code[$i]['command']", '!=', "'import_once')"], 'file_path': '<system>', 'line_number': 79}, {'str': 'gotoif tmplabelif6_2', 'command': 'gotoif', 'args_str': 'tmplabelif6_2', 'args': ['tmplabelif6_2'], 'file_path': '<system>', 'line_number': 79}, {'str': "$this->total_content = $this->total_content + '$__ismain__ = False\\n'", 'command': '$this->total_content', 'args_str': "= $this->total_content + '$__ismain__ = False\\n'", 'args': ['=', '$this->total_content', '+', "'$__ismain__", '=', "False\\n'"], 'file_path': '@compiler', 'line_number': 57}, {'str': '$tmp_last_is_main = $this->last_is_main', 'command': '$tmp_last_is_main', 'args_str': '= $this->last_is_main', 'args': ['=', '$this->last_is_main'], 'file_path': '@compiler', 'line_number': 58}, {'str': "$this->last_is_main = 'False'", 'command': '$this->last_is_main', 'args_str': "= 'False'", 'args': ['=', "'False'"], 'file_path': '@compiler', 'line_number': 59}, {'str': '$this->crawl ($import_cmd_arg[$x])', 'command': '$this->crawl', 'args_str': '($import_cmd_arg[$x])', 'args': ['($import_cmd_arg[$x])'], 'file_path': '@compiler', 'line_number': 60}, {'str': '$this->imported_files->append ($import_cmd_arg[$x])', 'command': '$this->imported_files->append', 'args_str': '($import_cmd_arg[$x])', 'args': ['($import_cmd_arg[$x])'], 'file_path': '@compiler', 'line_number': 61}, {'str': "$this->total_content = $this->total_content + '$__ismain__ = ' + $tmp_last_is_main + '\\n'", 'command': '$this->total_content', 'args_str': "= $this->total_content + '$__ismain__ = ' + $tmp_last_is_main + '\\n'", 'args': ['=', '$this->total_content', '+', "'$__ismain__", '=', "'", '+', '$tmp_last_is_main', '+', "'\\n'"], 'file_path': '@compiler', 'line_number': 62}, {'str': '$this->last_is_main = $tmp_last_is_main', 'command': '$this->last_is_main', 'args_str': '= $tmp_last_is_main', 'args': ['=', '$tmp_last_is_main'], 'file_path': '@compiler', 'line_number': 63}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 64}, {'str': 'label tmplabelif6_2', 'command': 'label', 'args_str': 'tmplabelif6_2', 'args': ['tmplabelif6_2'], 'file_path': '<system>', 'line_number': 89}, {'str': 'label tmplabelif6_end', 'command': 'label', 'args_str': 'tmplabelif6_end', 'args': ['tmplabelif6_end'], 'file_path': '<system>', 'line_number': 89}, {'str': '$x = $x + 1', 'command': '$x', 'args_str': '= $x + 1', 'args': ['=', '$x', '+', '1'], 'file_path': '@compiler', 'line_number': 65}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 66}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 67}, {'str': 'label tmplabelif2_2', 'command': 'label', 'args_str': 'tmplabelif2_2', 'args': ['tmplabelif2_2'], 'file_path': '<system>', 'line_number': 94}, {'str': 'label tmplabelif2_end', 'command': 'label', 'args_str': 'tmplabelif2_end', 'args': ['tmplabelif2_end'], 'file_path': '<system>', 'line_number': 94}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 68}, {'str': 'goto tmplabelif1_end', 'command': 'goto', 'args_str': 'tmplabelif1_end', 'args': ['tmplabelif1_end'], 'file_path': '<system>', 'line_number': 97}, {'str': 'label tmplabelif1_2', 'command': 'label', 'args_str': 'tmplabelif1_2', 'args': ['tmplabelif1_2'], 'file_path': '<system>', 'line_number': 97}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 97}, {'str': 'gotoif tmplabelif1_3', 'command': 'gotoif', 'args_str': 'tmplabelif1_3', 'args': ['tmplabelif1_3'], 'file_path': '<system>', 'line_number': 97}, {'str': "$this->total_content = $this->total_content + $parsed_code[$i]['str'] + '\\n'", 'command': '$this->total_content', 'args_str': "= $this->total_content + $parsed_code[$i]['str'] + '\\n'", 'args': ['=', '$this->total_content', '+', "$parsed_code[$i]['str']", '+', "'\\n'"], 'file_path': '@compiler', 'line_number': 69}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 70}, {'str': 'label tmplabelif1_3', 'command': 'label', 'args_str': 'tmplabelif1_3', 'args': ['tmplabelif1_3'], 'file_path': '<system>', 'line_number': 103}, {'str': 'label tmplabelif1_end', 'command': 'label', 'args_str': 'tmplabelif1_end', 'args': ['tmplabelif1_end'], 'file_path': '<system>', 'line_number': 103}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@compiler', 'line_number': 71}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 72}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 73}, {'str': 'endclass ', 'command': 'endclass', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 74}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@compiler', 'line_number': 75}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 110}, {'str': 'gotoif tmplabelif7_2', 'command': 'gotoif', 'args_str': 'tmplabelif7_2', 'args': ['tmplabelif7_2'], 'file_path': '<system>', 'line_number': 110}, {'str': 'if len($argv) <= 1', 'command': 'if', 'args_str': 'len($argv) <= 1', 'args': ['len($argv)', '<=', '1'], 'file_path': '@compiler', 'line_number': 76}, {'str': 'mem not (len($argv) <= 1)', 'command': 'mem', 'args_str': 'not (len($argv) <= 1)', 'args': ['not', '(len($argv)', '<=', '1)'], 'file_path': '<system>', 'line_number': 113}, {'str': 'gotoif tmplabelif8_2', 'command': 'gotoif', 'args_str': 'tmplabelif8_2', 'args': ['tmplabelif8_2'], 'file_path': '<system>', 'line_number': 113}, {'str': "println ('ERROR: script filename is required')", 'command': 'println', 'args_str': "('ERROR: script filename is required')", 'args': ["('ERROR:", 'script', 'filename', 'is', "required')"], 'file_path': '@compiler', 'line_number': 77}, {'str': 'exit (1)', 'command': 'exit', 'args_str': '(1)', 'args': ['(1)'], 'file_path': '@compiler', 'line_number': 78}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 79}, {'str': 'label tmplabelif8_2', 'command': 'label', 'args_str': 'tmplabelif8_2', 'args': ['tmplabelif8_2'], 'file_path': '<system>', 'line_number': 118}, {'str': 'label tmplabelif8_end', 'command': 'label', 'args_str': 'tmplabelif8_end', 'args': ['tmplabelif8_end'], 'file_path': '<system>', 'line_number': 118}, {'str': '$mix = Mixer($argv[1])', 'command': '$mix', 'args_str': '= Mixer($argv[1])', 'args': ['=', 'Mixer($argv[1])'], 'file_path': '@compiler', 'line_number': 80}, {'str': 'if len($argv) <= 2', 'command': 'if', 'args_str': 'len($argv) <= 2', 'args': ['len($argv)', '<=', '2'], 'file_path': '@compiler', 'line_number': 81}, {'str': 'mem not (len($argv) <= 2)', 'command': 'mem', 'args_str': 'not (len($argv) <= 2)', 'args': ['not', '(len($argv)', '<=', '2)'], 'file_path': '<system>', 'line_number': 122}, {'str': 'gotoif tmplabelif9_2', 'command': 'gotoif', 'args_str': 'tmplabelif9_2', 'args': ['tmplabelif9_2'], 'file_path': '<system>', 'line_number': 122}, {'str': 'println ($mix->total_content)', 'command': 'println', 'args_str': '($mix->total_content)', 'args': ['($mix->total_content)'], 'file_path': '@compiler', 'line_number': 82}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 83}, {'str': 'goto tmplabelif9_end', 'command': 'goto', 'args_str': 'tmplabelif9_end', 'args': ['tmplabelif9_end'], 'file_path': '<system>', 'line_number': 126}, {'str': 'label tmplabelif9_2', 'command': 'label', 'args_str': 'tmplabelif9_2', 'args': ['tmplabelif9_2'], 'file_path': '<system>', 'line_number': 126}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 126}, {'str': 'gotoif tmplabelif9_3', 'command': 'gotoif', 'args_str': 'tmplabelif9_3', 'args': ['tmplabelif9_3'], 'file_path': '<system>', 'line_number': 126}, {'str': '$out_file_path = $argv[2]', 'command': '$out_file_path', 'args_str': '= $argv[2]', 'args': ['=', '$argv[2]'], 'file_path': '@compiler', 'line_number': 84}, {'str': "$f = open($out_file_path, 'w')", 'command': '$f', 'args_str': "= open($out_file_path, 'w')", 'args': ['=', 'open($out_file_path,', "'w')"], 'file_path': '@compiler', 'line_number': 85}, {'str': '$f->write ($mix->total_content)', 'command': '$f->write', 'args_str': '($mix->total_content)', 'args': ['($mix->total_content)'], 'file_path': '@compiler', 'line_number': 86}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@compiler', 'line_number': 87}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 88}, {'str': 'label tmplabelif9_3', 'command': 'label', 'args_str': 'tmplabelif9_3', 'args': ['tmplabelif9_3'], 'file_path': '<system>', 'line_number': 135}, {'str': 'label tmplabelif9_end', 'command': 'label', 'args_str': 'tmplabelif9_end', 'args': ['tmplabelif9_end'], 'file_path': '<system>', 'line_number': 135}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 89}, {'str': 'label tmplabelif7_2', 'command': 'label', 'args_str': 'tmplabelif7_2', 'args': ['tmplabelif7_2'], 'file_path': '<system>', 'line_number': 138}, {'str': 'label tmplabelif7_end', 'command': 'label', 'args_str': 'tmplabelif7_end', 'args': ['tmplabelif7_end'], 'file_path': '<system>', 'line_number': 138}]
modules["hash"] = [{'str': 'namespace hash', 'command': 'namespace', 'args_str': 'hash', 'args': ['hash'], 'file_path': '@hash', 'line_number': 1}, {'str': '@doc """    Calculates blake2b hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates blake2b hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'blake2b', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 2}, {'str': 'func string::blake2b(string $value)', 'command': 'func', 'args_str': 'string::blake2b(string $value)', 'args': ['string::blake2b(string', '$value)'], 'file_path': '@hash', 'line_number': 3}, {'str': "py_load_module ('hashlib')->blake2b($value->encode())->hexdigest()", 'command': 'py_load_module', 'args_str': "('hashlib')->blake2b($value->encode())->hexdigest()", 'args': ["('hashlib')->blake2b($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 4}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 5}, {'str': '@doc """    Calculates blake2s hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates blake2s hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'blake2s', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 6}, {'str': 'func string::blake2s(string $value)', 'command': 'func', 'args_str': 'string::blake2s(string $value)', 'args': ['string::blake2s(string', '$value)'], 'file_path': '@hash', 'line_number': 7}, {'str': "return py_load_module('hashlib')->blake2s($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->blake2s($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->blake2s($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 8}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 9}, {'str': '@doc """    Calculates md5 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates md5 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'md5', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 10}, {'str': 'func string::md5(string $value)', 'command': 'func', 'args_str': 'string::md5(string $value)', 'args': ['string::md5(string', '$value)'], 'file_path': '@hash', 'line_number': 11}, {'str': "return py_load_module('hashlib')->md5($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->md5($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->md5($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 12}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 13}, {'str': '@doc """    Calculates sha1 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha1 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha1', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 14}, {'str': 'func string::sha1(string $value)', 'command': 'func', 'args_str': 'string::sha1(string $value)', 'args': ['string::sha1(string', '$value)'], 'file_path': '@hash', 'line_number': 15}, {'str': "return py_load_module('hashlib')->sha1($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha1($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha1($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 16}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 17}, {'str': '@doc """    Calculates sha224 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha224 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha224', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 18}, {'str': 'func string::sha224(string $value)', 'command': 'func', 'args_str': 'string::sha224(string $value)', 'args': ['string::sha224(string', '$value)'], 'file_path': '@hash', 'line_number': 19}, {'str': "return py_load_module('hashlib')->sha224($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha224($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha224($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 20}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 21}, {'str': '@doc """    Calculates sha256 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha256 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha256', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 22}, {'str': 'func string::sha256(string $value)', 'command': 'func', 'args_str': 'string::sha256(string $value)', 'args': ['string::sha256(string', '$value)'], 'file_path': '@hash', 'line_number': 23}, {'str': "return py_load_module('hashlib')->sha256($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha256($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha256($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 24}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 25}, {'str': '@doc """    Calculates sha384 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha384 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha384', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 26}, {'str': 'func string::sha384(string $value)', 'command': 'func', 'args_str': 'string::sha384(string $value)', 'args': ['string::sha384(string', '$value)'], 'file_path': '@hash', 'line_number': 27}, {'str': "return py_load_module('hashlib')->sha384($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha384($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha384($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 28}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 29}, {'str': '@doc """    Calculates sha3_224 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha3_224 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha3_224', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 30}, {'str': 'func string::sha3_224(string $value)', 'command': 'func', 'args_str': 'string::sha3_224(string $value)', 'args': ['string::sha3_224(string', '$value)'], 'file_path': '@hash', 'line_number': 31}, {'str': "return py_load_module('hashlib')->sha3_224($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha3_224($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha3_224($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 32}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 33}, {'str': '@doc """    Calculates sha3_256 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha3_256 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha3_256', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 34}, {'str': 'func string::sha3_256(string $value)', 'command': 'func', 'args_str': 'string::sha3_256(string $value)', 'args': ['string::sha3_256(string', '$value)'], 'file_path': '@hash', 'line_number': 35}, {'str': "return py_load_module('hashlib')->sha3_256($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha3_256($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha3_256($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 36}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 37}, {'str': '@doc """    Calculates sha3_384 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha3_384 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha3_384', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 38}, {'str': 'func string::sha3_384(string $value)', 'command': 'func', 'args_str': 'string::sha3_384(string $value)', 'args': ['string::sha3_384(string', '$value)'], 'file_path': '@hash', 'line_number': 39}, {'str': "return py_load_module('hashlib')->sha3_384($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha3_384($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha3_384($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 40}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 41}, {'str': '@doc """    Calculates sha3_512 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha3_512 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha3_512', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 42}, {'str': 'func string::sha3_512(string $value)', 'command': 'func', 'args_str': 'string::sha3_512(string $value)', 'args': ['string::sha3_512(string', '$value)'], 'file_path': '@hash', 'line_number': 43}, {'str': "return py_load_module('hashlib')->sha3_512($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha3_512($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha3_512($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 44}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 45}, {'str': '@doc """    Calculates sha512 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha512 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha512', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 46}, {'str': 'func string::sha512(string $value)', 'command': 'func', 'args_str': 'string::sha512(string $value)', 'args': ['string::sha512(string', '$value)'], 'file_path': '@hash', 'line_number': 47}, {'str': "return py_load_module('hashlib')->sha512($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha512($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha512($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 48}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 49}, {'str': '@doc """    Calculates shake_128 hash    \\n    Args:        0. value: value that you want to hash        1. length    """', 'command': '@doc', 'args_str': '"""    Calculates shake_128 hash    \\n    Args:        0. value: value that you want to hash        1. length    """', 'args': ['"""', 'Calculates', 'shake_128', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '1.', 'length', '"""'], 'file_path': '@hash', 'line_number': 50}, {'str': 'func string::shake_128(string $value, int $length)', 'command': 'func', 'args_str': 'string::shake_128(string $value, int $length)', 'args': ['string::shake_128(string', '$value,', 'int', '$length)'], 'file_path': '@hash', 'line_number': 51}, {'str': "return py_load_module('hashlib')->shake_128(str($value).encode()).hexdigest($length)", 'command': 'return', 'args_str': "py_load_module('hashlib')->shake_128(str($value).encode()).hexdigest($length)", 'args': ["py_load_module('hashlib')->shake_128(str($value).encode()).hexdigest($length)"], 'file_path': '@hash', 'line_number': 52}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 53}, {'str': '@doc """    Calculates shake_256 hash    \\n    Args:        0. value: value that you want to hash        1. length    """', 'command': '@doc', 'args_str': '"""    Calculates shake_256 hash    \\n    Args:        0. value: value that you want to hash        1. length    """', 'args': ['"""', 'Calculates', 'shake_256', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '1.', 'length', '"""'], 'file_path': '@hash', 'line_number': 54}, {'str': 'func string::shake_256(string $value, int $length)', 'command': 'func', 'args_str': 'string::shake_256(string $value, int $length)', 'args': ['string::shake_256(string', '$value,', 'int', '$length)'], 'file_path': '@hash', 'line_number': 55}, {'str': "return py_load_module('hashlib')->shake_256(str($value).encode()).hexdigest($length)", 'command': 'return', 'args_str': "py_load_module('hashlib')->shake_256(str($value).encode()).hexdigest($length)", 'args': ["py_load_module('hashlib')->shake_256(str($value).encode()).hexdigest($length)"], 'file_path': '@hash', 'line_number': 56}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 57}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 58}]
modules["helloworld"] = [{'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@helloworld', 'line_number': 1}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 0}, {'str': 'gotoif tmplabelif10_2', 'command': 'gotoif', 'args_str': 'tmplabelif10_2', 'args': ['tmplabelif10_2'], 'file_path': '<system>', 'line_number': 0}, {'str': "println ('Hello world!')", 'command': 'println', 'args_str': "('Hello world!')", 'args': ["('Hello", "world!')"], 'file_path': '@helloworld', 'line_number': 2}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@helloworld', 'line_number': 3}, {'str': 'label tmplabelif10_2', 'command': 'label', 'args_str': 'tmplabelif10_2', 'args': ['tmplabelif10_2'], 'file_path': '<system>', 'line_number': 4}, {'str': 'label tmplabelif10_end', 'command': 'label', 'args_str': 'tmplabelif10_end', 'args': ['tmplabelif10_end'], 'file_path': '<system>', 'line_number': 4}]
modules["math"] = [{'str': 'ns math', 'command': 'ns', 'args_str': 'math', 'args': ['math'], 'file_path': '@math', 'line_number': 1}, {'str': '@doc """    Returns the arc cosine of a number. Recives a number between `1` and `-1`.    """', 'command': '@doc', 'args_str': '"""    Returns the arc cosine of a number. Recives a number between `1` and `-1`.    """', 'args': ['"""', 'Returns', 'the', 'arc', 'cosine', 'of', 'a', 'number.', 'Recives', 'a', 'number', 'between', '`1`', 'and', '`-1`.', '"""'], 'file_path': '@math', 'line_number': 2}, {'str': 'func acos($num)', 'command': 'func', 'args_str': 'acos($num)', 'args': ['acos($num)'], 'file_path': '@math', 'line_number': 3}, {'str': "return py_load_module('math')->acos($num)", 'command': 'return', 'args_str': "py_load_module('math')->acos($num)", 'args': ["py_load_module('math')->acos($num)"], 'file_path': '@math', 'line_number': 4}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 5}, {'str': '@doc """    Returns the inverse hyperbolic cosine of a number.    """', 'command': '@doc', 'args_str': '"""    Returns the inverse hyperbolic cosine of a number.    """', 'args': ['"""', 'Returns', 'the', 'inverse', 'hyperbolic', 'cosine', 'of', 'a', 'number.', '"""'], 'file_path': '@math', 'line_number': 6}, {'str': 'func acosh($num)', 'command': 'func', 'args_str': 'acosh($num)', 'args': ['acosh($num)'], 'file_path': '@math', 'line_number': 7}, {'str': "return py_load_module('math')->acosh($num)", 'command': 'return', 'args_str': "py_load_module('math')->acosh($num)", 'args': ["py_load_module('math')->acosh($num)"], 'file_path': '@math', 'line_number': 8}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 9}, {'str': '@doc """    Rounds a number upward to its nearest integer.    """', 'command': '@doc', 'args_str': '"""    Rounds a number upward to its nearest integer.    """', 'args': ['"""', 'Rounds', 'a', 'number', 'upward', 'to', 'its', 'nearest', 'integer.', '"""'], 'file_path': '@math', 'line_number': 10}, {'str': 'func ceil($num)', 'command': 'func', 'args_str': 'ceil($num)', 'args': ['ceil($num)'], 'file_path': '@math', 'line_number': 11}, {'str': "return py_load_module('math')->ceil($num)", 'command': 'return', 'args_str': "py_load_module('math')->ceil($num)", 'args': ["py_load_module('math')->ceil($num)"], 'file_path': '@math', 'line_number': 12}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 13}, {'str': '@doc """    Finds the cosine of a number.    """', 'command': '@doc', 'args_str': '"""    Finds the cosine of a number.    """', 'args': ['"""', 'Finds', 'the', 'cosine', 'of', 'a', 'number.', '"""'], 'file_path': '@math', 'line_number': 14}, {'str': 'func cos($num)', 'command': 'func', 'args_str': 'cos($num)', 'args': ['cos($num)'], 'file_path': '@math', 'line_number': 15}, {'str': "return py_load_module('math')->cos($num)", 'command': 'return', 'args_str': "py_load_module('math')->cos($num)", 'args': ["py_load_module('math')->cos($num)"], 'file_path': '@math', 'line_number': 16}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 17}, {'str': '@doc """    Converts angles from radians to degrees.    """', 'command': '@doc', 'args_str': '"""    Converts angles from radians to degrees.    """', 'args': ['"""', 'Converts', 'angles', 'from', 'radians', 'to', 'degrees.', '"""'], 'file_path': '@math', 'line_number': 18}, {'str': 'func degrees($num)', 'command': 'func', 'args_str': 'degrees($num)', 'args': ['degrees($num)'], 'file_path': '@math', 'line_number': 19}, {'str': "return py_load_module('math')->degrees($num)", 'command': 'return', 'args_str': "py_load_module('math')->degrees($num)", 'args': ["py_load_module('math')->degrees($num)"], 'file_path': '@math', 'line_number': 20}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 21}, {'str': '@doc """    Finds the factorial of a number.    """', 'command': '@doc', 'args_str': '"""    Finds the factorial of a number.    """', 'args': ['"""', 'Finds', 'the', 'factorial', 'of', 'a', 'number.', '"""'], 'file_path': '@math', 'line_number': 22}, {'str': 'func factorial($num)', 'command': 'func', 'args_str': 'factorial($num)', 'args': ['factorial($num)'], 'file_path': '@math', 'line_number': 23}, {'str': "return py_load_module('math')->factorial($num)", 'command': 'return', 'args_str': "py_load_module('math')->factorial($num)", 'args': ["py_load_module('math')->factorial($num)"], 'file_path': '@math', 'line_number': 24}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 25}, {'str': '@doc """    Rounds numbers down to the nearest integer.    """', 'command': '@doc', 'args_str': '"""    Rounds numbers down to the nearest integer.    """', 'args': ['"""', 'Rounds', 'numbers', 'down', 'to', 'the', 'nearest', 'integer.', '"""'], 'file_path': '@math', 'line_number': 26}, {'str': 'func floor($num)', 'command': 'func', 'args_str': 'floor($num)', 'args': ['floor($num)'], 'file_path': '@math', 'line_number': 27}, {'str': "return py_load_module('math')->floor($num)", 'command': 'return', 'args_str': "py_load_module('math')->floor($num)", 'args': ["py_load_module('math')->floor($num)"], 'file_path': '@math', 'line_number': 28}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 29}, {'str': "$pi = py_load_module('math')->pi", 'command': '$pi', 'args_str': "= py_load_module('math')->pi", 'args': ['=', "py_load_module('math')->pi"], 'file_path': '@math', 'line_number': 30}, {'str': '@doc """    Finds the value of x raised to the power of y.\\n    Example: math.pow(9, 3)    """', 'command': '@doc', 'args_str': '"""    Finds the value of x raised to the power of y.\\n    Example: math.pow(9, 3)    """', 'args': ['"""', 'Finds', 'the', 'value', 'of', 'x', 'raised', 'to', 'the', 'power', 'of', 'y.\\n', 'Example:', 'math.pow(9,', '3)', '"""'], 'file_path': '@math', 'line_number': 31}, {'str': 'func pow($num, $nextnum)', 'command': 'func', 'args_str': 'pow($num, $nextnum)', 'args': ['pow($num,', '$nextnum)'], 'file_path': '@math', 'line_number': 32}, {'str': "return py_load_module('math')->pow($num, self.get_var('nextnum'))", 'command': 'return', 'args_str': "py_load_module('math')->pow($num, self.get_var('nextnum'))", 'args': ["py_load_module('math')->pow($num,", "self.get_var('nextnum'))"], 'file_path': '@math', 'line_number': 33}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 34}, {'str': '@doc """    Finds the sine of a number.    """', 'command': '@doc', 'args_str': '"""    Finds the sine of a number.    """', 'args': ['"""', 'Finds', 'the', 'sine', 'of', 'a', 'number.', '"""'], 'file_path': '@math', 'line_number': 35}, {'str': 'func sin($num)', 'command': 'func', 'args_str': 'sin($num)', 'args': ['sin($num)'], 'file_path': '@math', 'line_number': 36}, {'str': "return py_load_module('math')->sin($num)", 'command': 'return', 'args_str': "py_load_module('math')->sin($num)", 'args': ["py_load_module('math')->sin($num)"], 'file_path': '@math', 'line_number': 37}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 38}, {'str': '@doc """    Finds the tangent of a number (angle).    """', 'command': '@doc', 'args_str': '"""    Finds the tangent of a number (angle).    """', 'args': ['"""', 'Finds', 'the', 'tangent', 'of', 'a', 'number', '(angle).', '"""'], 'file_path': '@math', 'line_number': 39}, {'str': 'func tan($num)', 'command': 'func', 'args_str': 'tan($num)', 'args': ['tan($num)'], 'file_path': '@math', 'line_number': 40}, {'str': "return py_load_module('math')->tan($num)", 'command': 'return', 'args_str': "py_load_module('math')->tan($num)", 'args': ["py_load_module('math')->tan($num)"], 'file_path': '@math', 'line_number': 41}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 42}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 43}]
modules["os"] = [{'str': 'namespace os', 'command': 'namespace', 'args_str': 'os', 'args': ['os'], 'file_path': '@os', 'line_number': 1}, {'str': "$env = py_load_module('os')->environ", 'command': '$env', 'args_str': "= py_load_module('os')->environ", 'args': ['=', "py_load_module('os')->environ"], 'file_path': '@os', 'line_number': 2}, {'str': '@doc """    Changes program working directory to new path.\\n    Gets path as string.    """', 'command': '@doc', 'args_str': '"""    Changes program working directory to new path.\\n    Gets path as string.    """', 'args': ['"""', 'Changes', 'program', 'working', 'directory', 'to', 'new', 'path.\\n', 'Gets', 'path', 'as', 'string.', '"""'], 'file_path': '@os', 'line_number': 3}, {'str': 'func chdir(string $dirpath)', 'command': 'func', 'args_str': 'chdir(string $dirpath)', 'args': ['chdir(string', '$dirpath)'], 'file_path': '@os', 'line_number': 4}, {'str': "py_load_module ('os')->chdir($dirpath)", 'command': 'py_load_module', 'args_str': "('os')->chdir($dirpath)", 'args': ["('os')->chdir($dirpath)"], 'file_path': '@os', 'line_number': 5}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 6}, {'str': '@doc """    Returns CPU count.    """', 'command': '@doc', 'args_str': '"""    Returns CPU count.    """', 'args': ['"""', 'Returns', 'CPU', 'count.', '"""'], 'file_path': '@os', 'line_number': 7}, {'str': 'func cpu_count()', 'command': 'func', 'args_str': 'cpu_count()', 'args': ['cpu_count()'], 'file_path': '@os', 'line_number': 8}, {'str': "return py_load_module('os')->cpu_count()", 'command': 'return', 'args_str': "py_load_module('os')->cpu_count()", 'args': ["py_load_module('os')->cpu_count()"], 'file_path': '@os', 'line_number': 9}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 10}, {'str': '@doc """    Makes a directory.\\n    Gets directory path as string.    """', 'command': '@doc', 'args_str': '"""    Makes a directory.\\n    Gets directory path as string.    """', 'args': ['"""', 'Makes', 'a', 'directory.\\n', 'Gets', 'directory', 'path', 'as', 'string.', '"""'], 'file_path': '@os', 'line_number': 11}, {'str': 'func mkdir(string $dirpath)', 'command': 'func', 'args_str': 'mkdir(string $dirpath)', 'args': ['mkdir(string', '$dirpath)'], 'file_path': '@os', 'line_number': 12}, {'str': "py_load_module ('os')->mkdir($dirpath)", 'command': 'py_load_module', 'args_str': "('os')->mkdir($dirpath)", 'args': ["('os')->mkdir($dirpath)"], 'file_path': '@os', 'line_number': 13}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 14}, {'str': "$curdir = py_load_module('os')->curdir", 'command': '$curdir', 'args_str': "= py_load_module('os')->curdir", 'args': ['=', "py_load_module('os')->curdir"], 'file_path': '@os', 'line_number': 15}, {'str': '@doc """    Kills a process.\\n    First argument is process ID as int.\\n    Second argument is the signal.    """', 'command': '@doc', 'args_str': '"""    Kills a process.\\n    First argument is process ID as int.\\n    Second argument is the signal.    """', 'args': ['"""', 'Kills', 'a', 'process.\\n', 'First', 'argument', 'is', 'process', 'ID', 'as', 'int.\\n', 'Second', 'argument', 'is', 'the', 'signal.', '"""'], 'file_path': '@os', 'line_number': 16}, {'str': 'func kill(int $pid, int $signal=1)', 'command': 'func', 'args_str': 'kill(int $pid, int $signal=1)', 'args': ['kill(int', '$pid,', 'int', '$signal=1)'], 'file_path': '@os', 'line_number': 17}, {'str': "return py_load_module('os')->kill($pid, $signal)", 'command': 'return', 'args_str': "py_load_module('os')->kill($pid, $signal)", 'args': ["py_load_module('os')->kill($pid,", '$signal)'], 'file_path': '@os', 'line_number': 18}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 19}, {'str': '@doc """    Removes a directory.\\n    Gets directory path as string.    """', 'command': '@doc', 'args_str': '"""    Removes a directory.\\n    Gets directory path as string.    """', 'args': ['"""', 'Removes', 'a', 'directory.\\n', 'Gets', 'directory', 'path', 'as', 'string.', '"""'], 'file_path': '@os', 'line_number': 20}, {'str': 'func rmdir(string $dirpath)', 'command': 'func', 'args_str': 'rmdir(string $dirpath)', 'args': ['rmdir(string', '$dirpath)'], 'file_path': '@os', 'line_number': 21}, {'str': "return py_load_module('os')->rmdir($dirpath)", 'command': 'return', 'args_str': "py_load_module('os')->rmdir($dirpath)", 'args': ["py_load_module('os')->rmdir($dirpath)"], 'file_path': '@os', 'line_number': 22}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 23}, {'str': "$osname = py_load_module('os')->name", 'command': '$osname', 'args_str': "= py_load_module('os')->name", 'args': ['=', "py_load_module('os')->name"], 'file_path': '@os', 'line_number': 24}, {'str': "$pardir = py_load_module('os')->path->pardir", 'command': '$pardir', 'args_str': "= py_load_module('os')->path->pardir", 'args': ['=', "py_load_module('os')->path->pardir"], 'file_path': '@os', 'line_number': 25}, {'str': '@doc """    Checks is a path directory.\\n    Gets path as string.\\n    Returns Boolean.\\n    """', 'command': '@doc', 'args_str': '"""    Checks is a path directory.\\n    Gets path as string.\\n    Returns Boolean.\\n    """', 'args': ['"""', 'Checks', 'is', 'a', 'path', 'directory.\\n', 'Gets', 'path', 'as', 'string.\\n', 'Returns', 'Boolean.\\n', '"""'], 'file_path': '@os', 'line_number': 26}, {'str': 'func bool::isdir(string $dirpath)', 'command': 'func', 'args_str': 'bool::isdir(string $dirpath)', 'args': ['bool::isdir(string', '$dirpath)'], 'file_path': '@os', 'line_number': 27}, {'str': "return py_load_module('os')->path->isdir($dirpath)", 'command': 'return', 'args_str': "py_load_module('os')->path->isdir($dirpath)", 'args': ["py_load_module('os')->path->isdir($dirpath)"], 'file_path': '@os', 'line_number': 28}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 29}, {'str': '@doc """    Checks is a path file.\\n    Gets path as string.\\n    Returns Boolean.\\n    """', 'command': '@doc', 'args_str': '"""    Checks is a path file.\\n    Gets path as string.\\n    Returns Boolean.\\n    """', 'args': ['"""', 'Checks', 'is', 'a', 'path', 'file.\\n', 'Gets', 'path', 'as', 'string.\\n', 'Returns', 'Boolean.\\n', '"""'], 'file_path': '@os', 'line_number': 30}, {'str': 'func bool::isfile(string $path)', 'command': 'func', 'args_str': 'bool::isfile(string $path)', 'args': ['bool::isfile(string', '$path)'], 'file_path': '@os', 'line_number': 31}, {'str': "return py_load_module('os')->path->isfile($path)", 'command': 'return', 'args_str': "py_load_module('os')->path->isfile($path)", 'args': ["py_load_module('os')->path->isfile($path)"], 'file_path': '@os', 'line_number': 32}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 33}, {'str': '@doc """    Checks a path exists.\\n    Gets path as string.\\n    Returns Boolean.    """', 'command': '@doc', 'args_str': '"""    Checks a path exists.\\n    Gets path as string.\\n    Returns Boolean.    """', 'args': ['"""', 'Checks', 'a', 'path', 'exists.\\n', 'Gets', 'path', 'as', 'string.\\n', 'Returns', 'Boolean.', '"""'], 'file_path': '@os', 'line_number': 34}, {'str': 'func bool::exists(string $path)', 'command': 'func', 'args_str': 'bool::exists(string $path)', 'args': ['bool::exists(string', '$path)'], 'file_path': '@os', 'line_number': 35}, {'str': "return py_load_module('os')->path->exists($path)", 'command': 'return', 'args_str': "py_load_module('os')->path->exists($path)", 'args': ["py_load_module('os')->path->exists($path)"], 'file_path': '@os', 'line_number': 36}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 37}, {'str': '@doc """    Returns program current working directory as string.    """', 'command': '@doc', 'args_str': '"""    Returns program current working directory as string.    """', 'args': ['"""', 'Returns', 'program', 'current', 'working', 'directory', 'as', 'string.', '"""'], 'file_path': '@os', 'line_number': 38}, {'str': 'func string::cwd()', 'command': 'func', 'args_str': 'string::cwd()', 'args': ['string::cwd()'], 'file_path': '@os', 'line_number': 39}, {'str': "return py_load_module('os')->getcwd()", 'command': 'return', 'args_str': "py_load_module('os')->getcwd()", 'args': ["py_load_module('os')->getcwd()"], 'file_path': '@os', 'line_number': 40}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 41}, {'str': 'endnamespace ', 'command': 'endnamespace', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 42}]
modules["pit"] = [{'str': 'namespace pit', 'command': 'namespace', 'args_str': 'pit', 'args': ['pit'], 'file_path': '@pit', 'line_number': 1}, {'str': 'func include(string $path, dict $htmldata={})', 'command': 'func', 'args_str': 'include(string $path, dict $htmldata={})', 'args': ['include(string', '$path,', 'dict', '$htmldata={})'], 'file_path': '@pit', 'line_number': 2}, {'str': 'run_file ($path, True, $htmldata)', 'command': 'run_file', 'args_str': '($path, True, $htmldata)', 'args': ['($path,', 'True,', '$htmldata)'], 'file_path': '@pit', 'line_number': 3}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 4}, {'str': 'func run_file(string $path, bool $realtime_run=true, dict $htmldata={})', 'command': 'func', 'args_str': 'run_file(string $path, bool $realtime_run=true, dict $htmldata={})', 'args': ['run_file(string', '$path,', 'bool', '$realtime_run=true,', 'dict', '$htmldata={})'], 'file_path': '@pit', 'line_number': 5}, {'str': "$f = fopen($path, 'r')", 'command': '$f', 'args_str': "= fopen($path, 'r')", 'args': ['=', 'fopen($path,', "'r')"], 'file_path': '@pit', 'line_number': 6}, {'str': '$content = $f->read()', 'command': '$content', 'args_str': '= $f->read()', 'args': ['=', '$f->read()'], 'file_path': '@pit', 'line_number': 7}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@pit', 'line_number': 8}, {'str': 'return run($content, $realtime_run, $path, $htmldata)', 'command': 'return', 'args_str': 'run($content, $realtime_run, $path, $htmldata)', 'args': ['run($content,', '$realtime_run,', '$path,', '$htmldata)'], 'file_path': '@pit', 'line_number': 9}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 10}, {'str': 'func run(string $content, bool $realtime_run=false, string $path=null, dict $htmldata={})', 'command': 'func', 'args_str': 'run(string $content, bool $realtime_run=false, string $path=null, dict $htmldata={})', 'args': ['run(string', '$content,', 'bool', '$realtime_run=false,', 'string', '$path=null,', 'dict', '$htmldata={})'], 'file_path': '@pit', 'line_number': 11}, {'str': '$__htmldir__ = $__dir__', 'command': '$__htmldir__', 'args_str': '= $__dir__', 'args': ['=', '$__dir__'], 'file_path': '@pit', 'line_number': 12}, {'str': "$__htmlfile__ = $__htmldir__ + '/-'", 'command': '$__htmlfile__', 'args_str': "= $__htmldir__ + '/-'", 'args': ['=', '$__htmldir__', '+', "'/-'"], 'file_path': '@pit', 'line_number': 13}, {'str': "$content = $content->split('\\n', 1)", 'command': '$content', 'args_str': "= $content->split('\\n', 1)", 'args': ['=', "$content->split('\\n',", '1)'], 'file_path': '@pit', 'line_number': 14}, {'str': 'if len($content) > 1', 'command': 'if', 'args_str': 'len($content) > 1', 'args': ['len($content)', '>', '1'], 'file_path': '@pit', 'line_number': 15}, {'str': 'mem not (len($content) > 1)', 'command': 'mem', 'args_str': 'not (len($content) > 1)', 'args': ['not', '(len($content)', '>', '1)'], 'file_path': '<system>', 'line_number': 14}, {'str': 'gotoif tmplabelif11_2', 'command': 'gotoif', 'args_str': 'tmplabelif11_2', 'args': ['tmplabelif11_2'], 'file_path': '<system>', 'line_number': 14}, {'str': "if $content[0]->startswith('#!/')", 'command': 'if', 'args_str': "$content[0]->startswith('#!/')", 'args': ["$content[0]->startswith('#!/')"], 'file_path': '@pit', 'line_number': 16}, {'str': "mem not ($content[0]->startswith('#!/'))", 'command': 'mem', 'args_str': "not ($content[0]->startswith('#!/'))", 'args': ['not', "($content[0]->startswith('#!/'))"], 'file_path': '<system>', 'line_number': 17}, {'str': 'gotoif tmplabelif12_2', 'command': 'gotoif', 'args_str': 'tmplabelif12_2', 'args': ['tmplabelif12_2'], 'file_path': '<system>', 'line_number': 17}, {'str': '$content = $content[1]', 'command': '$content', 'args_str': '= $content[1]', 'args': ['=', '$content[1]'], 'file_path': '@pit', 'line_number': 17}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 18}, {'str': 'goto tmplabelif12_end', 'command': 'goto', 'args_str': 'tmplabelif12_end', 'args': ['tmplabelif12_end'], 'file_path': '<system>', 'line_number': 21}, {'str': 'label tmplabelif12_2', 'command': 'label', 'args_str': 'tmplabelif12_2', 'args': ['tmplabelif12_2'], 'file_path': '<system>', 'line_number': 21}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 21}, {'str': 'gotoif tmplabelif12_3', 'command': 'gotoif', 'args_str': 'tmplabelif12_3', 'args': ['tmplabelif12_3'], 'file_path': '<system>', 'line_number': 21}, {'str': "$content = '\\n'->join($content)", 'command': '$content', 'args_str': "= '\\n'->join($content)", 'args': ['=', "'\\n'->join($content)"], 'file_path': '@pit', 'line_number': 19}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 20}, {'str': 'label tmplabelif12_3', 'command': 'label', 'args_str': 'tmplabelif12_3', 'args': ['tmplabelif12_3'], 'file_path': '<system>', 'line_number': 27}, {'str': 'label tmplabelif12_end', 'command': 'label', 'args_str': 'tmplabelif12_end', 'args': ['tmplabelif12_end'], 'file_path': '<system>', 'line_number': 27}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 21}, {'str': 'goto tmplabelif11_end', 'command': 'goto', 'args_str': 'tmplabelif11_end', 'args': ['tmplabelif11_end'], 'file_path': '<system>', 'line_number': 30}, {'str': 'label tmplabelif11_2', 'command': 'label', 'args_str': 'tmplabelif11_2', 'args': ['tmplabelif11_2'], 'file_path': '<system>', 'line_number': 30}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 30}, {'str': 'gotoif tmplabelif11_3', 'command': 'gotoif', 'args_str': 'tmplabelif11_3', 'args': ['tmplabelif11_3'], 'file_path': '<system>', 'line_number': 30}, {'str': '$content = $content[0]', 'command': '$content', 'args_str': '= $content[0]', 'args': ['=', '$content[0]'], 'file_path': '@pit', 'line_number': 22}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 23}, {'str': 'label tmplabelif11_3', 'command': 'label', 'args_str': 'tmplabelif11_3', 'args': ['tmplabelif11_3'], 'file_path': '<system>', 'line_number': 36}, {'str': 'label tmplabelif11_end', 'command': 'label', 'args_str': 'tmplabelif11_end', 'args': ['tmplabelif11_end'], 'file_path': '<system>', 'line_number': 36}, {'str': 'if $path != null', 'command': 'if', 'args_str': '$path != null', 'args': ['$path', '!=', 'null'], 'file_path': '@pit', 'line_number': 24}, {'str': 'mem not ($path != null)', 'command': 'mem', 'args_str': 'not ($path != null)', 'args': ['not', '($path', '!=', 'null)'], 'file_path': '<system>', 'line_number': 39}, {'str': 'gotoif tmplabelif13_2', 'command': 'gotoif', 'args_str': 'tmplabelif13_2', 'args': ['tmplabelif13_2'], 'file_path': '<system>', 'line_number': 39}, {'str': '$__htmlfile__ = os.path.abspath($path)', 'command': '$__htmlfile__', 'args_str': '= os.path.abspath($path)', 'args': ['=', 'os.path.abspath($path)'], 'file_path': '@pit', 'line_number': 25}, {'str': '$__htmldir__ = os.path.dirname($__htmlfile__)', 'command': '$__htmldir__', 'args_str': '= os.path.dirname($__htmlfile__)', 'args': ['=', 'os.path.dirname($__htmlfile__)'], 'file_path': '@pit', 'line_number': 26}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 27}, {'str': 'label tmplabelif13_2', 'command': 'label', 'args_str': 'tmplabelif13_2', 'args': ['tmplabelif13_2'], 'file_path': '<system>', 'line_number': 44}, {'str': 'label tmplabelif13_end', 'command': 'label', 'args_str': 'tmplabelif13_end', 'args': ['tmplabelif13_end'], 'file_path': '<system>', 'line_number': 44}, {'str': "$randstr_1 = '<<<therandomstringforpit' + str(time.time()) + str(random.random()) + '>>>'", 'command': '$randstr_1', 'args_str': "= '<<<therandomstringforpit' + str(time.time()) + str(random.random()) + '>>>'", 'args': ['=', "'<<<therandomstringforpit'", '+', 'str(time.time())', '+', 'str(random.random())', '+', "'>>>'"], 'file_path': '@pit', 'line_number': 28}, {'str': "$randstr_2 = '<<<therandomstringforpit' + str(time.time()) + str(random.random()) + '>>>'", 'command': '$randstr_2', 'args_str': "= '<<<therandomstringforpit' + str(time.time()) + str(random.random()) + '>>>'", 'args': ['=', "'<<<therandomstringforpit'", '+', 'str(time.time())', '+', 'str(random.random())', '+', "'>>>'"], 'file_path': '@pit', 'line_number': 29}, {'str': "$content = $content->replace('\\{', $randstr_1)", 'command': '$content', 'args_str': "= $content->replace('\\{', $randstr_1)", 'args': ['=', "$content->replace('\\{',", '$randstr_1)'], 'file_path': '@pit', 'line_number': 30}, {'str': "$content = $content->replace('\\}', $randstr_2)", 'command': '$content', 'args_str': "= $content->replace('\\}', $randstr_2)", 'args': ['=', "$content->replace('\\}',", '$randstr_2)'], 'file_path': '@pit', 'line_number': 31}, {'str': "$content = $content->replace('{{', '{=')", 'command': '$content', 'args_str': "= $content->replace('{{', '{=')", 'args': ['=', "$content->replace('{{',", "'{=')"], 'file_path': '@pit', 'line_number': 32}, {'str': "$content = $content->replace('}}', '}')", 'command': '$content', 'args_str': "= $content->replace('}}', '}')", 'args': ['=', "$content->replace('}}',", "'}')"], 'file_path': '@pit', 'line_number': 33}, {'str': "$parts = $content->split('{')", 'command': '$parts', 'args_str': "= $content->split('{')", 'args': ['=', "$content->split('{')"], 'file_path': '@pit', 'line_number': 34}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@pit', 'line_number': 35}, {'str': '$new_parts = []', 'command': '$new_parts', 'args_str': '= []', 'args': ['=', '[]'], 'file_path': '@pit', 'line_number': 36}, {'str': 'while $i < len($parts)', 'command': 'while', 'args_str': '$i < len($parts)', 'args': ['$i', '<', 'len($parts)'], 'file_path': '@pit', 'line_number': 37}, {'str': "$tmp = $parts[$i]->split('}', 1)", 'command': '$tmp', 'args_str': "= $parts[$i]->split('}', 1)", 'args': ['=', "$parts[$i]->split('}',", '1)'], 'file_path': '@pit', 'line_number': 38}, {'str': 'if len($tmp) > 1', 'command': 'if', 'args_str': 'len($tmp) > 1', 'args': ['len($tmp)', '>', '1'], 'file_path': '@pit', 'line_number': 39}, {'str': 'mem not (len($tmp) > 1)', 'command': 'mem', 'args_str': 'not (len($tmp) > 1)', 'args': ['not', '(len($tmp)', '>', '1)'], 'file_path': '<system>', 'line_number': 58}, {'str': 'gotoif tmplabelif14_2', 'command': 'gotoif', 'args_str': 'tmplabelif14_2', 'args': ['tmplabelif14_2'], 'file_path': '<system>', 'line_number': 58}, {'str': "$new_parts->append ([True, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'command': '$new_parts->append', 'args_str': "([True, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'args': ['([True,', '$tmp[0]->replace($randstr_1,', "'{')->replace($randstr_2,", "'}')])"], 'file_path': '@pit', 'line_number': 40}, {'str': "$new_parts->append ([False, $tmp[1]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'command': '$new_parts->append', 'args_str': "([False, $tmp[1]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'args': ['([False,', '$tmp[1]->replace($randstr_1,', "'{')->replace($randstr_2,", "'}')])"], 'file_path': '@pit', 'line_number': 41}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 42}, {'str': 'goto tmplabelif14_end', 'command': 'goto', 'args_str': 'tmplabelif14_end', 'args': ['tmplabelif14_end'], 'file_path': '<system>', 'line_number': 63}, {'str': 'label tmplabelif14_2', 'command': 'label', 'args_str': 'tmplabelif14_2', 'args': ['tmplabelif14_2'], 'file_path': '<system>', 'line_number': 63}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 63}, {'str': 'gotoif tmplabelif14_3', 'command': 'gotoif', 'args_str': 'tmplabelif14_3', 'args': ['tmplabelif14_3'], 'file_path': '<system>', 'line_number': 63}, {'str': "$new_parts->append ([False, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'command': '$new_parts->append', 'args_str': "([False, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'args': ['([False,', '$tmp[0]->replace($randstr_1,', "'{')->replace($randstr_2,", "'}')])"], 'file_path': '@pit', 'line_number': 43}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 44}, {'str': 'label tmplabelif14_3', 'command': 'label', 'args_str': 'tmplabelif14_3', 'args': ['tmplabelif14_3'], 'file_path': '<system>', 'line_number': 69}, {'str': 'label tmplabelif14_end', 'command': 'label', 'args_str': 'tmplabelif14_end', 'args': ['tmplabelif14_end'], 'file_path': '<system>', 'line_number': 69}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@pit', 'line_number': 45}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 46}, {'str': '$pit_i = 0', 'command': '$pit_i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@pit', 'line_number': 48}, {'str': '$pit_parts = $new_parts', 'command': '$pit_parts', 'args_str': '= $new_parts', 'args': ['=', '$new_parts'], 'file_path': '@pit', 'line_number': 49}, {'str': "$pit_code = ''", 'command': '$pit_code', 'args_str': "= ''", 'args': ['=', "''"], 'file_path': '@pit', 'line_number': 50}, {'str': "free ('i')", 'command': 'free', 'args_str': "('i')", 'args': ["('i')"], 'file_path': '@pit', 'line_number': 51}, {'str': "free ('new_parts')", 'command': 'free', 'args_str': "('new_parts')", 'args': ["('new_parts')"], 'file_path': '@pit', 'line_number': 52}, {'str': "free ('parts')", 'command': 'free', 'args_str': "('parts')", 'args': ["('parts')"], 'file_path': '@pit', 'line_number': 53}, {'str': "free ('content')", 'command': 'free', 'args_str': "('content')", 'args': ["('content')"], 'file_path': '@pit', 'line_number': 54}, {'str': "free ('randstr_1')", 'command': 'free', 'args_str': "('randstr_1')", 'args': ["('randstr_1')"], 'file_path': '@pit', 'line_number': 55}, {'str': "free ('randstr_2')", 'command': 'free', 'args_str': "('randstr_2')", 'args': ["('randstr_2')"], 'file_path': '@pit', 'line_number': 56}, {'str': "free ('tmp')", 'command': 'free', 'args_str': "('tmp')", 'args': ["('tmp')"], 'file_path': '@pit', 'line_number': 57}, {'str': 'while $pit_i < len($pit_parts)', 'command': 'while', 'args_str': '$pit_i < len($pit_parts)', 'args': ['$pit_i', '<', 'len($pit_parts)'], 'file_path': '@pit', 'line_number': 58}, {'str': 'if $pit_parts[$pit_i][0] == True', 'command': 'if', 'args_str': '$pit_parts[$pit_i][0] == True', 'args': ['$pit_parts[$pit_i][0]', '==', 'True'], 'file_path': '@pit', 'line_number': 59}, {'str': 'mem not ($pit_parts[$pit_i][0] == True)', 'command': 'mem', 'args_str': 'not ($pit_parts[$pit_i][0] == True)', 'args': ['not', '($pit_parts[$pit_i][0]', '==', 'True)'], 'file_path': '<system>', 'line_number': 85}, {'str': 'gotoif tmplabelif15_2', 'command': 'gotoif', 'args_str': 'tmplabelif15_2', 'args': ['tmplabelif15_2'], 'file_path': '<system>', 'line_number': 85}, {'str': 'if $pit_parts[$pit_i][1]', 'command': 'if', 'args_str': '$pit_parts[$pit_i][1]', 'args': ['$pit_parts[$pit_i][1]'], 'file_path': '@pit', 'line_number': 60}, {'str': 'mem not ($pit_parts[$pit_i][1])', 'command': 'mem', 'args_str': 'not ($pit_parts[$pit_i][1])', 'args': ['not', '($pit_parts[$pit_i][1])'], 'file_path': '<system>', 'line_number': 88}, {'str': 'gotoif tmplabelif16_2', 'command': 'gotoif', 'args_str': 'tmplabelif16_2', 'args': ['tmplabelif16_2'], 'file_path': '<system>', 'line_number': 88}, {'str': "if $pit_parts[$pit_i][1][0] == '='", 'command': 'if', 'args_str': "$pit_parts[$pit_i][1][0] == '='", 'args': ['$pit_parts[$pit_i][1][0]', '==', "'='"], 'file_path': '@pit', 'line_number': 61}, {'str': "mem not ($pit_parts[$pit_i][1][0] == '=')", 'command': 'mem', 'args_str': "not ($pit_parts[$pit_i][1][0] == '=')", 'args': ['not', '($pit_parts[$pit_i][1][0]', '==', "'=')"], 'file_path': '<system>', 'line_number': 91}, {'str': 'gotoif tmplabelif17_2', 'command': 'gotoif', 'args_str': 'tmplabelif17_2', 'args': ['tmplabelif17_2'], 'file_path': '<system>', 'line_number': 91}, {'str': "$pit_code = $pit_code + ('\\nprint(' + $pit_parts[$pit_i][1][1:] + ')')", 'command': '$pit_code', 'args_str': "= $pit_code + ('\\nprint(' + $pit_parts[$pit_i][1][1:] + ')')", 'args': ['=', '$pit_code', '+', "('\\nprint('", '+', '$pit_parts[$pit_i][1][1:]', '+', "')')"], 'file_path': '@pit', 'line_number': 62}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 63}, {'str': 'goto tmplabelif17_end', 'command': 'goto', 'args_str': 'tmplabelif17_end', 'args': ['tmplabelif17_end'], 'file_path': '<system>', 'line_number': 95}, {'str': 'label tmplabelif17_2', 'command': 'label', 'args_str': 'tmplabelif17_2', 'args': ['tmplabelif17_2'], 'file_path': '<system>', 'line_number': 95}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 95}, {'str': 'gotoif tmplabelif17_3', 'command': 'gotoif', 'args_str': 'tmplabelif17_3', 'args': ['tmplabelif17_3'], 'file_path': '<system>', 'line_number': 95}, {'str': "$pit_code = $pit_code + ('\\n' + $pit_parts[$pit_i][1])", 'command': '$pit_code', 'args_str': "= $pit_code + ('\\n' + $pit_parts[$pit_i][1])", 'args': ['=', '$pit_code', '+', "('\\n'", '+', '$pit_parts[$pit_i][1])'], 'file_path': '@pit', 'line_number': 64}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 65}, {'str': 'label tmplabelif17_3', 'command': 'label', 'args_str': 'tmplabelif17_3', 'args': ['tmplabelif17_3'], 'file_path': '<system>', 'line_number': 101}, {'str': 'label tmplabelif17_end', 'command': 'label', 'args_str': 'tmplabelif17_end', 'args': ['tmplabelif17_end'], 'file_path': '<system>', 'line_number': 101}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 66}, {'str': 'label tmplabelif16_2', 'command': 'label', 'args_str': 'tmplabelif16_2', 'args': ['tmplabelif16_2'], 'file_path': '<system>', 'line_number': 104}, {'str': 'label tmplabelif16_end', 'command': 'label', 'args_str': 'tmplabelif16_end', 'args': ['tmplabelif16_end'], 'file_path': '<system>', 'line_number': 104}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 67}, {'str': 'goto tmplabelif15_end', 'command': 'goto', 'args_str': 'tmplabelif15_end', 'args': ['tmplabelif15_end'], 'file_path': '<system>', 'line_number': 107}, {'str': 'label tmplabelif15_2', 'command': 'label', 'args_str': 'tmplabelif15_2', 'args': ['tmplabelif15_2'], 'file_path': '<system>', 'line_number': 107}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 107}, {'str': 'gotoif tmplabelif15_3', 'command': 'gotoif', 'args_str': 'tmplabelif15_3', 'args': ['tmplabelif15_3'], 'file_path': '<system>', 'line_number': 107}, {'str': '$pit_code = $pit_code + (\'\\nprint(base64.b64decode("\' + base64.b64encode($pit_parts[$pit_i][1]->encode())->decode() + \'")->decode())\')', 'command': '$pit_code', 'args_str': '= $pit_code + (\'\\nprint(base64.b64decode("\' + base64.b64encode($pit_parts[$pit_i][1]->encode())->decode() + \'")->decode())\')', 'args': ['=', '$pit_code', '+', '(\'\\nprint(base64.b64decode("\'', '+', 'base64.b64encode($pit_parts[$pit_i][1]->encode())->decode()', '+', '\'")->decode())\')'], 'file_path': '@pit', 'line_number': 68}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 69}, {'str': 'label tmplabelif15_3', 'command': 'label', 'args_str': 'tmplabelif15_3', 'args': ['tmplabelif15_3'], 'file_path': '<system>', 'line_number': 113}, {'str': 'label tmplabelif15_end', 'command': 'label', 'args_str': 'tmplabelif15_end', 'args': ['tmplabelif15_end'], 'file_path': '<system>', 'line_number': 113}, {'str': '$pit_i = $pit_i + 1', 'command': '$pit_i', 'args_str': '= $pit_i + 1', 'args': ['=', '$pit_i', '+', '1'], 'file_path': '@pit', 'line_number': 70}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 71}, {'str': "free ('pit_i')", 'command': 'free', 'args_str': "('pit_i')", 'args': ["('pit_i')"], 'file_path': '@pit', 'line_number': 72}, {'str': "free ('pit_parts')", 'command': 'free', 'args_str': "('pit_parts')", 'args': ["('pit_parts')"], 'file_path': '@pit', 'line_number': 73}, {'str': 'if $realtime_run', 'command': 'if', 'args_str': '$realtime_run', 'args': ['$realtime_run'], 'file_path': '@pit', 'line_number': 74}, {'str': 'mem not ($realtime_run)', 'command': 'mem', 'args_str': 'not ($realtime_run)', 'args': ['not', '($realtime_run)'], 'file_path': '<system>', 'line_number': 120}, {'str': 'gotoif tmplabelif18_2', 'command': 'gotoif', 'args_str': 'tmplabelif18_2', 'args': ['tmplabelif18_2'], 'file_path': '<system>', 'line_number': 120}, {'str': 'eval ($pit_code)', 'command': 'eval', 'args_str': '($pit_code)', 'args': ['($pit_code)'], 'file_path': '@pit', 'line_number': 75}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 76}, {'str': 'goto tmplabelif18_end', 'command': 'goto', 'args_str': 'tmplabelif18_end', 'args': ['tmplabelif18_end'], 'file_path': '<system>', 'line_number': 124}, {'str': 'label tmplabelif18_2', 'command': 'label', 'args_str': 'tmplabelif18_2', 'args': ['tmplabelif18_2'], 'file_path': '<system>', 'line_number': 124}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 124}, {'str': 'gotoif tmplabelif18_3', 'command': 'gotoif', 'args_str': 'tmplabelif18_3', 'args': ['tmplabelif18_3'], 'file_path': '<system>', 'line_number': 124}, {'str': 'out_start ()', 'command': 'out_start', 'args_str': '()', 'args': ['()'], 'file_path': '@pit', 'line_number': 77}, {'str': 'eval ($pit_code)', 'command': 'eval', 'args_str': '($pit_code)', 'args': ['($pit_code)'], 'file_path': '@pit', 'line_number': 78}, {'str': 'out_end ()', 'command': 'out_end', 'args_str': '()', 'args': ['()'], 'file_path': '@pit', 'line_number': 79}, {'str': 'return out_get_clean()', 'command': 'return', 'args_str': 'out_get_clean()', 'args': ['out_get_clean()'], 'file_path': '@pit', 'line_number': 80}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 81}, {'str': 'label tmplabelif18_3', 'command': 'label', 'args_str': 'tmplabelif18_3', 'args': ['tmplabelif18_3'], 'file_path': '<system>', 'line_number': 133}, {'str': 'label tmplabelif18_end', 'command': 'label', 'args_str': 'tmplabelif18_end', 'args': ['tmplabelif18_end'], 'file_path': '<system>', 'line_number': 133}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 82}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 83}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@pit', 'line_number': 84}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 138}, {'str': 'gotoif tmplabelif19_2', 'command': 'gotoif', 'args_str': 'tmplabelif19_2', 'args': ['tmplabelif19_2'], 'file_path': '<system>', 'line_number': 138}, {'str': 'if len($argv) > 1', 'command': 'if', 'args_str': 'len($argv) > 1', 'args': ['len($argv)', '>', '1'], 'file_path': '@pit', 'line_number': 85}, {'str': 'mem not (len($argv) > 1)', 'command': 'mem', 'args_str': 'not (len($argv) > 1)', 'args': ['not', '(len($argv)', '>', '1)'], 'file_path': '<system>', 'line_number': 141}, {'str': 'gotoif tmplabelif20_2', 'command': 'gotoif', 'args_str': 'tmplabelif20_2', 'args': ['tmplabelif20_2'], 'file_path': '<system>', 'line_number': 141}, {'str': 'pit.run_file ($argv[1], True)', 'command': 'pit.run_file', 'args_str': '($argv[1], True)', 'args': ['($argv[1],', 'True)'], 'file_path': '@pit', 'line_number': 86}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 87}, {'str': 'goto tmplabelif20_end', 'command': 'goto', 'args_str': 'tmplabelif20_end', 'args': ['tmplabelif20_end'], 'file_path': '<system>', 'line_number': 145}, {'str': 'label tmplabelif20_2', 'command': 'label', 'args_str': 'tmplabelif20_2', 'args': ['tmplabelif20_2'], 'file_path': '<system>', 'line_number': 145}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 145}, {'str': 'gotoif tmplabelif20_3', 'command': 'gotoif', 'args_str': 'tmplabelif20_3', 'args': ['tmplabelif20_3'], 'file_path': '<system>', 'line_number': 145}, {'str': "println ('pit: File name is required')", 'command': 'println', 'args_str': "('pit: File name is required')", 'args': ["('pit:", 'File', 'name', 'is', "required')"], 'file_path': '@pit', 'line_number': 88}, {'str': 'exit (1)', 'command': 'exit', 'args_str': '(1)', 'args': ['(1)'], 'file_path': '@pit', 'line_number': 89}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 90}, {'str': 'label tmplabelif20_3', 'command': 'label', 'args_str': 'tmplabelif20_3', 'args': ['tmplabelif20_3'], 'file_path': '<system>', 'line_number': 152}, {'str': 'label tmplabelif20_end', 'command': 'label', 'args_str': 'tmplabelif20_end', 'args': ['tmplabelif20_end'], 'file_path': '<system>', 'line_number': 152}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 91}, {'str': 'label tmplabelif19_2', 'command': 'label', 'args_str': 'tmplabelif19_2', 'args': ['tmplabelif19_2'], 'file_path': '<system>', 'line_number': 155}, {'str': 'label tmplabelif19_end', 'command': 'label', 'args_str': 'tmplabelif19_end', 'args': ['tmplabelif19_end'], 'file_path': '<system>', 'line_number': 155}]
modules["random"] = [{'str': 'namespace random', 'command': 'namespace', 'args_str': 'random', 'args': ['random'], 'file_path': '@random', 'line_number': 1}, {'str': '@doc """    Generates a random number between x and y.\\n    First and second arguments are x and y as number.    """', 'command': '@doc', 'args_str': '"""    Generates a random number between x and y.\\n    First and second arguments are x and y as number.    """', 'args': ['"""', 'Generates', 'a', 'random', 'number', 'between', 'x', 'and', 'y.\\n', 'First', 'and', 'second', 'arguments', 'are', 'x', 'and', 'y', 'as', 'number.', '"""'], 'file_path': '@random', 'line_number': 2}, {'str': 'func int::randint(int $a, int $b)', 'command': 'func', 'args_str': 'int::randint(int $a, int $b)', 'args': ['int::randint(int', '$a,', 'int', '$b)'], 'file_path': '@random', 'line_number': 3}, {'str': "return py_load_module('random')->randint($a, $b)", 'command': 'return', 'args_str': "py_load_module('random')->randint($a, $b)", 'args': ["py_load_module('random')->randint($a,", '$b)'], 'file_path': '@random', 'line_number': 4}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 5}, {'str': '@doc """    Initializes Random number generator.\\n    Gets seed as integer.    """', 'command': '@doc', 'args_str': '"""    Initializes Random number generator.\\n    Gets seed as integer.    """', 'args': ['"""', 'Initializes', 'Random', 'number', 'generator.\\n', 'Gets', 'seed', 'as', 'integer.', '"""'], 'file_path': '@random', 'line_number': 6}, {'str': 'func seed($a)', 'command': 'func', 'args_str': 'seed($a)', 'args': ['seed($a)'], 'file_path': '@random', 'line_number': 7}, {'str': "py_load_module ('random')->seed($a)", 'command': 'py_load_module', 'args_str': "('random')->seed($a)", 'args': ["('random')->seed($a)"], 'file_path': '@random', 'line_number': 8}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 9}, {'str': '@doc """    Returns the current internal state of the random number generator.    """', 'command': '@doc', 'args_str': '"""    Returns the current internal state of the random number generator.    """', 'args': ['"""', 'Returns', 'the', 'current', 'internal', 'state', 'of', 'the', 'random', 'number', 'generator.', '"""'], 'file_path': '@random', 'line_number': 10}, {'str': 'func getstate()', 'command': 'func', 'args_str': 'getstate()', 'args': ['getstate()'], 'file_path': '@random', 'line_number': 11}, {'str': "return py_load_module('random')->getstate()", 'command': 'return', 'args_str': "py_load_module('random')->getstate()", 'args': ["py_load_module('random')->getstate()"], 'file_path': '@random', 'line_number': 12}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 13}, {'str': 'func setstate($state)', 'command': 'func', 'args_str': 'setstate($state)', 'args': ['setstate($state)'], 'file_path': '@random', 'line_number': 14}, {'str': "py_load_module ('random')->setstate($state)", 'command': 'py_load_module', 'args_str': "('random')->setstate($state)", 'args': ["('random')->setstate($state)"], 'file_path': '@random', 'line_number': 15}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 16}, {'str': 'func getrandbits($a)', 'command': 'func', 'args_str': 'getrandbits($a)', 'args': ['getrandbits($a)'], 'file_path': '@random', 'line_number': 17}, {'str': "return py_load_module('random')->getrandbits($a)", 'command': 'return', 'args_str': "py_load_module('random')->getrandbits($a)", 'args': ["py_load_module('random')->getrandbits($a)"], 'file_path': '@random', 'line_number': 18}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 19}, {'str': 'func randrange($a, $b)', 'command': 'func', 'args_str': 'randrange($a, $b)', 'args': ['randrange($a,', '$b)'], 'file_path': '@random', 'line_number': 20}, {'str': "return py_load_module('random')->randrange($a, $b)", 'command': 'return', 'args_str': "py_load_module('random')->randrange($a, $b)", 'args': ["py_load_module('random')->randrange($a,", '$b)'], 'file_path': '@random', 'line_number': 21}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 22}, {'str': '@doc "Selects a random item in a list"', 'command': '@doc', 'args_str': '"Selects a random item in a list"', 'args': ['"Selects', 'a', 'random', 'item', 'in', 'a', 'list"'], 'file_path': '@random', 'line_number': 23}, {'str': 'func choice(list $list)', 'command': 'func', 'args_str': 'choice(list $list)', 'args': ['choice(list', '$list)'], 'file_path': '@random', 'line_number': 24}, {'str': '$index = randint(0, len($list)-1)', 'command': '$index', 'args_str': '= randint(0, len($list)-1)', 'args': ['=', 'randint(0,', 'len($list)-1)'], 'file_path': '@random', 'line_number': 25}, {'str': 'return $list[$index]', 'command': 'return', 'args_str': '$list[$index]', 'args': ['$list[$index]'], 'file_path': '@random', 'line_number': 26}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 27}, {'str': '@doc """    Generates a random float less that 1.    """', 'command': '@doc', 'args_str': '"""    Generates a random float less that 1.    """', 'args': ['"""', 'Generates', 'a', 'random', 'float', 'less', 'that', '1.', '"""'], 'file_path': '@random', 'line_number': 28}, {'str': 'func random()', 'command': 'func', 'args_str': 'random()', 'args': ['random()'], 'file_path': '@random', 'line_number': 29}, {'str': "return py_load_module('random')->random()", 'command': 'return', 'args_str': "py_load_module('random')->random()", 'args': ["py_load_module('random')->random()"], 'file_path': '@random', 'line_number': 30}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 31}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 32}]
modules["serve"] = [{'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@serve', 'line_number': 1}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 0}, {'str': 'gotoif tmplabelif21_2', 'command': 'gotoif', 'args_str': 'tmplabelif21_2', 'args': ['tmplabelif21_2'], 'file_path': '<system>', 'line_number': 0}, {'str': 'import_run "@web.server"', 'command': 'import_run', 'args_str': '"@web.server"', 'args': ['"@web.server"'], 'file_path': '@serve', 'line_number': 2}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@serve', 'line_number': 3}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 4}, {'str': 'label tmplabelif21_2', 'command': 'label', 'args_str': 'tmplabelif21_2', 'args': ['tmplabelif21_2'], 'file_path': '<system>', 'line_number': 5}, {'str': 'label tmplabelif21_end', 'command': 'label', 'args_str': 'tmplabelif21_end', 'args': ['tmplabelif21_end'], 'file_path': '<system>', 'line_number': 5}]
modules["shell"] = [{'str': 'import_once "@sys"', 'command': 'import_once', 'args_str': '"@sys"', 'args': ['"@sys"'], 'file_path': '@shell', 'line_number': 1}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@shell', 'line_number': 2}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 1}, {'str': 'gotoif tmplabelif22_2', 'command': 'gotoif', 'args_str': 'tmplabelif22_2', 'args': ['tmplabelif22_2'], 'file_path': '<system>', 'line_number': 1}, {'str': "define ('DEBUG', true)", 'command': 'define', 'args_str': "('DEBUG', true)", 'args': ["('DEBUG',", 'true)'], 'file_path': '@shell', 'line_number': 3}, {'str': "define ('DEBUG_HEADER_TITLE', 'Welcome to Pashmak ' + $sys.pashmakinfo['version'] + ' Interactive Shell')", 'command': 'define', 'args_str': "('DEBUG_HEADER_TITLE', 'Welcome to Pashmak ' + $sys.pashmakinfo['version'] + ' Interactive Shell')", 'args': ["('DEBUG_HEADER_TITLE',", "'Welcome", 'to', 'Pashmak', "'", '+', "$sys.pashmakinfo['version']", '+', "'", 'Interactive', "Shell')"], 'file_path': '@shell', 'line_number': 4}, {'str': 'debug ()', 'command': 'debug', 'args_str': '()', 'args': ['()'], 'file_path': '@shell', 'line_number': 5}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@shell', 'line_number': 6}, {'str': 'label tmplabelif22_2', 'command': 'label', 'args_str': 'tmplabelif22_2', 'args': ['tmplabelif22_2'], 'file_path': '<system>', 'line_number': 7}, {'str': 'label tmplabelif22_end', 'command': 'label', 'args_str': 'tmplabelif22_end', 'args': ['tmplabelif22_end'], 'file_path': '<system>', 'line_number': 7}]
modules["stdlib"] = [{'str': '@doc "Runs a python code from string"', 'command': '@doc', 'args_str': '"Runs a python code from string"', 'args': ['"Runs', 'a', 'python', 'code', 'from', 'string"'], 'file_path': '@stdlib', 'line_number': 1}, {'str': 'func python()', 'command': 'func', 'args_str': 'python()', 'args': ['python()'], 'file_path': '@stdlib', 'line_number': 2}, {'str': 'rmem exec(^)', 'command': 'rmem', 'args_str': 'exec(^)', 'args': ['exec(^)'], 'file_path': '@stdlib', 'line_number': 3}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 4}, {'str': '@doc """Imports a script or a module.\\nGets script/module name as string."""', 'command': '@doc', 'args_str': '"""Imports a script or a module.\\nGets script/module name as string."""', 'args': ['"""Imports', 'a', 'script', 'or', 'a', 'module.\\nGets', 'script/module', 'name', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 5}, {'str': 'func import()', 'command': 'func', 'args_str': 'import()', 'args': ['import()'], 'file_path': '@stdlib', 'line_number': 6}, {'str': 'mem self.import_script(^)', 'command': 'mem', 'args_str': 'self.import_script(^)', 'args': ['self.import_script(^)'], 'file_path': '@stdlib', 'line_number': 7}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 8}, {'str': '@doc """Is like `import()`, but checks if module or script already is imported, do not imports again.Gets module or script name as string."""', 'command': '@doc', 'args_str': '"""Is like `import()`, but checks if module or script already is imported, do not imports again.Gets module or script name as string."""', 'args': ['"""Is', 'like', '`import()`,', 'but', 'checks', 'if', 'module', 'or', 'script', 'already', 'is', 'imported,', 'do', 'not', 'imports', 'again.Gets', 'module', 'or', 'script', 'name', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 9}, {'str': 'func import_once()', 'command': 'func', 'args_str': 'import_once()', 'args': ['import_once()'], 'file_path': '@stdlib', 'line_number': 10}, {'str': 'mem self.import_script(^, True)', 'command': 'mem', 'args_str': 'self.import_script(^, True)', 'args': ['self.import_script(^,', 'True)'], 'file_path': '@stdlib', 'line_number': 11}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 12}, {'str': '@doc """Is like `import()`, But sets `$__ismain__` to `True` for module(run mode)."""', 'command': '@doc', 'args_str': '"""Is like `import()`, But sets `$__ismain__` to `True` for module(run mode)."""', 'args': ['"""Is', 'like', '`import()`,', 'But', 'sets', '`$__ismain__`', 'to', '`True`', 'for', 'module(run', 'mode)."""'], 'file_path': '@stdlib', 'line_number': 13}, {'str': 'func import_run()', 'command': 'func', 'args_str': 'import_run()', 'args': ['import_run()'], 'file_path': '@stdlib', 'line_number': 14}, {'str': 'mem self.import_script(^, False, ismain_default=True)', 'command': 'mem', 'args_str': 'self.import_script(^, False, ismain_default=True)', 'args': ['self.import_script(^,', 'False,', 'ismain_default=True)'], 'file_path': '@stdlib', 'line_number': 15}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 16}, {'str': '@doc """Is like `import_run` but checks script is already imported like `import_once`."""', 'command': '@doc', 'args_str': '"""Is like `import_run` but checks script is already imported like `import_once`."""', 'args': ['"""Is', 'like', '`import_run`', 'but', 'checks', 'script', 'is', 'already', 'imported', 'like', '`import_once`."""'], 'file_path': '@stdlib', 'line_number': 17}, {'str': 'func import_run_once()', 'command': 'func', 'args_str': 'import_run_once()', 'args': ['import_run_once()'], 'file_path': '@stdlib', 'line_number': 18}, {'str': 'mem self.import_script(^, True, ismain_default=True)', 'command': 'mem', 'args_str': 'self.import_script(^, True, ismain_default=True)', 'args': ['self.import_script(^,', 'True,', 'ismain_default=True)'], 'file_path': '@stdlib', 'line_number': 19}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 20}, {'str': '@doc """Gets a Pashmak code as string and runs that."""', 'command': '@doc', 'args_str': '"""Gets a Pashmak code as string and runs that."""', 'args': ['"""Gets', 'a', 'Pashmak', 'code', 'as', 'string', 'and', 'runs', 'that."""'], 'file_path': '@stdlib', 'line_number': 21}, {'str': 'func eval()', 'command': 'func', 'args_str': 'eval()', 'args': ['eval()'], 'file_path': '@stdlib', 'line_number': 22}, {'str': 'mem self.pashmak_eval(^)', 'command': 'mem', 'args_str': 'self.pashmak_eval(^)', 'args': ['self.pashmak_eval(^)'], 'file_path': '@stdlib', 'line_number': 23}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 24}, {'str': '@doc """Asserts a value, if it\'s not True, raises AssertError."""', 'command': '@doc', 'args_str': '"""Asserts a value, if it\'s not True, raises AssertError."""', 'args': ['"""Asserts', 'a', 'value,', 'if', "it's", 'not', 'True,', 'raises', 'AssertError."""'], 'file_path': '@stdlib', 'line_number': 25}, {'str': 'func assert($value)', 'command': 'func', 'args_str': 'assert($value)', 'args': ['assert($value)'], 'file_path': '@stdlib', 'line_number': 26}, {'str': 'if not $value', 'command': 'if', 'args_str': 'not $value', 'args': ['not', '$value'], 'file_path': '@stdlib', 'line_number': 27}, {'str': 'mem not (not $value)', 'command': 'mem', 'args_str': 'not (not $value)', 'args': ['not', '(not', '$value)'], 'file_path': '<system>', 'line_number': 26}, {'str': 'gotoif tmplabelif23_2', 'command': 'gotoif', 'args_str': 'tmplabelif23_2', 'args': ['tmplabelif23_2'], 'file_path': '<system>', 'line_number': 26}, {'str': "raise (Error('AssertError', 'asserting that false is true'))", 'command': 'raise', 'args_str': "(Error('AssertError', 'asserting that false is true'))", 'args': ["(Error('AssertError',", "'asserting", 'that', 'false', 'is', "true'))"], 'file_path': '@stdlib', 'line_number': 28}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 29}, {'str': 'label tmplabelif23_2', 'command': 'label', 'args_str': 'tmplabelif23_2', 'args': ['tmplabelif23_2'], 'file_path': '<system>', 'line_number': 30}, {'str': 'label tmplabelif23_end', 'command': 'label', 'args_str': 'tmplabelif23_end', 'args': ['tmplabelif23_end'], 'file_path': '<system>', 'line_number': 30}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 30}, {'str': '@doc """Sets a global variable.\\nGets variable name as first argument and value as second."""', 'command': '@doc', 'args_str': '"""Sets a global variable.\\nGets variable name as first argument and value as second."""', 'args': ['"""Sets', 'a', 'global', 'variable.\\nGets', 'variable', 'name', 'as', 'first', 'argument', 'and', 'value', 'as', 'second."""'], 'file_path': '@stdlib', 'line_number': 31}, {'str': 'func gset($name, $value=null)', 'command': 'func', 'args_str': 'gset($name, $value=null)', 'args': ['gset($name,', '$value=null)'], 'file_path': '@stdlib', 'line_number': 32}, {'str': 'python (\'self.frames[0]["vars"][\' + repr($name) + \'] = self.get_var("value")\')', 'command': 'python', 'args_str': '(\'self.frames[0]["vars"][\' + repr($name) + \'] = self.get_var("value")\')', 'args': ['(\'self.frames[0]["vars"][\'', '+', 'repr($name)', '+', "']", '=', 'self.get_var("value")\')'], 'file_path': '@stdlib', 'line_number': 33}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 34}, {'str': '@doc """Returns a global variable. Gets variable name as string."""', 'command': '@doc', 'args_str': '"""Returns a global variable. Gets variable name as string."""', 'args': ['"""Returns', 'a', 'global', 'variable.', 'Gets', 'variable', 'name', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 35}, {'str': 'func gget($name)', 'command': 'func', 'args_str': 'gget($name)', 'args': ['gget($name)'], 'file_path': '@stdlib', 'line_number': 36}, {'str': 'python (\'self.mem = self.frames[0]["vars"][\' + repr($name) + \']\')', 'command': 'python', 'args_str': '(\'self.mem = self.frames[0]["vars"][\' + repr($name) + \']\')', 'args': ["('self.mem", '=', 'self.frames[0]["vars"][\'', '+', 'repr($name)', '+', "']')"], 'file_path': '@stdlib', 'line_number': 37}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 38}, {'str': '@doc """Gets a object/variable and returns type of that."""', 'command': '@doc', 'args_str': '"""Gets a object/variable and returns type of that."""', 'args': ['"""Gets', 'a', 'object/variable', 'and', 'returns', 'type', 'of', 'that."""'], 'file_path': '@stdlib', 'line_number': 39}, {'str': 'func typeof(*$obj)', 'command': 'func', 'args_str': 'typeof(*$obj)', 'args': ['typeof(*$obj)'], 'file_path': '@stdlib', 'line_number': 40}, {'str': '$type = python("self.mem = type(self.get_var(\'obj\'))")', 'command': '$type', 'args_str': '= python("self.mem = type(self.get_var(\'obj\'))")', 'args': ['=', 'python("self.mem', '=', 'type(self.get_var(\'obj\'))")'], 'file_path': '@stdlib', 'line_number': 41}, {'str': 'if $type is ClassObject', 'command': 'if', 'args_str': '$type is ClassObject', 'args': ['$type', 'is', 'ClassObject'], 'file_path': '@stdlib', 'line_number': 42}, {'str': 'mem not ($type is ClassObject)', 'command': 'mem', 'args_str': 'not ($type is ClassObject)', 'args': ['not', '($type', 'is', 'ClassObject)'], 'file_path': '<system>', 'line_number': 45}, {'str': 'gotoif tmplabelif24_2', 'command': 'gotoif', 'args_str': 'tmplabelif24_2', 'args': ['tmplabelif24_2'], 'file_path': '<system>', 'line_number': 45}, {'str': '$type = $obj->__theclass__->__name__', 'command': '$type', 'args_str': '= $obj->__theclass__->__name__', 'args': ['=', '$obj->__theclass__->__name__'], 'file_path': '@stdlib', 'line_number': 43}, {'str': '$type = python(\'self.mem = self.classes[self.get_var("type")]\')', 'command': '$type', 'args_str': '= python(\'self.mem = self.classes[self.get_var("type")]\')', 'args': ['=', "python('self.mem", '=', 'self.classes[self.get_var("type")]\')'], 'file_path': '@stdlib', 'line_number': 44}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 45}, {'str': 'label tmplabelif24_2', 'command': 'label', 'args_str': 'tmplabelif24_2', 'args': ['tmplabelif24_2'], 'file_path': '<system>', 'line_number': 50}, {'str': 'label tmplabelif24_end', 'command': 'label', 'args_str': 'tmplabelif24_end', 'args': ['tmplabelif24_end'], 'file_path': '<system>', 'line_number': 50}, {'str': 'return $type', 'command': 'return', 'args_str': '$type', 'args': ['$type'], 'file_path': '@stdlib', 'line_number': 46}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 47}, {'str': '@doc """Runs a system shell command and returns exit code.\\nGets command as string and returns exit code as int."""', 'command': '@doc', 'args_str': '"""Runs a system shell command and returns exit code.\\nGets command as string and returns exit code as int."""', 'args': ['"""Runs', 'a', 'system', 'shell', 'command', 'and', 'returns', 'exit', 'code.\\nGets', 'command', 'as', 'string', 'and', 'returns', 'exit', 'code', 'as', 'int."""'], 'file_path': '@stdlib', 'line_number': 48}, {'str': 'func int::system(string $cmd)', 'command': 'func', 'args_str': 'int::system(string $cmd)', 'args': ['int::system(string', '$cmd)'], 'file_path': '@stdlib', 'line_number': 49}, {'str': "return py_load_module('os')->system($cmd)", 'command': 'return', 'args_str': "py_load_module('os')->system($cmd)", 'args': ["py_load_module('os')->system($cmd)"], 'file_path': '@stdlib', 'line_number': 50}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 51}, {'str': '@doc """Loads a python file script as a python module object.\\nGets script file path as string and returns loaded object."""', 'command': '@doc', 'args_str': '"""Loads a python file script as a python module object.\\nGets script file path as string and returns loaded object."""', 'args': ['"""Loads', 'a', 'python', 'file', 'script', 'as', 'a', 'python', 'module', 'object.\\nGets', 'script', 'file', 'path', 'as', 'string', 'and', 'returns', 'loaded', 'object."""'], 'file_path': '@stdlib', 'line_number': 52}, {'str': 'func py_load_file(string $path)', 'command': 'func', 'args_str': 'py_load_file(string $path)', 'args': ['py_load_file(string', '$path)'], 'file_path': '@stdlib', 'line_number': 53}, {'str': 'python ("import importlib.util; spec = importlib.util.spec_from_file_location(\'pyloadedfile\', self.get_var(\'path\')); m = importlib.util.module_from_spec(spec); spec.loader.exec_module(m); self.mem = m")', 'command': 'python', 'args_str': '("import importlib.util; spec = importlib.util.spec_from_file_location(\'pyloadedfile\', self.get_var(\'path\')); m = importlib.util.module_from_spec(spec); spec.loader.exec_module(m); self.mem = m")', 'args': ['("import', 'importlib.util;', 'spec', '=', "importlib.util.spec_from_file_location('pyloadedfile',", "self.get_var('path'));", 'm', '=', 'importlib.util.module_from_spec(spec);', 'spec.loader.exec_module(m);', 'self.mem', '=', 'm")'], 'file_path': '@stdlib', 'line_number': 54}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 55}, {'str': '@doc """Loads a Python standard module. Gets module name as string."""', 'command': '@doc', 'args_str': '"""Loads a Python standard module. Gets module name as string."""', 'args': ['"""Loads', 'a', 'Python', 'standard', 'module.', 'Gets', 'module', 'name', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 56}, {'str': 'func py_load_module(string $name)', 'command': 'func', 'args_str': 'py_load_module(string $name)', 'args': ['py_load_module(string', '$name)'], 'file_path': '@stdlib', 'line_number': 57}, {'str': 'return python("import " + $name + "; self.mem = " + $name)', 'command': 'return', 'args_str': 'python("import " + $name + "; self.mem = " + $name)', 'args': ['python("import', '"', '+', '$name', '+', '";', 'self.mem', '=', '"', '+', '$name)'], 'file_path': '@stdlib', 'line_number': 58}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 59}, {'str': '@doc """Returns current namespace as string."""', 'command': '@doc', 'args_str': '"""Returns current namespace as string."""', 'args': ['"""Returns', 'current', 'namespace', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 60}, {'str': 'func string::__namespace__()', 'command': 'func', 'args_str': 'string::__namespace__()', 'args': ['string::__namespace__()'], 'file_path': '@stdlib', 'line_number': 61}, {'str': 'return python("self.mem = self.current_namespace()")', 'command': 'return', 'args_str': 'python("self.mem = self.current_namespace()")', 'args': ['python("self.mem', '=', 'self.current_namespace()")'], 'file_path': '@stdlib', 'line_number': 62}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 63}, {'str': 'namespace pashmak', 'command': 'namespace', 'args_str': 'pashmak', 'args': ['pashmak'], 'file_path': '@stdlib', 'line_number': 64}, {'str': '@doc """    Prints zen of Pashmak.    """', 'command': '@doc', 'args_str': '"""    Prints zen of Pashmak.    """', 'args': ['"""', 'Prints', 'zen', 'of', 'Pashmak.', '"""'], 'file_path': '@stdlib', 'line_number': 65}, {'str': 'func zen()', 'command': 'func', 'args_str': 'zen()', 'args': ['zen()'], 'file_path': '@stdlib', 'line_number': 66}, {'str': 'println (\'Zen of Pashmak\\n\\nThe Zen of Pashmak is a collection of "guiding principles" for writing computer programs that influence the design of the Pashmak programming language. (Like zen of python). This fucking list is written by Mohammad Esmaeili.\\n\\n    Fucking syntax is better than beautiful syntax\\n    English is better than Finglish\\n    Lossless slow is better than loosing fast\\n    CatShit is better than DogShit\\n    DogShit is better than BullShit\\n    Chaos is better than peace\\n    Enthropy is better than order\\n    Crazy is better than logic\\n    Fun is better than boring\\n    Happy is better than sad\\n    Pashm is better than Hash\\n    While is better than Do-While\\n    Space is better than Tab\\n    Also tab is better than Space\\n    -> is better than .\\n    if-else is better than switch-case\')', 'command': 'println', 'args_str': '(\'Zen of Pashmak\\n\\nThe Zen of Pashmak is a collection of "guiding principles" for writing computer programs that influence the design of the Pashmak programming language. (Like zen of python). This fucking list is written by Mohammad Esmaeili.\\n\\n    Fucking syntax is better than beautiful syntax\\n    English is better than Finglish\\n    Lossless slow is better than loosing fast\\n    CatShit is better than DogShit\\n    DogShit is better than BullShit\\n    Chaos is better than peace\\n    Enthropy is better than order\\n    Crazy is better than logic\\n    Fun is better than boring\\n    Happy is better than sad\\n    Pashm is better than Hash\\n    While is better than Do-While\\n    Space is better than Tab\\n    Also tab is better than Space\\n    -> is better than .\\n    if-else is better than switch-case\')', 'args': ["('Zen", 'of', 'Pashmak\\n\\nThe', 'Zen', 'of', 'Pashmak', 'is', 'a', 'collection', 'of', '"guiding', 'principles"', 'for', 'writing', 'computer', 'programs', 'that', 'influence', 'the', 'design', 'of', 'the', 'Pashmak', 'programming', 'language.', '(Like', 'zen', 'of', 'python).', 'This', 'fucking', 'list', 'is', 'written', 'by', 'Mohammad', 'Esmaeili.\\n\\n', 'Fucking', 'syntax', 'is', 'better', 'than', 'beautiful', 'syntax\\n', 'English', 'is', 'better', 'than', 'Finglish\\n', 'Lossless', 'slow', 'is', 'better', 'than', 'loosing', 'fast\\n', 'CatShit', 'is', 'better', 'than', 'DogShit\\n', 'DogShit', 'is', 'better', 'than', 'BullShit\\n', 'Chaos', 'is', 'better', 'than', 'peace\\n', 'Enthropy', 'is', 'better', 'than', 'order\\n', 'Crazy', 'is', 'better', 'than', 'logic\\n', 'Fun', 'is', 'better', 'than', 'boring\\n', 'Happy', 'is', 'better', 'than', 'sad\\n', 'Pashm', 'is', 'better', 'than', 'Hash\\n', 'While', 'is', 'better', 'than', 'Do-While\\n', 'Space', 'is', 'better', 'than', 'Tab\\n', 'Also', 'tab', 'is', 'better', 'than', 'Space\\n', '->', 'is', 'better', 'than', '.\\n', 'if-else', 'is', 'better', 'than', "switch-case')"], 'file_path': '@stdlib', 'line_number': 67}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 68}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 69}, {'str': '@doc """Adds a function to shutdown event.\\nShutdown event functions will be run one by one in end of program.\\nGets function object as argument."""', 'command': '@doc', 'args_str': '"""Adds a function to shutdown event.\\nShutdown event functions will be run one by one in end of program.\\nGets function object as argument."""', 'args': ['"""Adds', 'a', 'function', 'to', 'shutdown', 'event.\\nShutdown', 'event', 'functions', 'will', 'be', 'run', 'one', 'by', 'one', 'in', 'end', 'of', 'program.\\nGets', 'function', 'object', 'as', 'argument."""'], 'file_path': '@stdlib', 'line_number': 70}, {'str': 'func register_shutdown($func)', 'command': 'func', 'args_str': 'register_shutdown($func)', 'args': ['register_shutdown($func)'], 'file_path': '@stdlib', 'line_number': 71}, {'str': 'python ("self.shutdown_event.append(self.get_var(\'func\'))")', 'command': 'python', 'args_str': '("self.shutdown_event.append(self.get_var(\'func\'))")', 'args': ['("self.shutdown_event.append(self.get_var(\'func\'))")'], 'file_path': '@stdlib', 'line_number': 72}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 73}, {'str': '@doc "Gets a value and a list from lists. Then, works like if,Example:\\nprintln match(\'hello\', [\\n\t[\'bye\', \'the bye\'],\\n\t[\'hello\', \'the hello\']\\n])\\n\\nOutput: `the hello`.\\n\\nAlso you can set default option. That will be returned when the passed value is not in the list (else). Default value is `None`.\\n\\nExample:\\nprintln match($value, $list, default=\'the default value\')"', 'command': '@doc', 'args_str': '"Gets a value and a list from lists. Then, works like if,Example:\\nprintln match(\'hello\', [\\n\t[\'bye\', \'the bye\'],\\n\t[\'hello\', \'the hello\']\\n])\\n\\nOutput: `the hello`.\\n\\nAlso you can set default option. That will be returned when the passed value is not in the list (else). Default value is `None`.\\n\\nExample:\\nprintln match($value, $list, default=\'the default value\')"', 'args': ['"Gets', 'a', 'value', 'and', 'a', 'list', 'from', 'lists.', 'Then,', 'works', 'like', 'if,Example:\\nprintln', "match('hello',", "[\\n\t['bye',", "'the", "bye'],\\n\t['hello',", "'the", "hello']\\n])\\n\\nOutput:", '`the', 'hello`.\\n\\nAlso', 'you', 'can', 'set', 'default', 'option.', 'That', 'will', 'be', 'returned', 'when', 'the', 'passed', 'value', 'is', 'not', 'in', 'the', 'list', '(else).', 'Default', 'value', 'is', '`None`.\\n\\nExample:\\nprintln', 'match($value,', '$list,', "default='the", 'default', 'value\')"'], 'file_path': '@stdlib', 'line_number': 74}, {'str': 'func match($value, array[array] $list, $default=null)', 'command': 'func', 'args_str': 'match($value, array[array] $list, $default=null)', 'args': ['match($value,', 'array[array]', '$list,', '$default=null)'], 'file_path': '@stdlib', 'line_number': 75}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@stdlib', 'line_number': 76}, {'str': 'while $i < len($list)', 'command': 'while', 'args_str': '$i < len($list)', 'args': ['$i', '<', 'len($list)'], 'file_path': '@stdlib', 'line_number': 77}, {'str': 'if $list[$i][0] == $value', 'command': 'if', 'args_str': '$list[$i][0] == $value', 'args': ['$list[$i][0]', '==', '$value'], 'file_path': '@stdlib', 'line_number': 78}, {'str': 'mem not ($list[$i][0] == $value)', 'command': 'mem', 'args_str': 'not ($list[$i][0] == $value)', 'args': ['not', '($list[$i][0]', '==', '$value)'], 'file_path': '<system>', 'line_number': 85}, {'str': 'gotoif tmplabelif25_2', 'command': 'gotoif', 'args_str': 'tmplabelif25_2', 'args': ['tmplabelif25_2'], 'file_path': '<system>', 'line_number': 85}, {'str': 'return $list[$i][1]', 'command': 'return', 'args_str': '$list[$i][1]', 'args': ['$list[$i][1]'], 'file_path': '@stdlib', 'line_number': 79}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 80}, {'str': 'label tmplabelif25_2', 'command': 'label', 'args_str': 'tmplabelif25_2', 'args': ['tmplabelif25_2'], 'file_path': '<system>', 'line_number': 89}, {'str': 'label tmplabelif25_end', 'command': 'label', 'args_str': 'tmplabelif25_end', 'args': ['tmplabelif25_end'], 'file_path': '<system>', 'line_number': 89}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@stdlib', 'line_number': 81}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 82}, {'str': 'return $default', 'command': 'return', 'args_str': '$default', 'args': ['$default'], 'file_path': '@stdlib', 'line_number': 83}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 84}, {'str': 'import "@stdlib.obj"', 'command': 'import', 'args_str': '"@stdlib.obj"', 'args': ['"@stdlib.obj"'], 'file_path': '@stdlib', 'line_number': 85}, {'str': 'import "@stdlib.io"', 'command': 'import', 'args_str': '"@stdlib.io"', 'args': ['"@stdlib.io"'], 'file_path': '@stdlib', 'line_number': 86}, {'str': 'import "@stdlib.func"', 'command': 'import', 'args_str': '"@stdlib.func"', 'args': ['"@stdlib.func"'], 'file_path': '@stdlib', 'line_number': 87}, {'str': 'import "@stdlib.class"', 'command': 'import', 'args_str': '"@stdlib.class"', 'args': ['"@stdlib.class"'], 'file_path': '@stdlib', 'line_number': 88}, {'str': 'import "@stdlib.defines"', 'command': 'import', 'args_str': '"@stdlib.defines"', 'args': ['"@stdlib.defines"'], 'file_path': '@stdlib', 'line_number': 89}, {'str': 'import "@stdlib.exception"', 'command': 'import', 'args_str': '"@stdlib.exception"', 'args': ['"@stdlib.exception"'], 'file_path': '@stdlib', 'line_number': 90}, {'str': 'import "@stdlib.debug"', 'command': 'import', 'args_str': '"@stdlib.debug"', 'args': ['"@stdlib.debug"'], 'file_path': '@stdlib', 'line_number': 91}, {'str': 'func fopen()', 'command': 'func', 'args_str': 'fopen()', 'args': ['fopen()'], 'file_path': '@stdlib', 'line_number': 92}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 92}, {'str': 'fopen = open', 'command': 'fopen', 'args_str': '= open', 'args': ['=', 'open'], 'file_path': '@stdlib', 'line_number': 93}]
modules["stdlib.class"] = [{'str': 'namespace class', 'command': 'namespace', 'args_str': 'class', 'args': ['class'], 'file_path': '@stdlib.class', 'line_number': 1}, {'str': '@doc """    Returns list of defined classes as list of strings(name of class).    """', 'command': '@doc', 'args_str': '"""    Returns list of defined classes as list of strings(name of class).    """', 'args': ['"""', 'Returns', 'list', 'of', 'defined', 'classes', 'as', 'list', 'of', 'strings(name', 'of', 'class).', '"""'], 'file_path': '@stdlib.class', 'line_number': 2}, {'str': 'func list()', 'command': 'func', 'args_str': 'list()', 'args': ['list()'], 'file_path': '@stdlib.class', 'line_number': 3}, {'str': 'return python("self.mem = list(self.classes.keys())")', 'command': 'return', 'args_str': 'python("self.mem = list(self.classes.keys())")', 'args': ['python("self.mem', '=', 'list(self.classes.keys())")'], 'file_path': '@stdlib.class', 'line_number': 4}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 5}, {'str': '@doc """    Checks a class exists.\\n    Gets class name as string.\\n    Returns boolean.    """', 'command': '@doc', 'args_str': '"""    Checks a class exists.\\n    Gets class name as string.\\n    Returns boolean.    """', 'args': ['"""', 'Checks', 'a', 'class', 'exists.\\n', 'Gets', 'class', 'name', 'as', 'string.\\n', 'Returns', 'boolean.', '"""'], 'file_path': '@stdlib.class', 'line_number': 6}, {'str': 'func bool::exists(string $name)', 'command': 'func', 'args_str': 'bool::exists(string $name)', 'args': ['bool::exists(string', '$name)'], 'file_path': '@stdlib.class', 'line_number': 7}, {'str': '$name = str($name)', 'command': '$name', 'args_str': '= str($name)', 'args': ['=', 'str($name)'], 'file_path': '@stdlib.class', 'line_number': 8}, {'str': 'return $name in class.list()', 'command': 'return', 'args_str': '$name in class.list()', 'args': ['$name', 'in', 'class.list()'], 'file_path': '@stdlib.class', 'line_number': 9}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 10}, {'str': '@doc """    Deletes a class.\\n    Gets class name as string.\\n    (This Cannot delete builtin classes).    """', 'command': '@doc', 'args_str': '"""    Deletes a class.\\n    Gets class name as string.\\n    (This Cannot delete builtin classes).    """', 'args': ['"""', 'Deletes', 'a', 'class.\\n', 'Gets', 'class', 'name', 'as', 'string.\\n', '(This', 'Cannot', 'delete', 'builtin', 'classes).', '"""'], 'file_path': '@stdlib.class', 'line_number': 11}, {'str': 'func delete(string $name)', 'command': 'func', 'args_str': 'delete(string $name)', 'args': ['delete(string', '$name)'], 'file_path': '@stdlib.class', 'line_number': 12}, {'str': '$name = str($name)', 'command': '$name', 'args_str': '= str($name)', 'args': ['=', 'str($name)'], 'file_path': '@stdlib.class', 'line_number': 13}, {'str': 'if not class.exists($name)', 'command': 'if', 'args_str': 'not class.exists($name)', 'args': ['not', 'class.exists($name)'], 'file_path': '@stdlib.class', 'line_number': 14}, {'str': 'mem not (not class.exists($name))', 'command': 'mem', 'args_str': 'not (not class.exists($name))', 'args': ['not', '(not', 'class.exists($name))'], 'file_path': '<system>', 'line_number': 13}, {'str': 'gotoif tmplabelif26_2', 'command': 'gotoif', 'args_str': 'tmplabelif26_2', 'args': ['tmplabelif26_2'], 'file_path': '<system>', 'line_number': 13}, {'str': 'raise (Error(\'ClassNotFound\', \'class "\' + $name + \'" not found\'))', 'command': 'raise', 'args_str': '(Error(\'ClassNotFound\', \'class "\' + $name + \'" not found\'))', 'args': ["(Error('ClassNotFound',", "'class", '"\'', '+', '$name', '+', '\'"', 'not', "found'))"], 'file_path': '@stdlib.class', 'line_number': 15}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 16}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 17}, {'str': 'label tmplabelif26_2', 'command': 'label', 'args_str': 'tmplabelif26_2', 'args': ['tmplabelif26_2'], 'file_path': '<system>', 'line_number': 18}, {'str': 'label tmplabelif26_end', 'command': 'label', 'args_str': 'tmplabelif26_end', 'args': ['tmplabelif26_end'], 'file_path': '<system>', 'line_number': 18}, {'str': "$undeletable_classes = ['Object', 'Error']", 'command': '$undeletable_classes', 'args_str': "= ['Object', 'Error']", 'args': ['=', "['Object',", "'Error']"], 'file_path': '@stdlib.class', 'line_number': 18}, {'str': 'if $name in $undeletable_classes', 'command': 'if', 'args_str': '$name in $undeletable_classes', 'args': ['$name', 'in', '$undeletable_classes'], 'file_path': '@stdlib.class', 'line_number': 19}, {'str': 'mem not ($name in $undeletable_classes)', 'command': 'mem', 'args_str': 'not ($name in $undeletable_classes)', 'args': ['not', '($name', 'in', '$undeletable_classes)'], 'file_path': '<system>', 'line_number': 22}, {'str': 'gotoif tmplabelif27_2', 'command': 'gotoif', 'args_str': 'tmplabelif27_2', 'args': ['tmplabelif27_2'], 'file_path': '<system>', 'line_number': 22}, {'str': 'raise (Error(\'ClassCannotBeDeleted\', \'class "\' + $name + \'" is a builtin class and cannot be deleted\'))', 'command': 'raise', 'args_str': '(Error(\'ClassCannotBeDeleted\', \'class "\' + $name + \'" is a builtin class and cannot be deleted\'))', 'args': ["(Error('ClassCannotBeDeleted',", "'class", '"\'', '+', '$name', '+', '\'"', 'is', 'a', 'builtin', 'class', 'and', 'cannot', 'be', "deleted'))"], 'file_path': '@stdlib.class', 'line_number': 20}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 21}, {'str': 'label tmplabelif27_2', 'command': 'label', 'args_str': 'tmplabelif27_2', 'args': ['tmplabelif27_2'], 'file_path': '<system>', 'line_number': 26}, {'str': 'label tmplabelif27_end', 'command': 'label', 'args_str': 'tmplabelif27_end', 'args': ['tmplabelif27_end'], 'file_path': '<system>', 'line_number': 26}, {'str': 'python ("del self.classes[self.get_var(\'name\')]")', 'command': 'python', 'args_str': '("del self.classes[self.get_var(\'name\')]")', 'args': ['("del', 'self.classes[self.get_var(\'name\')]")'], 'file_path': '@stdlib.class', 'line_number': 22}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 23}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 24}]
modules["stdlib.debug"] = [{'str': '@doc """Starts the debug shell. Gets a message as string"""', 'command': '@doc', 'args_str': '"""Starts the debug shell. Gets a message as string"""', 'args': ['"""Starts', 'the', 'debug', 'shell.', 'Gets', 'a', 'message', 'as', 'string"""'], 'file_path': '@stdlib.debug', 'line_number': 1}, {'str': 'func debug()', 'command': 'func', 'args_str': 'debug()', 'args': ['debug()'], 'file_path': '@stdlib.debug', 'line_number': 2}, {'str': '$tmp_pashmak_debug_message = str(^)', 'command': '$tmp_pashmak_debug_message', 'args_str': '= str(^)', 'args': ['=', 'str(^)'], 'file_path': '@stdlib.debug', 'line_number': 3}, {'str': "if not is_defined('DEBUG')", 'command': 'if', 'args_str': "not is_defined('DEBUG')", 'args': ['not', "is_defined('DEBUG')"], 'file_path': '@stdlib.debug', 'line_number': 4}, {'str': "mem not (not is_defined('DEBUG'))", 'command': 'mem', 'args_str': "not (not is_defined('DEBUG'))", 'args': ['not', '(not', "is_defined('DEBUG'))"], 'file_path': '<system>', 'line_number': 3}, {'str': 'gotoif tmplabelif28_2', 'command': 'gotoif', 'args_str': 'tmplabelif28_2', 'args': ['tmplabelif28_2'], 'file_path': '<system>', 'line_number': 3}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 5}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 6}, {'str': 'label tmplabelif28_2', 'command': 'label', 'args_str': 'tmplabelif28_2', 'args': ['tmplabelif28_2'], 'file_path': '<system>', 'line_number': 7}, {'str': 'label tmplabelif28_end', 'command': 'label', 'args_str': 'tmplabelif28_end', 'args': ['tmplabelif28_end'], 'file_path': '<system>', 'line_number': 7}, {'str': 'if not DEBUG', 'command': 'if', 'args_str': 'not DEBUG', 'args': ['not', 'DEBUG'], 'file_path': '@stdlib.debug', 'line_number': 7}, {'str': 'mem not (not DEBUG)', 'command': 'mem', 'args_str': 'not (not DEBUG)', 'args': ['not', '(not', 'DEBUG)'], 'file_path': '<system>', 'line_number': 10}, {'str': 'gotoif tmplabelif29_2', 'command': 'gotoif', 'args_str': 'tmplabelif29_2', 'args': ['tmplabelif29_2'], 'file_path': '<system>', 'line_number': 10}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 8}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 9}, {'str': 'label tmplabelif29_2', 'command': 'label', 'args_str': 'tmplabelif29_2', 'args': ['tmplabelif29_2'], 'file_path': '<system>', 'line_number': 14}, {'str': 'label tmplabelif29_end', 'command': 'label', 'args_str': 'tmplabelif29_end', 'args': ['tmplabelif29_end'], 'file_path': '<system>', 'line_number': 14}, {'str': "if is_defined('DEBUG_HEADER_TITLE')", 'command': 'if', 'args_str': "is_defined('DEBUG_HEADER_TITLE')", 'args': ["is_defined('DEBUG_HEADER_TITLE')"], 'file_path': '@stdlib.debug', 'line_number': 10}, {'str': "mem not (is_defined('DEBUG_HEADER_TITLE'))", 'command': 'mem', 'args_str': "not (is_defined('DEBUG_HEADER_TITLE'))", 'args': ['not', "(is_defined('DEBUG_HEADER_TITLE'))"], 'file_path': '<system>', 'line_number': 17}, {'str': 'gotoif tmplabelif30_2', 'command': 'gotoif', 'args_str': 'tmplabelif30_2', 'args': ['tmplabelif30_2'], 'file_path': '<system>', 'line_number': 17}, {'str': 'println DEBUG_HEADER_TITLE', 'command': 'println', 'args_str': 'DEBUG_HEADER_TITLE', 'args': ['DEBUG_HEADER_TITLE'], 'file_path': '@stdlib.debug', 'line_number': 11}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 12}, {'str': 'goto tmplabelif30_end', 'command': 'goto', 'args_str': 'tmplabelif30_end', 'args': ['tmplabelif30_end'], 'file_path': '<system>', 'line_number': 21}, {'str': 'label tmplabelif30_2', 'command': 'label', 'args_str': 'tmplabelif30_2', 'args': ['tmplabelif30_2'], 'file_path': '<system>', 'line_number': 21}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 21}, {'str': 'gotoif tmplabelif30_3', 'command': 'gotoif', 'args_str': 'tmplabelif30_3', 'args': ['tmplabelif30_3'], 'file_path': '<system>', 'line_number': 21}, {'str': 'println \'Debug started (\' + $tmp_pashmak_debug_message + \') at \' + python(\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\') + \':\' + str(python(\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\'))', 'command': 'println', 'args_str': '\'Debug started (\' + $tmp_pashmak_debug_message + \') at \' + python(\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\') + \':\' + str(python(\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\'))', 'args': ["'Debug", 'started', "('", '+', '$tmp_pashmak_debug_message', '+', "')", 'at', "'", '+', "python('self.mem", '=', 'self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\')', '+', "':'", '+', "str(python('self.mem", '=', 'self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\'))'], 'file_path': '@stdlib.debug', 'line_number': 13}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 14}, {'str': 'label tmplabelif30_3', 'command': 'label', 'args_str': 'tmplabelif30_3', 'args': ['tmplabelif30_3'], 'file_path': '<system>', 'line_number': 27}, {'str': 'label tmplabelif30_end', 'command': 'label', 'args_str': 'tmplabelif30_end', 'args': ['tmplabelif30_end'], 'file_path': '<system>', 'line_number': 27}, {'str': 'while true', 'command': 'while', 'args_str': 'true', 'args': ['true'], 'file_path': '@stdlib.debug', 'line_number': 15}, {'str': "$tmp_pashmak_debug_cmd = read('> ')->strip()", 'command': '$tmp_pashmak_debug_cmd', 'args_str': "= read('> ')->strip()", 'args': ['=', "read('>", "')->strip()"], 'file_path': '@stdlib.debug', 'line_number': 16}, {'str': "if $tmp_pashmak_debug_cmd == 'n'", 'command': 'if', 'args_str': "$tmp_pashmak_debug_cmd == 'n'", 'args': ['$tmp_pashmak_debug_cmd', '==', "'n'"], 'file_path': '@stdlib.debug', 'line_number': 17}, {'str': "mem not ($tmp_pashmak_debug_cmd == 'n')", 'command': 'mem', 'args_str': "not ($tmp_pashmak_debug_cmd == 'n')", 'args': ['not', '($tmp_pashmak_debug_cmd', '==', "'n')"], 'file_path': '<system>', 'line_number': 32}, {'str': 'gotoif tmplabelif31_2', 'command': 'gotoif', 'args_str': 'tmplabelif31_2', 'args': ['tmplabelif31_2'], 'file_path': '<system>', 'line_number': 32}, {'str': 'break ', 'command': 'break', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 18}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 19}, {'str': 'label tmplabelif31_2', 'command': 'label', 'args_str': 'tmplabelif31_2', 'args': ['tmplabelif31_2'], 'file_path': '<system>', 'line_number': 36}, {'str': 'label tmplabelif31_end', 'command': 'label', 'args_str': 'tmplabelif31_end', 'args': ['tmplabelif31_end'], 'file_path': '<system>', 'line_number': 36}, {'str': 'try tmp_pashmak_debug_error', 'command': 'try', 'args_str': 'tmp_pashmak_debug_error', 'args': ['tmp_pashmak_debug_error'], 'file_path': '@stdlib.debug', 'line_number': 20}, {'str': 'eval ($tmp_pashmak_debug_cmd)', 'command': 'eval', 'args_str': '($tmp_pashmak_debug_cmd)', 'args': ['($tmp_pashmak_debug_cmd)'], 'file_path': '@stdlib.debug', 'line_number': 21}, {'str': 'endtry ', 'command': 'endtry', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 22}, {'str': 'goto after_tmp_pashmak_debug_error', 'command': 'goto', 'args_str': 'after_tmp_pashmak_debug_error', 'args': ['after_tmp_pashmak_debug_error'], 'file_path': '@stdlib.debug', 'line_number': 23}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0}, {'str': 'label tmp_pashmak_debug_error', 'command': 'label', 'args_str': 'tmp_pashmak_debug_error', 'args': ['tmp_pashmak_debug_error'], 'file_path': '@stdlib.debug', 'line_number': 23}, {'str': '$tmp_pashmak_debug_ex = ^', 'command': '$tmp_pashmak_debug_ex', 'args_str': '= ^', 'args': ['=', '^'], 'file_path': '@stdlib.debug', 'line_number': 24}, {'str': "println $tmp_pashmak_debug_ex->type + ': ' + $tmp_pashmak_debug_ex->message", 'command': 'println', 'args_str': "$tmp_pashmak_debug_ex->type + ': ' + $tmp_pashmak_debug_ex->message", 'args': ['$tmp_pashmak_debug_ex->type', '+', "':", "'", '+', '$tmp_pashmak_debug_ex->message'], 'file_path': '@stdlib.debug', 'line_number': 25}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0}, {'str': 'label after_tmp_pashmak_debug_error', 'command': 'label', 'args_str': 'after_tmp_pashmak_debug_error', 'args': ['after_tmp_pashmak_debug_error'], 'file_path': '@stdlib.debug', 'line_number': 26}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 27}, {'str': "if not is_defined('DEBUG_HEADER_TITLE')", 'command': 'if', 'args_str': "not is_defined('DEBUG_HEADER_TITLE')", 'args': ['not', "is_defined('DEBUG_HEADER_TITLE')"], 'file_path': '@stdlib.debug', 'line_number': 28}, {'str': "mem not (not is_defined('DEBUG_HEADER_TITLE'))", 'command': 'mem', 'args_str': "not (not is_defined('DEBUG_HEADER_TITLE'))", 'args': ['not', '(not', "is_defined('DEBUG_HEADER_TITLE'))"], 'file_path': '<system>', 'line_number': 50}, {'str': 'gotoif tmplabelif32_2', 'command': 'gotoif', 'args_str': 'tmplabelif32_2', 'args': ['tmplabelif32_2'], 'file_path': '<system>', 'line_number': 50}, {'str': "println 'Debug finished.'", 'command': 'println', 'args_str': "'Debug finished.'", 'args': ["'Debug", "finished.'"], 'file_path': '@stdlib.debug', 'line_number': 29}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 30}, {'str': 'label tmplabelif32_2', 'command': 'label', 'args_str': 'tmplabelif32_2', 'args': ['tmplabelif32_2'], 'file_path': '<system>', 'line_number': 54}, {'str': 'label tmplabelif32_end', 'command': 'label', 'args_str': 'tmplabelif32_end', 'args': ['tmplabelif32_end'], 'file_path': '<system>', 'line_number': 54}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 31}]
modules["stdlib.defines"] = [{'str': '@doc "Defines a name. First argument is the name and second argument is the value"', 'command': '@doc', 'args_str': '"Defines a name. First argument is the name and second argument is the value"', 'args': ['"Defines', 'a', 'name.', 'First', 'argument', 'is', 'the', 'name', 'and', 'second', 'argument', 'is', 'the', 'value"'], 'file_path': '@stdlib.defines', 'line_number': 1}, {'str': 'func define(string $name, $value)', 'command': 'func', 'args_str': 'define(string $name, $value)', 'args': ['define(string', '$name,', '$value)'], 'file_path': '@stdlib.defines', 'line_number': 2}, {'str': 'if is_defined($name)', 'command': 'if', 'args_str': 'is_defined($name)', 'args': ['is_defined($name)'], 'file_path': '@stdlib.defines', 'line_number': 3}, {'str': 'mem not (is_defined($name))', 'command': 'mem', 'args_str': 'not (is_defined($name))', 'args': ['not', '(is_defined($name))'], 'file_path': '<system>', 'line_number': 2}, {'str': 'gotoif tmplabelif33_2', 'command': 'gotoif', 'args_str': 'tmplabelif33_2', 'args': ['tmplabelif33_2'], 'file_path': '<system>', 'line_number': 2}, {'str': 'raise Error(\'DefineError\', \'name "\' + $name + \'" already defined\')', 'command': 'raise', 'args_str': 'Error(\'DefineError\', \'name "\' + $name + \'" already defined\')', 'args': ["Error('DefineError',", "'name", '"\'', '+', '$name', '+', '\'"', 'already', "defined')"], 'file_path': '@stdlib.defines', 'line_number': 4}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 5}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 6}, {'str': 'label tmplabelif33_2', 'command': 'label', 'args_str': 'tmplabelif33_2', 'args': ['tmplabelif33_2'], 'file_path': '<system>', 'line_number': 7}, {'str': 'label tmplabelif33_end', 'command': 'label', 'args_str': 'tmplabelif33_end', 'args': ['tmplabelif33_end'], 'file_path': '<system>', 'line_number': 7}, {'str': 'python ("self.defines[self.get_var(\'name\')] = self.get_var(\'value\')")', 'command': 'python', 'args_str': '("self.defines[self.get_var(\'name\')] = self.get_var(\'value\')")', 'args': ['("self.defines[self.get_var(\'name\')]', '=', 'self.get_var(\'value\')")'], 'file_path': '@stdlib.defines', 'line_number': 7}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 8}, {'str': '@doc "Returns all of defined names as a dictionary"', 'command': '@doc', 'args_str': '"Returns all of defined names as a dictionary"', 'args': ['"Returns', 'all', 'of', 'defined', 'names', 'as', 'a', 'dictionary"'], 'file_path': '@stdlib.defines', 'line_number': 9}, {'str': 'func dict::all_defines()', 'command': 'func', 'args_str': 'dict::all_defines()', 'args': ['dict::all_defines()'], 'file_path': '@stdlib.defines', 'line_number': 10}, {'str': "return python('self.mem = self.defines')", 'command': 'return', 'args_str': "python('self.mem = self.defines')", 'args': ["python('self.mem", '=', "self.defines')"], 'file_path': '@stdlib.defines', 'line_number': 11}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 12}, {'str': '@doc "Gets a name and checks is defined and return boolean"', 'command': '@doc', 'args_str': '"Gets a name and checks is defined and return boolean"', 'args': ['"Gets', 'a', 'name', 'and', 'checks', 'is', 'defined', 'and', 'return', 'boolean"'], 'file_path': '@stdlib.defines', 'line_number': 13}, {'str': 'func bool::is_defined(string $name)', 'command': 'func', 'args_str': 'bool::is_defined(string $name)', 'args': ['bool::is_defined(string', '$name)'], 'file_path': '@stdlib.defines', 'line_number': 14}, {'str': 'return $name in list(all_defines()->keys())', 'command': 'return', 'args_str': '$name in list(all_defines()->keys())', 'args': ['$name', 'in', 'list(all_defines()->keys())'], 'file_path': '@stdlib.defines', 'line_number': 15}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 16}, {'str': '@doc "Deletes a defined name. Gets name as string"', 'command': '@doc', 'args_str': '"Deletes a defined name. Gets name as string"', 'args': ['"Deletes', 'a', 'defined', 'name.', 'Gets', 'name', 'as', 'string"'], 'file_path': '@stdlib.defines', 'line_number': 17}, {'str': 'func undefine(string $name)', 'command': 'func', 'args_str': 'undefine(string $name)', 'args': ['undefine(string', '$name)'], 'file_path': '@stdlib.defines', 'line_number': 18}, {'str': 'if not is_defined($name)', 'command': 'if', 'args_str': 'not is_defined($name)', 'args': ['not', 'is_defined($name)'], 'file_path': '@stdlib.defines', 'line_number': 19}, {'str': 'mem not (not is_defined($name))', 'command': 'mem', 'args_str': 'not (not is_defined($name))', 'args': ['not', '(not', 'is_defined($name))'], 'file_path': '<system>', 'line_number': 22}, {'str': 'gotoif tmplabelif34_2', 'command': 'gotoif', 'args_str': 'tmplabelif34_2', 'args': ['tmplabelif34_2'], 'file_path': '<system>', 'line_number': 22}, {'str': 'raise Error(\'DefineError\', \'name "\' + $name + \'" is not defined\')', 'command': 'raise', 'args_str': 'Error(\'DefineError\', \'name "\' + $name + \'" is not defined\')', 'args': ["Error('DefineError',", "'name", '"\'', '+', '$name', '+', '\'"', 'is', 'not', "defined')"], 'file_path': '@stdlib.defines', 'line_number': 20}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 21}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 22}, {'str': 'label tmplabelif34_2', 'command': 'label', 'args_str': 'tmplabelif34_2', 'args': ['tmplabelif34_2'], 'file_path': '<system>', 'line_number': 27}, {'str': 'label tmplabelif34_end', 'command': 'label', 'args_str': 'tmplabelif34_end', 'args': ['tmplabelif34_end'], 'file_path': '<system>', 'line_number': 27}, {'str': 'python ("del self.defines[self.get_var(\'name\')]")', 'command': 'python', 'args_str': '("del self.defines[self.get_var(\'name\')]")', 'args': ['("del', 'self.defines[self.get_var(\'name\')]")'], 'file_path': '@stdlib.defines', 'line_number': 23}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 24}, {'str': '@doc "Re-Defines a name. If name exists, undefines that and defines new value, and if name currently not exists, defines new name"', 'command': '@doc', 'args_str': '"Re-Defines a name. If name exists, undefines that and defines new value, and if name currently not exists, defines new name"', 'args': ['"Re-Defines', 'a', 'name.', 'If', 'name', 'exists,', 'undefines', 'that', 'and', 'defines', 'new', 'value,', 'and', 'if', 'name', 'currently', 'not', 'exists,', 'defines', 'new', 'name"'], 'file_path': '@stdlib.defines', 'line_number': 25}, {'str': 'func redefine(string $name, $value)', 'command': 'func', 'args_str': 'redefine(string $name, $value)', 'args': ['redefine(string', '$name,', '$value)'], 'file_path': '@stdlib.defines', 'line_number': 26}, {'str': 'if is_defined($name)', 'command': 'if', 'args_str': 'is_defined($name)', 'args': ['is_defined($name)'], 'file_path': '@stdlib.defines', 'line_number': 27}, {'str': 'mem not (is_defined($name))', 'command': 'mem', 'args_str': 'not (is_defined($name))', 'args': ['not', '(is_defined($name))'], 'file_path': '<system>', 'line_number': 34}, {'str': 'gotoif tmplabelif35_2', 'command': 'gotoif', 'args_str': 'tmplabelif35_2', 'args': ['tmplabelif35_2'], 'file_path': '<system>', 'line_number': 34}, {'str': 'undefine ($name)', 'command': 'undefine', 'args_str': '($name)', 'args': ['($name)'], 'file_path': '@stdlib.defines', 'line_number': 28}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 29}, {'str': 'label tmplabelif35_2', 'command': 'label', 'args_str': 'tmplabelif35_2', 'args': ['tmplabelif35_2'], 'file_path': '<system>', 'line_number': 38}, {'str': 'label tmplabelif35_end', 'command': 'label', 'args_str': 'tmplabelif35_end', 'args': ['tmplabelif35_end'], 'file_path': '<system>', 'line_number': 38}, {'str': 'define ($name, $value)', 'command': 'define', 'args_str': '($name, $value)', 'args': ['($name,', '$value)'], 'file_path': '@stdlib.defines', 'line_number': 30}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 31}]
modules["stdlib.exception"] = [{'str': '@doc """A model for error exceptions.\\nAlso is used by `raise` function.\\nExample: Error(\'ErrorType\', \'message of error\')"""', 'command': '@doc', 'args_str': '"""A model for error exceptions.\\nAlso is used by `raise` function.\\nExample: Error(\'ErrorType\', \'message of error\')"""', 'args': ['"""A', 'model', 'for', 'error', 'exceptions.\\nAlso', 'is', 'used', 'by', '`raise`', 'function.\\nExample:', "Error('ErrorType',", "'message", 'of', 'error\')"""'], 'file_path': '@stdlib.exception', 'line_number': 1}, {'str': 'class Error', 'command': 'class', 'args_str': 'Error', 'args': ['Error'], 'file_path': '@stdlib.exception', 'line_number': 2}, {'str': '$type ', 'command': '$type', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 3}, {'str': '$message ', 'command': '$message', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 4}, {'str': 'func __init__($type, $message)', 'command': 'func', 'args_str': '__init__($type, $message)', 'args': ['__init__($type,', '$message)'], 'file_path': '@stdlib.exception', 'line_number': 5}, {'str': '$this->type = $type', 'command': '$this->type', 'args_str': '= $type', 'args': ['=', '$type'], 'file_path': '@stdlib.exception', 'line_number': 6}, {'str': '$this->message = $message', 'command': '$this->message', 'args_str': '= $message', 'args': ['=', '$message'], 'file_path': '@stdlib.exception', 'line_number': 7}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 8}, {'str': 'func string::__str__()', 'command': 'func', 'args_str': 'string::__str__()', 'args': ['string::__str__()'], 'file_path': '@stdlib.exception', 'line_number': 9}, {'str': "return $this->type + ': ' + $this->message", 'command': 'return', 'args_str': "$this->type + ': ' + $this->message", 'args': ['$this->type', '+', "':", "'", '+', '$this->message'], 'file_path': '@stdlib.exception', 'line_number': 10}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 11}, {'str': 'endclass ', 'command': 'endclass', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 12}, {'str': '@doc """Raises a error.\\nGets a object from `Error` class as error."""', 'command': '@doc', 'args_str': '"""Raises a error.\\nGets a object from `Error` class as error."""', 'args': ['"""Raises', 'a', 'error.\\nGets', 'a', 'object', 'from', '`Error`', 'class', 'as', 'error."""'], 'file_path': '@stdlib.exception', 'line_number': 13}, {'str': 'func raise(Error $ex)', 'command': 'func', 'args_str': 'raise(Error $ex)', 'args': ['raise(Error', '$ex)'], 'file_path': '@stdlib.exception', 'line_number': 14}, {'str': 'python ("self.raise_error(\'" + str($ex->type) + "\', \'" + str($ex->message) + "\')")', 'command': 'python', 'args_str': '("self.raise_error(\'" + str($ex->type) + "\', \'" + str($ex->message) + "\')")', 'args': ['("self.raise_error(\'"', '+', 'str($ex->type)', '+', '"\',', '\'"', '+', 'str($ex->message)', '+', '"\')")'], 'file_path': '@stdlib.exception', 'line_number': 15}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 16}]
modules["stdlib.func"] = [{'str': 'namespace func', 'command': 'namespace', 'args_str': 'func', 'args': ['func'], 'file_path': '@stdlib.func', 'line_number': 1}, {'str': '@doc """    Returns list of defined functions as list of strings(name of function).    """', 'command': '@doc', 'args_str': '"""    Returns list of defined functions as list of strings(name of function).    """', 'args': ['"""', 'Returns', 'list', 'of', 'defined', 'functions', 'as', 'list', 'of', 'strings(name', 'of', 'function).', '"""'], 'file_path': '@stdlib.func', 'line_number': 2}, {'str': 'func list()', 'command': 'func', 'args_str': 'list()', 'args': ['list()'], 'file_path': '@stdlib.func', 'line_number': 3}, {'str': 'return python("self.mem = list(self.functions.keys())")', 'command': 'return', 'args_str': 'python("self.mem = list(self.functions.keys())")', 'args': ['python("self.mem', '=', 'list(self.functions.keys())")'], 'file_path': '@stdlib.func', 'line_number': 4}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 5}, {'str': '@doc """    Checks a function exists.\\n    Gets function name as string.\\n    Returns boolean.    """', 'command': '@doc', 'args_str': '"""    Checks a function exists.\\n    Gets function name as string.\\n    Returns boolean.    """', 'args': ['"""', 'Checks', 'a', 'function', 'exists.\\n', 'Gets', 'function', 'name', 'as', 'string.\\n', 'Returns', 'boolean.', '"""'], 'file_path': '@stdlib.func', 'line_number': 6}, {'str': 'func bool::exists(string $name)', 'command': 'func', 'args_str': 'bool::exists(string $name)', 'args': ['bool::exists(string', '$name)'], 'file_path': '@stdlib.func', 'line_number': 7}, {'str': '$name = str($name)', 'command': '$name', 'args_str': '= str($name)', 'args': ['=', 'str($name)'], 'file_path': '@stdlib.func', 'line_number': 8}, {'str': 'return $name in func.list()', 'command': 'return', 'args_str': '$name in func.list()', 'args': ['$name', 'in', 'func.list()'], 'file_path': '@stdlib.func', 'line_number': 9}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 10}, {'str': '@doc """    Deletes a function.\\n    Gets function name as string.\\n    (This Cannot delete builtin functions).    """', 'command': '@doc', 'args_str': '"""    Deletes a function.\\n    Gets function name as string.\\n    (This Cannot delete builtin functions).    """', 'args': ['"""', 'Deletes', 'a', 'function.\\n', 'Gets', 'function', 'name', 'as', 'string.\\n', '(This', 'Cannot', 'delete', 'builtin', 'functions).', '"""'], 'file_path': '@stdlib.func', 'line_number': 11}, {'str': 'func delete(string $name)', 'command': 'func', 'args_str': 'delete(string $name)', 'args': ['delete(string', '$name)'], 'file_path': '@stdlib.func', 'line_number': 12}, {'str': '$name = str($name)', 'command': '$name', 'args_str': '= str($name)', 'args': ['=', 'str($name)'], 'file_path': '@stdlib.func', 'line_number': 13}, {'str': 'if not func.exists($name)', 'command': 'if', 'args_str': 'not func.exists($name)', 'args': ['not', 'func.exists($name)'], 'file_path': '@stdlib.func', 'line_number': 14}, {'str': 'mem not (not func.exists($name))', 'command': 'mem', 'args_str': 'not (not func.exists($name))', 'args': ['not', '(not', 'func.exists($name))'], 'file_path': '<system>', 'line_number': 13}, {'str': 'gotoif tmplabelif36_2', 'command': 'gotoif', 'args_str': 'tmplabelif36_2', 'args': ['tmplabelif36_2'], 'file_path': '<system>', 'line_number': 13}, {'str': 'raise (Error(\'FunctionNotFound\', \'function "\' + $name + \'" not found\'))', 'command': 'raise', 'args_str': '(Error(\'FunctionNotFound\', \'function "\' + $name + \'" not found\'))', 'args': ["(Error('FunctionNotFound',", "'function", '"\'', '+', '$name', '+', '\'"', 'not', "found'))"], 'file_path': '@stdlib.func', 'line_number': 15}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 16}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 17}, {'str': 'label tmplabelif36_2', 'command': 'label', 'args_str': 'tmplabelif36_2', 'args': ['tmplabelif36_2'], 'file_path': '<system>', 'line_number': 18}, {'str': 'label tmplabelif36_end', 'command': 'label', 'args_str': 'tmplabelif36_end', 'args': ['tmplabelif36_end'], 'file_path': '<system>', 'line_number': 18}, {'str': "$undeletable_functions = ['func.list', 'func.delete', 'func.exists', 'gset', 'py_load_file', 'system', 'typeof', 'required', 'print', 'import', 'println', 'printl', 'import_once', 'mem', 'rmem', 'python', 'endns', 'exit', 'eval', 'raise', 'assert', 'read']", 'command': '$undeletable_functions', 'args_str': "= ['func.list', 'func.delete', 'func.exists', 'gset', 'py_load_file', 'system', 'typeof', 'required', 'print', 'import', 'println', 'printl', 'import_once', 'mem', 'rmem', 'python', 'endns', 'exit', 'eval', 'raise', 'assert', 'read']", 'args': ['=', "['func.list',", "'func.delete',", "'func.exists',", "'gset',", "'py_load_file',", "'system',", "'typeof',", "'required',", "'print',", "'import',", "'println',", "'printl',", "'import_once',", "'mem',", "'rmem',", "'python',", "'endns',", "'exit',", "'eval',", "'raise',", "'assert',", "'read']"], 'file_path': '@stdlib.func', 'line_number': 18}, {'str': 'if $name in $undeletable_functions', 'command': 'if', 'args_str': '$name in $undeletable_functions', 'args': ['$name', 'in', '$undeletable_functions'], 'file_path': '@stdlib.func', 'line_number': 19}, {'str': 'mem not ($name in $undeletable_functions)', 'command': 'mem', 'args_str': 'not ($name in $undeletable_functions)', 'args': ['not', '($name', 'in', '$undeletable_functions)'], 'file_path': '<system>', 'line_number': 22}, {'str': 'gotoif tmplabelif37_2', 'command': 'gotoif', 'args_str': 'tmplabelif37_2', 'args': ['tmplabelif37_2'], 'file_path': '<system>', 'line_number': 22}, {'str': 'raise (Error(\'FunctionCannotBeDeleted\', \'function "\' + $name + \'" is a builtin function and cannot be deleted\'))', 'command': 'raise', 'args_str': '(Error(\'FunctionCannotBeDeleted\', \'function "\' + $name + \'" is a builtin function and cannot be deleted\'))', 'args': ["(Error('FunctionCannotBeDeleted',", "'function", '"\'', '+', '$name', '+', '\'"', 'is', 'a', 'builtin', 'function', 'and', 'cannot', 'be', "deleted'))"], 'file_path': '@stdlib.func', 'line_number': 20}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 21}, {'str': 'label tmplabelif37_2', 'command': 'label', 'args_str': 'tmplabelif37_2', 'args': ['tmplabelif37_2'], 'file_path': '<system>', 'line_number': 26}, {'str': 'label tmplabelif37_end', 'command': 'label', 'args_str': 'tmplabelif37_end', 'args': ['tmplabelif37_end'], 'file_path': '<system>', 'line_number': 26}, {'str': 'python ("del self.functions[self.get_var(\'name\')]")', 'command': 'python', 'args_str': '("del self.functions[self.get_var(\'name\')]")', 'args': ['("del', 'self.functions[self.get_var(\'name\')]")'], 'file_path': '@stdlib.func', 'line_number': 22}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 23}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 24}]
modules["stdlib.io"] = [{'str': '@doc """Prints a object on stdout."""', 'command': '@doc', 'args_str': '"""Prints a object on stdout."""', 'args': ['"""Prints', 'a', 'object', 'on', 'stdout."""'], 'file_path': '@stdlib.io', 'line_number': 1}, {'str': 'func print(*$value)', 'command': 'func', 'args_str': 'print(*$value)', 'args': ['print(*$value)'], 'file_path': '@stdlib.io', 'line_number': 2}, {'str': 'mem self.print($value)', 'command': 'mem', 'args_str': 'self.print($value)', 'args': ['self.print($value)'], 'file_path': '@stdlib.io', 'line_number': 3}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 4}, {'str': '@doc """Prints a object on stdout and goes to next line."""', 'command': '@doc', 'args_str': '"""Prints a object on stdout and goes to next line."""', 'args': ['"""Prints', 'a', 'object', 'on', 'stdout', 'and', 'goes', 'to', 'next', 'line."""'], 'file_path': '@stdlib.io', 'line_number': 5}, {'str': 'func println(*$value)', 'command': 'func', 'args_str': 'println(*$value)', 'args': ['println(*$value)'], 'file_path': '@stdlib.io', 'line_number': 6}, {'str': 'print ($value)', 'command': 'print', 'args_str': '($value)', 'args': ['($value)'], 'file_path': '@stdlib.io', 'line_number': 7}, {'str': "print ('\\n')", 'command': 'print', 'args_str': "('\\n')", 'args': ["('\\n')"], 'file_path': '@stdlib.io', 'line_number': 8}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 9}, {'str': 'func printl(*$value)', 'command': 'func', 'args_str': 'printl(*$value)', 'args': ['printl(*$value)'], 'file_path': '@stdlib.io', 'line_number': 10}, {'str': 'println ($value)', 'command': 'println', 'args_str': '($value)', 'args': ['($value)'], 'file_path': '@stdlib.io', 'line_number': 11}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 12}, {'str': '@doc """Prints a object on stderr."""', 'command': '@doc', 'args_str': '"""Prints a object on stderr."""', 'args': ['"""Prints', 'a', 'object', 'on', 'stderr."""'], 'file_path': '@stdlib.io', 'line_number': 13}, {'str': 'func perror(*$value)', 'command': 'func', 'args_str': 'perror(*$value)', 'args': ['perror(*$value)'], 'file_path': '@stdlib.io', 'line_number': 14}, {'str': 'mem self.print($value, file=sys.stderr)', 'command': 'mem', 'args_str': 'self.print($value, file=sys.stderr)', 'args': ['self.print($value,', 'file=sys.stderr)'], 'file_path': '@stdlib.io', 'line_number': 15}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 16}, {'str': '@doc """Prints a object on a file.\\nFirst argument is the object that you want to print.\\nSecond argument is the file that you want to print on, but is optional. default is stdout file."""', 'command': '@doc', 'args_str': '"""Prints a object on a file.\\nFirst argument is the object that you want to print.\\nSecond argument is the file that you want to print on, but is optional. default is stdout file."""', 'args': ['"""Prints', 'a', 'object', 'on', 'a', 'file.\\nFirst', 'argument', 'is', 'the', 'object', 'that', 'you', 'want', 'to', 'print.\\nSecond', 'argument', 'is', 'the', 'file', 'that', 'you', 'want', 'to', 'print', 'on,', 'but', 'is', 'optional.', 'default', 'is', 'stdout', 'file."""'], 'file_path': '@stdlib.io', 'line_number': 17}, {'str': 'func printf($value, $file=null)', 'command': 'func', 'args_str': 'printf($value, $file=null)', 'args': ['printf($value,', '$file=null)'], 'file_path': '@stdlib.io', 'line_number': 18}, {'str': 'if $file is null', 'command': 'if', 'args_str': '$file is null', 'args': ['$file', 'is', 'null'], 'file_path': '@stdlib.io', 'line_number': 19}, {'str': 'mem not ($file is null)', 'command': 'mem', 'args_str': 'not ($file is null)', 'args': ['not', '($file', 'is', 'null)'], 'file_path': '<system>', 'line_number': 18}, {'str': 'gotoif tmplabelif38_2', 'command': 'gotoif', 'args_str': 'tmplabelif38_2', 'args': ['tmplabelif38_2'], 'file_path': '<system>', 'line_number': 18}, {'str': '$file = python("self.mem = sys.stdout")', 'command': '$file', 'args_str': '= python("self.mem = sys.stdout")', 'args': ['=', 'python("self.mem', '=', 'sys.stdout")'], 'file_path': '@stdlib.io', 'line_number': 20}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 21}, {'str': 'label tmplabelif38_2', 'command': 'label', 'args_str': 'tmplabelif38_2', 'args': ['tmplabelif38_2'], 'file_path': '<system>', 'line_number': 22}, {'str': 'label tmplabelif38_end', 'command': 'label', 'args_str': 'tmplabelif38_end', 'args': ['tmplabelif38_end'], 'file_path': '<system>', 'line_number': 22}, {'str': '$file->write (str($value))', 'command': '$file->write', 'args_str': '(str($value))', 'args': ['(str($value))'], 'file_path': '@stdlib.io', 'line_number': 22}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 23}, {'str': '@doc """Opens the output buffer."""', 'command': '@doc', 'args_str': '"""Opens the output buffer."""', 'args': ['"""Opens', 'the', 'output', 'buffer."""'], 'file_path': '@stdlib.io', 'line_number': 24}, {'str': 'func out_start()', 'command': 'func', 'args_str': 'out_start()', 'args': ['out_start()'], 'file_path': '@stdlib.io', 'line_number': 25}, {'str': 'python ("self.out_started = True")', 'command': 'python', 'args_str': '("self.out_started = True")', 'args': ['("self.out_started', '=', 'True")'], 'file_path': '@stdlib.io', 'line_number': 26}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 27}, {'str': '@doc """Closes the output buffer."""', 'command': '@doc', 'args_str': '"""Closes the output buffer."""', 'args': ['"""Closes', 'the', 'output', 'buffer."""'], 'file_path': '@stdlib.io', 'line_number': 28}, {'str': 'func out_end()', 'command': 'func', 'args_str': 'out_end()', 'args': ['out_end()'], 'file_path': '@stdlib.io', 'line_number': 29}, {'str': 'python ("self.out_started = False")', 'command': 'python', 'args_str': '("self.out_started = False")', 'args': ['("self.out_started', '=', 'False")'], 'file_path': '@stdlib.io', 'line_number': 30}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 31}, {'str': '@doc """Clears the output buffer."""', 'command': '@doc', 'args_str': '"""Clears the output buffer."""', 'args': ['"""Clears', 'the', 'output', 'buffer."""'], 'file_path': '@stdlib.io', 'line_number': 32}, {'str': 'func out_clean()', 'command': 'func', 'args_str': 'out_clean()', 'args': ['out_clean()'], 'file_path': '@stdlib.io', 'line_number': 33}, {'str': 'python ("self.out_content = \'\'")', 'command': 'python', 'args_str': '("self.out_content = \'\'")', 'args': ['("self.out_content', '=', '\'\'")'], 'file_path': '@stdlib.io', 'line_number': 34}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 35}, {'str': '@doc """Returns the output buffer as string."""', 'command': '@doc', 'args_str': '"""Returns the output buffer as string."""', 'args': ['"""Returns', 'the', 'output', 'buffer', 'as', 'string."""'], 'file_path': '@stdlib.io', 'line_number': 36}, {'str': 'func out_get()', 'command': 'func', 'args_str': 'out_get()', 'args': ['out_get()'], 'file_path': '@stdlib.io', 'line_number': 37}, {'str': 'python ("self.mem = self.out_content")', 'command': 'python', 'args_str': '("self.mem = self.out_content")', 'args': ['("self.mem', '=', 'self.out_content")'], 'file_path': '@stdlib.io', 'line_number': 38}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 39}, {'str': '@doc """Returns output buffer and clears that."""', 'command': '@doc', 'args_str': '"""Returns output buffer and clears that."""', 'args': ['"""Returns', 'output', 'buffer', 'and', 'clears', 'that."""'], 'file_path': '@stdlib.io', 'line_number': 40}, {'str': 'func out_get_clean()', 'command': 'func', 'args_str': 'out_get_clean()', 'args': ['out_get_clean()'], 'file_path': '@stdlib.io', 'line_number': 41}, {'str': '$content = out_get()', 'command': '$content', 'args_str': '= out_get()', 'args': ['=', 'out_get()'], 'file_path': '@stdlib.io', 'line_number': 42}, {'str': 'out_clean ()', 'command': 'out_clean', 'args_str': '()', 'args': ['()'], 'file_path': '@stdlib.io', 'line_number': 43}, {'str': 'return $content', 'command': 'return', 'args_str': '$content', 'args': ['$content'], 'file_path': '@stdlib.io', 'line_number': 44}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 45}, {'str': '@doc """Exits program.\\nThe argument is the exit code(is optional, default is 0)."""', 'command': '@doc', 'args_str': '"""Exits program.\\nThe argument is the exit code(is optional, default is 0)."""', 'args': ['"""Exits', 'program.\\nThe', 'argument', 'is', 'the', 'exit', 'code(is', 'optional,', 'default', 'is', '0)."""'], 'file_path': '@stdlib.io', 'line_number': 46}, {'str': 'func exit(int $code=0)', 'command': 'func', 'args_str': 'exit(int $code=0)', 'args': ['exit(int', '$code=0)'], 'file_path': '@stdlib.io', 'line_number': 47}, {'str': 'python ("self.exit_program(self.get_var(\'code\'))")', 'command': 'python', 'args_str': '("self.exit_program(self.get_var(\'code\'))")', 'args': ['("self.exit_program(self.get_var(\'code\'))")'], 'file_path': '@stdlib.io', 'line_number': 48}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 49}, {'str': '@doc """Reads a input from user from stdin."""', 'command': '@doc', 'args_str': '"""Reads a input from user from stdin."""', 'args': ['"""Reads', 'a', 'input', 'from', 'user', 'from', 'stdin."""'], 'file_path': '@stdlib.io', 'line_number': 50}, {'str': "func string::read(string $message='')", 'command': 'func', 'args_str': "string::read(string $message='')", 'args': ['string::read(string', "$message='')"], 'file_path': '@stdlib.io', 'line_number': 51}, {'str': 'print ($message)', 'command': 'print', 'args_str': '($message)', 'args': ['($message)'], 'file_path': '@stdlib.io', 'line_number': 52}, {'str': 'python ("self.io_read()")', 'command': 'python', 'args_str': '("self.io_read()")', 'args': ['("self.io_read()")'], 'file_path': '@stdlib.io', 'line_number': 53}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 54}, {'str': '@doc """Dumps a object."""', 'command': '@doc', 'args_str': '"""Dumps a object."""', 'args': ['"""Dumps', 'a', 'object."""'], 'file_path': '@stdlib.io', 'line_number': 55}, {'str': 'func var_dump($obj)', 'command': 'func', 'args_str': 'var_dump($obj)', 'args': ['var_dump($obj)'], 'file_path': '@stdlib.io', 'line_number': 56}, {'str': 'python ("class Tmp:\\n    def write(self, value):\\n        current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var(\'obj\'), Tmp())")', 'command': 'python', 'args_str': '("class Tmp:\\n    def write(self, value):\\n        current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var(\'obj\'), Tmp())")', 'args': ['("class', 'Tmp:\\n', 'def', 'write(self,', 'value):\\n', "current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var('obj'),", 'Tmp())")'], 'file_path': '@stdlib.io', 'line_number': 57}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 58}, {'str': '@doc """Prints something and exits program.\\nThe first argument is that thing you want to print(Optional,default is null).\\nThe second argument is exit code(is optional, default is 1)."""', 'command': '@doc', 'args_str': '"""Prints something and exits program.\\nThe first argument is that thing you want to print(Optional,default is null).\\nThe second argument is exit code(is optional, default is 1)."""', 'args': ['"""Prints', 'something', 'and', 'exits', 'program.\\nThe', 'first', 'argument', 'is', 'that', 'thing', 'you', 'want', 'to', 'print(Optional,default', 'is', 'null).\\nThe', 'second', 'argument', 'is', 'exit', 'code(is', 'optional,', 'default', 'is', '1)."""'], 'file_path': '@stdlib.io', 'line_number': 59}, {'str': "func die($message='', int $exit_code=1)", 'command': 'func', 'args_str': "die($message='', int $exit_code=1)", 'args': ["die($message='',", 'int', '$exit_code=1)'], 'file_path': '@stdlib.io', 'line_number': 60}, {'str': 'print ($message)', 'command': 'print', 'args_str': '($message)', 'args': ['($message)'], 'file_path': '@stdlib.io', 'line_number': 61}, {'str': 'exit ($exit_code)', 'command': 'exit', 'args_str': '($exit_code)', 'args': ['($exit_code)'], 'file_path': '@stdlib.io', 'line_number': 62}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 63}]
modules["stdlib.obj"] = [{'str': '@doc """Is parent of all of classes."""', 'command': '@doc', 'args_str': '"""Is parent of all of classes."""', 'args': ['"""Is', 'parent', 'of', 'all', 'of', 'classes."""'], 'file_path': '@stdlib.obj', 'line_number': 1}, {'str': 'class Object', 'command': 'class', 'args_str': 'Object', 'args': ['Object'], 'file_path': '@stdlib.obj', 'line_number': 2}, {'str': 'func __init__()', 'command': 'func', 'args_str': '__init__()', 'args': ['__init__()'], 'file_path': '@stdlib.obj', 'line_number': 3}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 4}, {'str': 'func string::__str__()', 'command': 'func', 'args_str': 'string::__str__()', 'args': ['string::__str__()'], 'file_path': '@stdlib.obj', 'line_number': 5}, {'str': 'return \'[PashmakObject name="\' + $this->__name__ + \'"]\'', 'command': 'return', 'args_str': '\'[PashmakObject name="\' + $this->__name__ + \'"]\'', 'args': ["'[PashmakObject", 'name="\'', '+', '$this->__name__', '+', '\'"]\''], 'file_path': '@stdlib.obj', 'line_number': 6}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 7}, {'str': '@doc """    Checks is this object instance of a class.\\n    Gets that class as argument(You can pass class name as string or class object).    """', 'command': '@doc', 'args_str': '"""    Checks is this object instance of a class.\\n    Gets that class as argument(You can pass class name as string or class object).    """', 'args': ['"""', 'Checks', 'is', 'this', 'object', 'instance', 'of', 'a', 'class.\\n', 'Gets', 'that', 'class', 'as', 'argument(You', 'can', 'pass', 'class', 'name', 'as', 'string', 'or', 'class', 'object).', '"""'], 'file_path': '@stdlib.obj', 'line_number': 8}, {'str': 'func bool::isinstanceof($class)', 'command': 'func', 'args_str': 'bool::isinstanceof($class)', 'args': ['bool::isinstanceof($class)'], 'file_path': '@stdlib.obj', 'line_number': 9}, {'str': 'if typeof($class) != str', 'command': 'if', 'args_str': 'typeof($class) != str', 'args': ['typeof($class)', '!=', 'str'], 'file_path': '@stdlib.obj', 'line_number': 10}, {'str': 'mem not (typeof($class) != str)', 'command': 'mem', 'args_str': 'not (typeof($class) != str)', 'args': ['not', '(typeof($class)', '!=', 'str)'], 'file_path': '<system>', 'line_number': 9}, {'str': 'gotoif tmplabelif39_2', 'command': 'gotoif', 'args_str': 'tmplabelif39_2', 'args': ['tmplabelif39_2'], 'file_path': '<system>', 'line_number': 9}, {'str': '$class = $class->__name__', 'command': '$class', 'args_str': '= $class->__name__', 'args': ['=', '$class->__name__'], 'file_path': '@stdlib.obj', 'line_number': 11}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 12}, {'str': 'label tmplabelif39_2', 'command': 'label', 'args_str': 'tmplabelif39_2', 'args': ['tmplabelif39_2'], 'file_path': '<system>', 'line_number': 13}, {'str': 'label tmplabelif39_end', 'command': 'label', 'args_str': 'tmplabelif39_end', 'args': ['tmplabelif39_end'], 'file_path': '<system>', 'line_number': 13}, {'str': 'return $class in $this->__inheritance_tree__', 'command': 'return', 'args_str': '$class in $this->__inheritance_tree__', 'args': ['$class', 'in', '$this->__inheritance_tree__'], 'file_path': '@stdlib.obj', 'line_number': 13}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 14}, {'str': 'endclass ', 'command': 'endclass', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 15}, {'str': '@doc "Returns value of a variable by name of variable as string"', 'command': '@doc', 'args_str': '"Returns value of a variable by name of variable as string"', 'args': ['"Returns', 'value', 'of', 'a', 'variable', 'by', 'name', 'of', 'variable', 'as', 'string"'], 'file_path': '@stdlib.obj', 'line_number': 16}, {'str': 'func get()', 'command': 'func', 'args_str': 'get()', 'args': ['get()'], 'file_path': '@stdlib.obj', 'line_number': 17}, {'str': 'return python("self.mem = self.get_var(" + repr(^) + ")")', 'command': 'return', 'args_str': 'python("self.mem = self.get_var(" + repr(^) + ")")', 'args': ['python("self.mem', '=', 'self.get_var("', '+', 'repr(^)', '+', '")")'], 'file_path': '@stdlib.obj', 'line_number': 18}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 19}, {'str': '@doc """Sets value of a variable by name of variable as first argument as stringAnd value as second argument"""', 'command': '@doc', 'args_str': '"""Sets value of a variable by name of variable as first argument as stringAnd value as second argument"""', 'args': ['"""Sets', 'value', 'of', 'a', 'variable', 'by', 'name', 'of', 'variable', 'as', 'first', 'argument', 'as', 'stringAnd', 'value', 'as', 'second', 'argument"""'], 'file_path': '@stdlib.obj', 'line_number': 20}, {'str': 'func set(string $name, $value=null)', 'command': 'func', 'args_str': 'set(string $name, $value=null)', 'args': ['set(string', '$name,', '$value=null)'], 'file_path': '@stdlib.obj', 'line_number': 21}, {'str': 'python ("self.frames[-3][\'vars\'][self.get_var(\'name\')] = self.get_var(\'value\')")', 'command': 'python', 'args_str': '("self.frames[-3][\'vars\'][self.get_var(\'name\')] = self.get_var(\'value\')")', 'args': ['("self.frames[-3][\'vars\'][self.get_var(\'name\')]', '=', 'self.get_var(\'value\')")'], 'file_path': '@stdlib.obj', 'line_number': 22}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 23}, {'str': 'func bool::isset()', 'command': 'func', 'args_str': 'bool::isset()', 'args': ['bool::isset()'], 'file_path': '@stdlib.obj', 'line_number': 24}, {'str': "return python('self.mem = self.variable_exists(' + repr(^) + ')')", 'command': 'return', 'args_str': "python('self.mem = self.variable_exists(' + repr(^) + ')')", 'args': ["python('self.mem", '=', "self.variable_exists('", '+', 'repr(^)', '+', "')')"], 'file_path': '@stdlib.obj', 'line_number': 25}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 26}, {'str': '@doc "Makes a copy from an object and returns the copy"', 'command': '@doc', 'args_str': '"Makes a copy from an object and returns the copy"', 'args': ['"Makes', 'a', 'copy', 'from', 'an', 'object', 'and', 'returns', 'the', 'copy"'], 'file_path': '@stdlib.obj', 'line_number': 27}, {'str': 'func clone($obj)', 'command': 'func', 'args_str': 'clone($obj)', 'args': ['clone($obj)'], 'file_path': '@stdlib.obj', 'line_number': 28}, {'str': 'return copy.deepcopy($obj)', 'command': 'return', 'args_str': 'copy.deepcopy($obj)', 'args': ['copy.deepcopy($obj)'], 'file_path': '@stdlib.obj', 'line_number': 29}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 30}]
modules["string"] = [{'str': 'ns string', 'command': 'ns', 'args_str': 'string', 'args': ['string'], 'file_path': '@string', 'line_number': 1}, {'str': 'func string::concat(string $a, string $b)', 'command': 'func', 'args_str': 'string::concat(string $a, string $b)', 'args': ['string::concat(string', '$a,', 'string', '$b)'], 'file_path': '@string', 'line_number': 2}, {'str': 'return $a + $b', 'command': 'return', 'args_str': '$a + $b', 'args': ['$a', '+', '$b'], 'file_path': '@string', 'line_number': 3}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 4}, {'str': 'func string::remove_last(string $str)', 'command': 'func', 'args_str': 'string::remove_last(string $str)', 'args': ['string::remove_last(string', '$str)'], 'file_path': '@string', 'line_number': 5}, {'str': 'return $str[:-1]', 'command': 'return', 'args_str': '$str[:-1]', 'args': ['$str[:-1]'], 'file_path': '@string', 'line_number': 6}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 7}, {'str': 'func string::remove_first(string $str)', 'command': 'func', 'args_str': 'string::remove_first(string $str)', 'args': ['string::remove_first(string', '$str)'], 'file_path': '@string', 'line_number': 8}, {'str': 'return $str[1:]', 'command': 'return', 'args_str': '$str[1:]', 'args': ['$str[1:]'], 'file_path': '@string', 'line_number': 9}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 10}, {'str': 'func string::add_last(string $str, string $new)', 'command': 'func', 'args_str': 'string::add_last(string $str, string $new)', 'args': ['string::add_last(string', '$str,', 'string', '$new)'], 'file_path': '@string', 'line_number': 11}, {'str': 'return $str + $new', 'command': 'return', 'args_str': '$str + $new', 'args': ['$str', '+', '$new'], 'file_path': '@string', 'line_number': 12}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 13}, {'str': 'func string::add_first(string $str, string $new)', 'command': 'func', 'args_str': 'string::add_first(string $str, string $new)', 'args': ['string::add_first(string', '$str,', 'string', '$new)'], 'file_path': '@string', 'line_number': 14}, {'str': 'return $new + $str', 'command': 'return', 'args_str': '$new + $str', 'args': ['$new', '+', '$str'], 'file_path': '@string', 'line_number': 15}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 16}, {'str': 'func int::length(string $str)', 'command': 'func', 'args_str': 'int::length(string $str)', 'args': ['int::length(string', '$str)'], 'file_path': '@string', 'line_number': 17}, {'str': 'return len($str)', 'command': 'return', 'args_str': 'len($str)', 'args': ['len($str)'], 'file_path': '@string', 'line_number': 18}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 19}, {'str': 'func string::cut(string $str, int $a, int $b)', 'command': 'func', 'args_str': 'string::cut(string $str, int $a, int $b)', 'args': ['string::cut(string', '$str,', 'int', '$a,', 'int', '$b)'], 'file_path': '@string', 'line_number': 20}, {'str': 'return $str[$a:$b]', 'command': 'return', 'args_str': '$str[$a:$b]', 'args': ['$str[$a:$b]'], 'file_path': '@string', 'line_number': 21}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 22}, {'str': 'func string::upcase(string $str)', 'command': 'func', 'args_str': 'string::upcase(string $str)', 'args': ['string::upcase(string', '$str)'], 'file_path': '@string', 'line_number': 23}, {'str': 'return $str->upper()', 'command': 'return', 'args_str': '$str->upper()', 'args': ['$str->upper()'], 'file_path': '@string', 'line_number': 24}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 25}, {'str': 'func string::lowcase(string $str)', 'command': 'func', 'args_str': 'string::lowcase(string $str)', 'args': ['string::lowcase(string', '$str)'], 'file_path': '@string', 'line_number': 26}, {'str': 'return $str->lower()', 'command': 'return', 'args_str': '$str->lower()', 'args': ['$str->lower()'], 'file_path': '@string', 'line_number': 27}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 28}, {'str': 'func string::reverse(string $str)', 'command': 'func', 'args_str': 'string::reverse(string $str)', 'args': ['string::reverse(string', '$str)'], 'file_path': '@string', 'line_number': 29}, {'str': 'return $str[::-1]', 'command': 'return', 'args_str': '$str[::-1]', 'args': ['$str[::-1]'], 'file_path': '@string', 'line_number': 30}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 31}, {'str': 'func string::to_str($var)', 'command': 'func', 'args_str': 'string::to_str($var)', 'args': ['string::to_str($var)'], 'file_path': '@string', 'line_number': 32}, {'str': 'return repr($var)', 'command': 'return', 'args_str': 'repr($var)', 'args': ['repr($var)'], 'file_path': '@string', 'line_number': 33}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 34}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 35}]
modules["sys"] = [{'str': 'import "@sys.path"', 'command': 'import', 'args_str': '"@sys.path"', 'args': ['"@sys.path"'], 'file_path': '@sys', 'line_number': 1}, {'str': 'namespace sys', 'command': 'namespace', 'args_str': 'sys', 'args': ['sys'], 'file_path': '@sys', 'line_number': 2}, {'str': '$pashmakinfo = {"version": version.version, "pythoninfo": sys.version.replace("\\\\n", "")}', 'command': '$pashmakinfo', 'args_str': '= {"version": version.version, "pythoninfo": sys.version.replace("\\\\n", "")}', 'args': ['=', '{"version":', 'version.version,', '"pythoninfo":', 'sys.version.replace("\\\\n",', '"")}'], 'file_path': '@sys', 'line_number': 3}, {'str': '$pashmakexe = sys.argv[0]', 'command': '$pashmakexe', 'args_str': '= sys.argv[0]', 'args': ['=', 'sys.argv[0]'], 'file_path': '@sys', 'line_number': 4}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@sys', 'line_number': 5}]
modules["sys.path"] = [{'str': 'namespace sys', 'command': 'namespace', 'args_str': 'sys', 'args': ['sys'], 'file_path': '@sys.path', 'line_number': 1}, {'str': 'namespace path', 'command': 'namespace', 'args_str': 'path', 'args': ['path'], 'file_path': '@sys.path', 'line_number': 2}, {'str': '@doc """        Adds a new path to pashmakpath.\\n        Gets new path as string.        """', 'command': '@doc', 'args_str': '"""        Adds a new path to pashmakpath.\\n        Gets new path as string.        """', 'args': ['"""', 'Adds', 'a', 'new', 'path', 'to', 'pashmakpath.\\n', 'Gets', 'new', 'path', 'as', 'string.', '"""'], 'file_path': '@sys.path', 'line_number': 3}, {'str': 'func add(string $path)', 'command': 'func', 'args_str': 'add(string $path)', 'args': ['add(string', '$path)'], 'file_path': '@sys.path', 'line_number': 4}, {'str': 'python (\'os.environ["PASHMAKPATH"] += ":\' + str($path) + \':"\')', 'command': 'python', 'args_str': '(\'os.environ["PASHMAKPATH"] += ":\' + str($path) + \':"\')', 'args': ['(\'os.environ["PASHMAKPATH"]', '+=', '":\'', '+', 'str($path)', '+', '\':"\')'], 'file_path': '@sys.path', 'line_number': 5}, {'str': 'python ("self.bootstrap_modules()")', 'command': 'python', 'args_str': '("self.bootstrap_modules()")', 'args': ['("self.bootstrap_modules()")'], 'file_path': '@sys.path', 'line_number': 6}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@sys.path', 'line_number': 7}, {'str': '@doc """        Returns pashmakpath as list of strings.        """', 'command': '@doc', 'args_str': '"""        Returns pashmakpath as list of strings.        """', 'args': ['"""', 'Returns', 'pashmakpath', 'as', 'list', 'of', 'strings.', '"""'], 'file_path': '@sys.path', 'line_number': 8}, {'str': 'func array[string]::list()', 'command': 'func', 'args_str': 'array[string]::list()', 'args': ['array[string]::list()'], 'file_path': '@sys.path', 'line_number': 9}, {'str': "$paths_list = py_load_module('os')->environ['PASHMAKPATH']->strip()->split(':')", 'command': '$paths_list', 'args_str': "= py_load_module('os')->environ['PASHMAKPATH']->strip()->split(':')", 'args': ['=', "py_load_module('os')->environ['PASHMAKPATH']->strip()->split(':')"], 'file_path': '@sys.path', 'line_number': 10}, {'str': "$paths_list = [item.strip() for item in $paths_list if item != '']", 'command': '$paths_list', 'args_str': "= [item.strip() for item in $paths_list if item != '']", 'args': ['=', '[item.strip()', 'for', 'item', 'in', '$paths_list', 'if', 'item', '!=', "'']"], 'file_path': '@sys.path', 'line_number': 11}, {'str': 'return $paths_list', 'command': 'return', 'args_str': '$paths_list', 'args': ['$paths_list'], 'file_path': '@sys.path', 'line_number': 12}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@sys.path', 'line_number': 13}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@sys.path', 'line_number': 14}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@sys.path', 'line_number': 15}]
modules["test"] = [{'str': 'namespace test', 'command': 'namespace', 'args_str': 'test', 'args': ['test'], 'file_path': '@test', 'line_number': 1}, {'str': 'func doAssert($value)', 'command': 'func', 'args_str': 'doAssert($value)', 'args': ['doAssert($value)'], 'file_path': '@test', 'line_number': 2}, {'str': 'assert ($value)', 'command': 'assert', 'args_str': '($value)', 'args': ['($value)'], 'file_path': '@test', 'line_number': 3}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 4}, {'str': 'func assertTrue($value)', 'command': 'func', 'args_str': 'assertTrue($value)', 'args': ['assertTrue($value)'], 'file_path': '@test', 'line_number': 5}, {'str': 'test.doAssert ($value)', 'command': 'test.doAssert', 'args_str': '($value)', 'args': ['($value)'], 'file_path': '@test', 'line_number': 6}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 7}, {'str': 'func assertFalse($value)', 'command': 'func', 'args_str': 'assertFalse($value)', 'args': ['assertFalse($value)'], 'file_path': '@test', 'line_number': 8}, {'str': 'test.doAssert (not $value)', 'command': 'test.doAssert', 'args_str': '(not $value)', 'args': ['(not', '$value)'], 'file_path': '@test', 'line_number': 9}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 10}, {'str': 'func assertEquals($a, $b)', 'command': 'func', 'args_str': 'assertEquals($a, $b)', 'args': ['assertEquals($a,', '$b)'], 'file_path': '@test', 'line_number': 11}, {'str': 'test.doAssert ($a == $b)', 'command': 'test.doAssert', 'args_str': '($a == $b)', 'args': ['($a', '==', '$b)'], 'file_path': '@test', 'line_number': 12}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 13}, {'str': 'func assertNotEquals($a, $b)', 'command': 'func', 'args_str': 'assertNotEquals($a, $b)', 'args': ['assertNotEquals($a,', '$b)'], 'file_path': '@test', 'line_number': 14}, {'str': 'test.doAssert ($a != $b)', 'command': 'test.doAssert', 'args_str': '($a != $b)', 'args': ['($a', '!=', '$b)'], 'file_path': '@test', 'line_number': 15}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 16}, {'str': 'func assertEmpty($value)', 'command': 'func', 'args_str': 'assertEmpty($value)', 'args': ['assertEmpty($value)'], 'file_path': '@test', 'line_number': 17}, {'str': 'test.doAssert ($valie == null)', 'command': 'test.doAssert', 'args_str': '($valie == null)', 'args': ['($valie', '==', 'null)'], 'file_path': '@test', 'line_number': 18}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 19}, {'str': 'func assertNotEmpty($value)', 'command': 'func', 'args_str': 'assertNotEmpty($value)', 'args': ['assertNotEmpty($value)'], 'file_path': '@test', 'line_number': 20}, {'str': 'test.doAssert ($valie != null)', 'command': 'test.doAssert', 'args_str': '($valie != null)', 'args': ['($valie', '!=', 'null)'], 'file_path': '@test', 'line_number': 21}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 22}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 23}]
modules["time"] = [{'str': 'namespace time', 'command': 'namespace', 'args_str': 'time', 'args': ['time'], 'file_path': '@time', 'line_number': 1}, {'str': 'func float::time()', 'command': 'func', 'args_str': 'float::time()', 'args': ['float::time()'], 'file_path': '@time', 'line_number': 2}, {'str': "return py_load_module('time')->time()", 'command': 'return', 'args_str': "py_load_module('time')->time()", 'args': ["py_load_module('time')->time()"], 'file_path': '@time', 'line_number': 3}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 4}, {'str': 'func sleep(float|int $time_to_sleep)', 'command': 'func', 'args_str': 'sleep(float|int $time_to_sleep)', 'args': ['sleep(float|int', '$time_to_sleep)'], 'file_path': '@time', 'line_number': 5}, {'str': "py_load_module ('time')->sleep($time_to_sleep)", 'command': 'py_load_module', 'args_str': "('time')->sleep($time_to_sleep)", 'args': ["('time')->sleep($time_to_sleep)"], 'file_path': '@time', 'line_number': 6}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 7}, {'str': 'func ctime()', 'command': 'func', 'args_str': 'ctime()', 'args': ['ctime()'], 'file_path': '@time', 'line_number': 8}, {'str': "return py_load_module('time')->ctime()", 'command': 'return', 'args_str': "py_load_module('time')->ctime()", 'args': ["py_load_module('time')->ctime()"], 'file_path': '@time', 'line_number': 9}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 10}, {'str': 'func gmtime()', 'command': 'func', 'args_str': 'gmtime()', 'args': ['gmtime()'], 'file_path': '@time', 'line_number': 11}, {'str': "return py_load_module('time')->gmtime()", 'command': 'return', 'args_str': "py_load_module('time')->gmtime()", 'args': ["py_load_module('time')->gmtime()"], 'file_path': '@time', 'line_number': 12}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 13}, {'str': 'func localtime()', 'command': 'func', 'args_str': 'localtime()', 'args': ['localtime()'], 'file_path': '@time', 'line_number': 14}, {'str': "return py_load_module('time')->localtime()", 'command': 'return', 'args_str': "py_load_module('time')->localtime()", 'args': ["py_load_module('time')->localtime()"], 'file_path': '@time', 'line_number': 15}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 16}, {'str': 'endnamespace ', 'command': 'endnamespace', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 17}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@time', 'line_number': 18}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 17}, {'str': 'gotoif tmplabelif40_2', 'command': 'gotoif', 'args_str': 'tmplabelif40_2', 'args': ['tmplabelif40_2'], 'file_path': '<system>', 'line_number': 17}, {'str': 'println ("Current UNIX timestamp: " + str(time.time()))', 'command': 'println', 'args_str': '("Current UNIX timestamp: " + str(time.time()))', 'args': ['("Current', 'UNIX', 'timestamp:', '"', '+', 'str(time.time()))'], 'file_path': '@time', 'line_number': 19}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 20}, {'str': 'label tmplabelif40_2', 'command': 'label', 'args_str': 'tmplabelif40_2', 'args': ['tmplabelif40_2'], 'file_path': '<system>', 'line_number': 21}, {'str': 'label tmplabelif40_end', 'command': 'label', 'args_str': 'tmplabelif40_end', 'args': ['tmplabelif40_end'], 'file_path': '<system>', 'line_number': 21}]
modules["web"] = [{'str': 'import "@os",  "@web.session"', 'command': 'import', 'args_str': '"@os",  "@web.session"', 'args': ['"@os",', '"@web.session"'], 'file_path': '@web', 'line_number': 1}, {'str': 'namespace web', 'command': 'namespace', 'args_str': 'web', 'args': ['web'], 'file_path': '@web', 'line_number': 2}, {'str': '@doc """Initializes the web environment."""', 'command': '@doc', 'args_str': '"""Initializes the web environment."""', 'args': ['"""Initializes', 'the', 'web', 'environment."""'], 'file_path': '@web', 'line_number': 3}, {'str': 'func init()', 'command': 'func', 'args_str': 'init()', 'args': ['init()'], 'file_path': '@web', 'line_number': 4}, {'str': "if 'HTTP_COOKIE' in list($os.env->keys())", 'command': 'if', 'args_str': "'HTTP_COOKIE' in list($os.env->keys())", 'args': ["'HTTP_COOKIE'", 'in', 'list($os.env->keys())'], 'file_path': '@web', 'line_number': 5}, {'str': "mem not ('HTTP_COOKIE' in list($os.env->keys()))", 'command': 'mem', 'args_str': "not ('HTTP_COOKIE' in list($os.env->keys()))", 'args': ['not', "('HTTP_COOKIE'", 'in', 'list($os.env->keys()))'], 'file_path': '<system>', 'line_number': 4}, {'str': 'gotoif tmplabelif41_2', 'command': 'gotoif', 'args_str': 'tmplabelif41_2', 'args': ['tmplabelif41_2'], 'file_path': '<system>', 'line_number': 4}, {'str': "$items = urllib.parse.parse_qsl($os.env['HTTP_COOKIE'])", 'command': '$items', 'args_str': "= urllib.parse.parse_qsl($os.env['HTTP_COOKIE'])", 'args': ['=', "urllib.parse.parse_qsl($os.env['HTTP_COOKIE'])"], 'file_path': '@web', 'line_number': 6}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web', 'line_number': 7}, {'str': '$cookies = {}', 'command': '$cookies', 'args_str': '= {}', 'args': ['=', '{}'], 'file_path': '@web', 'line_number': 8}, {'str': 'while $i < len($items)', 'command': 'while', 'args_str': '$i < len($items)', 'args': ['$i', '<', 'len($items)'], 'file_path': '@web', 'line_number': 9}, {'str': '$cookies[$items[$i][0]] = $items[$i][1]', 'command': '$cookies[$items[$i][0]]', 'args_str': '= $items[$i][1]', 'args': ['=', '$items[$i][1]'], 'file_path': '@web', 'line_number': 10}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web', 'line_number': 11}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 12}, {'str': "gset ('web.cookies', $cookies)", 'command': 'gset', 'args_str': "('web.cookies', $cookies)", 'args': ["('web.cookies',", '$cookies)'], 'file_path': '@web', 'line_number': 13}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 14}, {'str': 'goto tmplabelif41_end', 'command': 'goto', 'args_str': 'tmplabelif41_end', 'args': ['tmplabelif41_end'], 'file_path': '<system>', 'line_number': 15}, {'str': 'label tmplabelif41_2', 'command': 'label', 'args_str': 'tmplabelif41_2', 'args': ['tmplabelif41_2'], 'file_path': '<system>', 'line_number': 15}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 15}, {'str': 'gotoif tmplabelif41_3', 'command': 'gotoif', 'args_str': 'tmplabelif41_3', 'args': ['tmplabelif41_3'], 'file_path': '<system>', 'line_number': 15}, {'str': "gset ('web.cookies', {})", 'command': 'gset', 'args_str': "('web.cookies', {})", 'args': ["('web.cookies',", '{})'], 'file_path': '@web', 'line_number': 15}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 16}, {'str': 'label tmplabelif41_3', 'command': 'label', 'args_str': 'tmplabelif41_3', 'args': ['tmplabelif41_3'], 'file_path': '<system>', 'line_number': 21}, {'str': 'label tmplabelif41_end', 'command': 'label', 'args_str': 'tmplabelif41_end', 'args': ['tmplabelif41_end'], 'file_path': '<system>', 'line_number': 21}, {'str': "$os.env->setdefault ('QUERY_STRING', '')", 'command': '$os.env->setdefault', 'args_str': "('QUERY_STRING', '')", 'args': ["('QUERY_STRING',", "'')"], 'file_path': '@web', 'line_number': 17}, {'str': "$os.env->setdefault ('REQUEST_METHOD', 'GET')", 'command': '$os.env->setdefault', 'args_str': "('REQUEST_METHOD', 'GET')", 'args': ["('REQUEST_METHOD',", "'GET')"], 'file_path': '@web', 'line_number': 18}, {'str': "$raw_get = $os.env['QUERY_STRING']", 'command': '$raw_get', 'args_str': "= $os.env['QUERY_STRING']", 'args': ['=', "$os.env['QUERY_STRING']"], 'file_path': '@web', 'line_number': 19}, {'str': '$tmp_get = urllib.parse.parse_qsl($raw_get)', 'command': '$tmp_get', 'args_str': '= urllib.parse.parse_qsl($raw_get)', 'args': ['=', 'urllib.parse.parse_qsl($raw_get)'], 'file_path': '@web', 'line_number': 20}, {'str': '$get = {}', 'command': '$get', 'args_str': '= {}', 'args': ['=', '{}'], 'file_path': '@web', 'line_number': 21}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web', 'line_number': 22}, {'str': 'while $i < len($tmp_get)', 'command': 'while', 'args_str': '$i < len($tmp_get)', 'args': ['$i', '<', 'len($tmp_get)'], 'file_path': '@web', 'line_number': 23}, {'str': '$get[$tmp_get[$i][0]] = $tmp_get[$i][1]', 'command': '$get[$tmp_get[$i][0]]', 'args_str': '= $tmp_get[$i][1]', 'args': ['=', '$tmp_get[$i][1]'], 'file_path': '@web', 'line_number': 24}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web', 'line_number': 25}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 26}, {'str': '$post = {}', 'command': '$post', 'args_str': '= {}', 'args': ['=', '{}'], 'file_path': '@web', 'line_number': 27}, {'str': "if $os.env['REQUEST_METHOD'] == 'POST'", 'command': 'if', 'args_str': "$os.env['REQUEST_METHOD'] == 'POST'", 'args': ["$os.env['REQUEST_METHOD']", '==', "'POST'"], 'file_path': '@web', 'line_number': 28}, {'str': "mem not ($os.env['REQUEST_METHOD'] == 'POST')", 'command': 'mem', 'args_str': "not ($os.env['REQUEST_METHOD'] == 'POST')", 'args': ['not', "($os.env['REQUEST_METHOD']", '==', "'POST')"], 'file_path': '<system>', 'line_number': 35}, {'str': 'gotoif tmplabelif42_2', 'command': 'gotoif', 'args_str': 'tmplabelif42_2', 'args': ['tmplabelif42_2'], 'file_path': '<system>', 'line_number': 35}, {'str': '$raw_post = read()', 'command': '$raw_post', 'args_str': '= read()', 'args': ['=', 'read()'], 'file_path': '@web', 'line_number': 29}, {'str': "$os.env['POST_RAW_DATA'] = $raw_post", 'command': "$os.env['POST_RAW_DATA']", 'args_str': '= $raw_post', 'args': ['=', '$raw_post'], 'file_path': '@web', 'line_number': 30}, {'str': '$is_json = false', 'command': '$is_json', 'args_str': '= false', 'args': ['=', 'false'], 'file_path': '@web', 'line_number': 31}, {'str': 'try web_init_check_json_error', 'command': 'try', 'args_str': 'web_init_check_json_error', 'args': ['web_init_check_json_error'], 'file_path': '@web', 'line_number': 32}, {'str': 'json.loads ($raw_post)', 'command': 'json.loads', 'args_str': '($raw_post)', 'args': ['($raw_post)'], 'file_path': '@web', 'line_number': 33}, {'str': '$is_json = true', 'command': '$is_json', 'args_str': '= true', 'args': ['=', 'true'], 'file_path': '@web', 'line_number': 34}, {'str': 'endtry ', 'command': 'endtry', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 35}, {'str': 'goto after_web_init_check_json_error', 'command': 'goto', 'args_str': 'after_web_init_check_json_error', 'args': ['after_web_init_check_json_error'], 'file_path': '@web', 'line_number': 36}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0}, {'str': 'label web_init_check_json_error', 'command': 'label', 'args_str': 'web_init_check_json_error', 'args': ['web_init_check_json_error'], 'file_path': '@web', 'line_number': 36}, {'str': '$is_json = false', 'command': '$is_json', 'args_str': '= false', 'args': ['=', 'false'], 'file_path': '@web', 'line_number': 37}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0}, {'str': 'label after_web_init_check_json_error', 'command': 'label', 'args_str': 'after_web_init_check_json_error', 'args': ['after_web_init_check_json_error'], 'file_path': '@web', 'line_number': 38}, {'str': 'if $is_json', 'command': 'if', 'args_str': '$is_json', 'args': ['$is_json'], 'file_path': '@web', 'line_number': 39}, {'str': 'mem not ($is_json)', 'command': 'mem', 'args_str': 'not ($is_json)', 'args': ['not', '($is_json)'], 'file_path': '<system>', 'line_number': 51}, {'str': 'gotoif tmplabelif43_2', 'command': 'gotoif', 'args_str': 'tmplabelif43_2', 'args': ['tmplabelif43_2'], 'file_path': '<system>', 'line_number': 51}, {'str': '$post = json.loads($raw_post)', 'command': '$post', 'args_str': '= json.loads($raw_post)', 'args': ['=', 'json.loads($raw_post)'], 'file_path': '@web', 'line_number': 40}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 41}, {'str': 'goto tmplabelif43_end', 'command': 'goto', 'args_str': 'tmplabelif43_end', 'args': ['tmplabelif43_end'], 'file_path': '<system>', 'line_number': 55}, {'str': 'label tmplabelif43_2', 'command': 'label', 'args_str': 'tmplabelif43_2', 'args': ['tmplabelif43_2'], 'file_path': '<system>', 'line_number': 55}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 55}, {'str': 'gotoif tmplabelif43_3', 'command': 'gotoif', 'args_str': 'tmplabelif43_3', 'args': ['tmplabelif43_3'], 'file_path': '<system>', 'line_number': 55}, {'str': '$tmp_post = urllib.parse.parse_qsl($raw_post)', 'command': '$tmp_post', 'args_str': '= urllib.parse.parse_qsl($raw_post)', 'args': ['=', 'urllib.parse.parse_qsl($raw_post)'], 'file_path': '@web', 'line_number': 42}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web', 'line_number': 43}, {'str': 'while $i < len($tmp_post)', 'command': 'while', 'args_str': '$i < len($tmp_post)', 'args': ['$i', '<', 'len($tmp_post)'], 'file_path': '@web', 'line_number': 44}, {'str': '$post[$tmp_post[$i][0]] = $tmp_post[$i][1]', 'command': '$post[$tmp_post[$i][0]]', 'args_str': '= $tmp_post[$i][1]', 'args': ['=', '$tmp_post[$i][1]'], 'file_path': '@web', 'line_number': 45}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web', 'line_number': 46}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 47}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 48}, {'str': 'label tmplabelif43_3', 'command': 'label', 'args_str': 'tmplabelif43_3', 'args': ['tmplabelif43_3'], 'file_path': '<system>', 'line_number': 66}, {'str': 'label tmplabelif43_end', 'command': 'label', 'args_str': 'tmplabelif43_end', 'args': ['tmplabelif43_end'], 'file_path': '<system>', 'line_number': 66}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 49}, {'str': 'label tmplabelif42_2', 'command': 'label', 'args_str': 'tmplabelif42_2', 'args': ['tmplabelif42_2'], 'file_path': '<system>', 'line_number': 69}, {'str': 'label tmplabelif42_end', 'command': 'label', 'args_str': 'tmplabelif42_end', 'args': ['tmplabelif42_end'], 'file_path': '<system>', 'line_number': 69}, {'str': "gset ('web.get', $get)", 'command': 'gset', 'args_str': "('web.get', $get)", 'args': ["('web.get',", '$get)'], 'file_path': '@web', 'line_number': 50}, {'str': "gset ('web.post', $post)", 'command': 'gset', 'args_str': "('web.post', $post)", 'args': ["('web.post',", '$post)'], 'file_path': '@web', 'line_number': 51}, {'str': "define ('WEB_INITED', true)", 'command': 'define', 'args_str': "('WEB_INITED', true)", 'args': ["('WEB_INITED',", 'true)'], 'file_path': '@web', 'line_number': 52}, {'str': "set_header ('Content-type', 'text/html')", 'command': 'set_header', 'args_str': "('Content-type', 'text/html')", 'args': ["('Content-type',", "'text/html')"], 'file_path': '@web', 'line_number': 53}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 54}, {'str': '@doc """Sets a http header.\\nFirst argument is name of header and last is value(both string)."""', 'command': '@doc', 'args_str': '"""Sets a http header.\\nFirst argument is name of header and last is value(both string)."""', 'args': ['"""Sets', 'a', 'http', 'header.\\nFirst', 'argument', 'is', 'name', 'of', 'header', 'and', 'last', 'is', 'value(both', 'string)."""'], 'file_path': '@web', 'line_number': 55}, {'str': 'func set_header(string $name, $value)', 'command': 'func', 'args_str': 'set_header(string $name, $value)', 'args': ['set_header(string', '$name,', '$value)'], 'file_path': '@web', 'line_number': 56}, {'str': "if is_defined('WEB_END_HEADERS')", 'command': 'if', 'args_str': "is_defined('WEB_END_HEADERS')", 'args': ["is_defined('WEB_END_HEADERS')"], 'file_path': '@web', 'line_number': 57}, {'str': "mem not (is_defined('WEB_END_HEADERS'))", 'command': 'mem', 'args_str': "not (is_defined('WEB_END_HEADERS'))", 'args': ['not', "(is_defined('WEB_END_HEADERS'))"], 'file_path': '<system>', 'line_number': 79}, {'str': 'gotoif tmplabelif44_2', 'command': 'gotoif', 'args_str': 'tmplabelif44_2', 'args': ['tmplabelif44_2'], 'file_path': '<system>', 'line_number': 79}, {'str': "raise (Error('HeaderError', 'headers already sent'))", 'command': 'raise', 'args_str': "(Error('HeaderError', 'headers already sent'))", 'args': ["(Error('HeaderError',", "'headers", 'already', "sent'))"], 'file_path': '@web', 'line_number': 58}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 59}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 60}, {'str': 'label tmplabelif44_2', 'command': 'label', 'args_str': 'tmplabelif44_2', 'args': ['tmplabelif44_2'], 'file_path': '<system>', 'line_number': 84}, {'str': 'label tmplabelif44_end', 'command': 'label', 'args_str': 'tmplabelif44_end', 'args': ['tmplabelif44_end'], 'file_path': '<system>', 'line_number': 84}, {'str': "print (str($name) + ': ' + str($value) + '\\n')", 'command': 'print', 'args_str': "(str($name) + ': ' + str($value) + '\\n')", 'args': ['(str($name)', '+', "':", "'", '+', 'str($value)', '+', "'\\n')"], 'file_path': '@web', 'line_number': 61}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 62}, {'str': '@doc """Sets http response code.\\nGets code as int."""', 'command': '@doc', 'args_str': '"""Sets http response code.\\nGets code as int."""', 'args': ['"""Sets', 'http', 'response', 'code.\\nGets', 'code', 'as', 'int."""'], 'file_path': '@web', 'line_number': 63}, {'str': 'func status(int $code)', 'command': 'func', 'args_str': 'status(int $code)', 'args': ['status(int', '$code)'], 'file_path': '@web', 'line_number': 64}, {'str': "set_header ('Status', str($code))", 'command': 'set_header', 'args_str': "('Status', str($code))", 'args': ["('Status',", 'str($code))'], 'file_path': '@web', 'line_number': 65}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 66}, {'str': '@doc """Sets a HTTP cookie.\\nGets options as dictionary."""', 'command': '@doc', 'args_str': '"""Sets a HTTP cookie.\\nGets options as dictionary."""', 'args': ['"""Sets', 'a', 'HTTP', 'cookie.\\nGets', 'options', 'as', 'dictionary."""'], 'file_path': '@web', 'line_number': 67}, {'str': 'func set_cookie(dict $options)', 'command': 'func', 'args_str': 'set_cookie(dict $options)', 'args': ['set_cookie(dict', '$options)'], 'file_path': '@web', 'line_number': 68}, {'str': "$options->setdefault ('value', '')", 'command': '$options->setdefault', 'args_str': "('value', '')", 'args': ["('value',", "'')"], 'file_path': '@web', 'line_number': 69}, {'str': "$tmp = urllib.parse.urlencode([        ($options['name'], $options['value'])    ])->split('=', 1)", 'command': '$tmp', 'args_str': "= urllib.parse.urlencode([        ($options['name'], $options['value'])    ])->split('=', 1)", 'args': ['=', 'urllib.parse.urlencode([', "($options['name'],", "$options['value'])", "])->split('=',", '1)'], 'file_path': '@web', 'line_number': 70}, {'str': "$options['name'] = $tmp[0]->strip()", 'command': "$options['name']", 'args_str': '= $tmp[0]->strip()', 'args': ['=', '$tmp[0]->strip()'], 'file_path': '@web', 'line_number': 71}, {'str': "$options['value'] = $tmp[1]", 'command': "$options['value']", 'args_str': '= $tmp[1]', 'args': ['=', '$tmp[1]'], 'file_path': '@web', 'line_number': 72}, {'str': '$base_cookie = http.cookies.BaseCookie()', 'command': '$base_cookie', 'args_str': '= http.cookies.BaseCookie()', 'args': ['=', 'http.cookies.BaseCookie()'], 'file_path': '@web', 'line_number': 73}, {'str': "$base_cookie[$options['name']] = $options['value']", 'command': "$base_cookie[$options['name']]", 'args_str': "= $options['value']", 'args': ['=', "$options['value']"], 'file_path': '@web', 'line_number': 74}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web', 'line_number': 75}, {'str': '$keys = list($options->keys())', 'command': '$keys', 'args_str': '= list($options->keys())', 'args': ['=', 'list($options->keys())'], 'file_path': '@web', 'line_number': 76}, {'str': 'while $i < len($keys)', 'command': 'while', 'args_str': '$i < len($keys)', 'args': ['$i', '<', 'len($keys)'], 'file_path': '@web', 'line_number': 77}, {'str': "if $keys[$i] not in ['name', 'value']", 'command': 'if', 'args_str': "$keys[$i] not in ['name', 'value']", 'args': ['$keys[$i]', 'not', 'in', "['name',", "'value']"], 'file_path': '@web', 'line_number': 78}, {'str': "mem not ($keys[$i] not in ['name', 'value'])", 'command': 'mem', 'args_str': "not ($keys[$i] not in ['name', 'value'])", 'args': ['not', '($keys[$i]', 'not', 'in', "['name',", "'value'])"], 'file_path': '<system>', 'line_number': 104}, {'str': 'gotoif tmplabelif45_2', 'command': 'gotoif', 'args_str': 'tmplabelif45_2', 'args': ['tmplabelif45_2'], 'file_path': '<system>', 'line_number': 104}, {'str': "$base_cookie[$options['name']][$keys[$i]] = $options[$keys[$i]]", 'command': "$base_cookie[$options['name']][$keys[$i]]", 'args_str': '= $options[$keys[$i]]', 'args': ['=', '$options[$keys[$i]]'], 'file_path': '@web', 'line_number': 79}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 80}, {'str': 'label tmplabelif45_2', 'command': 'label', 'args_str': 'tmplabelif45_2', 'args': ['tmplabelif45_2'], 'file_path': '<system>', 'line_number': 108}, {'str': 'label tmplabelif45_end', 'command': 'label', 'args_str': 'tmplabelif45_end', 'args': ['tmplabelif45_end'], 'file_path': '<system>', 'line_number': 108}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web', 'line_number': 81}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 82}, {'str': '$output = $base_cookie->output()', 'command': '$output', 'args_str': '= $base_cookie->output()', 'args': ['=', '$base_cookie->output()'], 'file_path': '@web', 'line_number': 83}, {'str': "$output = $output->split(':', 1)[-1]->strip()->split('=', 1)", 'command': '$output', 'args_str': "= $output->split(':', 1)[-1]->strip()->split('=', 1)", 'args': ['=', "$output->split(':',", "1)[-1]->strip()->split('=',", '1)'], 'file_path': '@web', 'line_number': 84}, {'str': "set_header ('Set-Cookie', $output[0]->strip() + '=' + $output[-1])", 'command': 'set_header', 'args_str': "('Set-Cookie', $output[0]->strip() + '=' + $output[-1])", 'args': ["('Set-Cookie',", '$output[0]->strip()', '+', "'='", '+', '$output[-1])'], 'file_path': '@web', 'line_number': 85}, {'str': "$real_cookies = gget('web.cookies')", 'command': '$real_cookies', 'args_str': "= gget('web.cookies')", 'args': ['=', "gget('web.cookies')"], 'file_path': '@web', 'line_number': 86}, {'str': "$tmp = urllib.parse.parse_qsl($output[0]->strip() + '=' + $output[-1])", 'command': '$tmp', 'args_str': "= urllib.parse.parse_qsl($output[0]->strip() + '=' + $output[-1])", 'args': ['=', 'urllib.parse.parse_qsl($output[0]->strip()', '+', "'='", '+', '$output[-1])'], 'file_path': '@web', 'line_number': 87}, {'str': '$real_cookies[$tmp[0][0]] = $tmp[0][1]', 'command': '$real_cookies[$tmp[0][0]]', 'args_str': '= $tmp[0][1]', 'args': ['=', '$tmp[0][1]'], 'file_path': '@web', 'line_number': 88}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 89}, {'str': '@doc "Ends the headers"', 'command': '@doc', 'args_str': '"Ends the headers"', 'args': ['"Ends', 'the', 'headers"'], 'file_path': '@web', 'line_number': 90}, {'str': 'func end_headers()', 'command': 'func', 'args_str': 'end_headers()', 'args': ['end_headers()'], 'file_path': '@web', 'line_number': 91}, {'str': "println ('')", 'command': 'println', 'args_str': "('')", 'args': ["('')"], 'file_path': '@web', 'line_number': 92}, {'str': "define ('WEB_END_HEADERS', true)", 'command': 'define', 'args_str': "('WEB_END_HEADERS', true)", 'args': ["('WEB_END_HEADERS',", 'true)'], 'file_path': '@web', 'line_number': 93}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 94}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 95}]
modules["web.server"] = [{'str': 'namespace web', 'command': 'namespace', 'args_str': 'web', 'args': ['web'], 'file_path': '@web.server', 'line_number': 1}, {'str': 'namespace server', 'command': 'namespace', 'args_str': 'server', 'args': ['server'], 'file_path': '@web.server', 'line_number': 1}, {'str': 'class WebServer', 'command': 'class', 'args_str': 'WebServer', 'args': ['WebServer'], 'file_path': '@web.server', 'line_number': 2}, {'str': 'func __init__(string $host, int $port=8000)', 'command': 'func', 'args_str': '__init__(string $host, int $port=8000)', 'args': ['__init__(string', '$host,', 'int', '$port=8000)'], 'file_path': '@web.server', 'line_number': 3}, {'str': '$this->host = $host', 'command': '$this->host', 'args_str': '= $host', 'args': ['=', '$host'], 'file_path': '@web.server', 'line_number': 4}, {'str': '$this->port = $port', 'command': '$this->port', 'args_str': '= $port', 'args': ['=', '$port'], 'file_path': '@web.server', 'line_number': 5}, {'str': '$this->do_get = null', 'command': '$this->do_get', 'args_str': '= null', 'args': ['=', 'null'], 'file_path': '@web.server', 'line_number': 6}, {'str': '$this->do_post = null', 'command': '$this->do_post', 'args_str': '= null', 'args': ['=', 'null'], 'file_path': '@web.server', 'line_number': 7}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 8}, {'str': 'func web.server.WebServer::set_get($func)', 'command': 'func', 'args_str': 'web.server.WebServer::set_get($func)', 'args': ['web.server.WebServer::set_get($func)'], 'file_path': '@web.server', 'line_number': 9}, {'str': '$this->do_get = $func', 'command': '$this->do_get', 'args_str': '= $func', 'args': ['=', '$func'], 'file_path': '@web.server', 'line_number': 10}, {'str': 'return $this', 'command': 'return', 'args_str': '$this', 'args': ['$this'], 'file_path': '@web.server', 'line_number': 11}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 12}, {'str': 'func web.server.WebServer::set_post($func)', 'command': 'func', 'args_str': 'web.server.WebServer::set_post($func)', 'args': ['web.server.WebServer::set_post($func)'], 'file_path': '@web.server', 'line_number': 13}, {'str': '$this->do_post = $func', 'command': '$this->do_post', 'args_str': '= $func', 'args': ['=', '$func'], 'file_path': '@web.server', 'line_number': 14}, {'str': 'return $this', 'command': 'return', 'args_str': '$this', 'args': ['$this'], 'file_path': '@web.server', 'line_number': 15}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 16}, {'str': 'func serve()', 'command': 'func', 'args_str': 'serve()', 'args': ['serve()'], 'file_path': '@web.server', 'line_number': 17}, {'str': '$py_code = \'def serve(host, port, do_get=None, do_post=None):\\n    class TheServer(http.server.BaseHTTPRequestHandler):\\n        def do_GET(self):\\n            if self.get_event != None:\\n                self.get_event(self)\\n        def do_POST(self):\\n            if self.post_event != None:\\n                self.post_event(self)\\n    tmp_TheServer = copy.deepcopy(TheServer)\\n    tmp_TheServer.get_event = do_get\\n    tmp_TheServer.post_event = do_post\\n    webServer = http.server.HTTPServer((host, port), tmp_TheServer)\\n    return webServer\\nself.mem = serve(self.get_var("this").host, self.get_var("this").port, self.get_var("this").do_get, self.get_var("this").do_post)\\n            \'', 'command': '$py_code', 'args_str': '= \'def serve(host, port, do_get=None, do_post=None):\\n    class TheServer(http.server.BaseHTTPRequestHandler):\\n        def do_GET(self):\\n            if self.get_event != None:\\n                self.get_event(self)\\n        def do_POST(self):\\n            if self.post_event != None:\\n                self.post_event(self)\\n    tmp_TheServer = copy.deepcopy(TheServer)\\n    tmp_TheServer.get_event = do_get\\n    tmp_TheServer.post_event = do_post\\n    webServer = http.server.HTTPServer((host, port), tmp_TheServer)\\n    return webServer\\nself.mem = serve(self.get_var("this").host, self.get_var("this").port, self.get_var("this").do_get, self.get_var("this").do_post)\\n            \'', 'args': ['=', "'def", 'serve(host,', 'port,', 'do_get=None,', 'do_post=None):\\n', 'class', 'TheServer(http.server.BaseHTTPRequestHandler):\\n', 'def', 'do_GET(self):\\n', 'if', 'self.get_event', '!=', 'None:\\n', 'self.get_event(self)\\n', 'def', 'do_POST(self):\\n', 'if', 'self.post_event', '!=', 'None:\\n', 'self.post_event(self)\\n', 'tmp_TheServer', '=', 'copy.deepcopy(TheServer)\\n', 'tmp_TheServer.get_event', '=', 'do_get\\n', 'tmp_TheServer.post_event', '=', 'do_post\\n', 'webServer', '=', 'http.server.HTTPServer((host,', 'port),', 'tmp_TheServer)\\n', 'return', 'webServer\\nself.mem', '=', 'serve(self.get_var("this").host,', 'self.get_var("this").port,', 'self.get_var("this").do_get,', 'self.get_var("this").do_post)\\n', "'"], 'file_path': '@web.server', 'line_number': 18}, {'str': '$this->server = python($py_code)', 'command': '$this->server', 'args_str': '= python($py_code)', 'args': ['=', 'python($py_code)'], 'file_path': '@web.server', 'line_number': 19}, {'str': '$this->server->serve_forever ()', 'command': '$this->server->serve_forever', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 20}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 21}, {'str': 'endclass ', 'command': 'endclass', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 22}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 23}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 23}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@web.server', 'line_number': 24}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 25}, {'str': 'gotoif tmplabelif46_2', 'command': 'gotoif', 'args_str': 'tmplabelif46_2', 'args': ['tmplabelif46_2'], 'file_path': '<system>', 'line_number': 25}, {'str': 'import "@sys",  "@os"', 'command': 'import', 'args_str': '"@sys",  "@os"', 'args': ['"@sys",', '"@os"'], 'file_path': '@web.server', 'line_number': 25}, {'str': "if '--help' in $argv", 'command': 'if', 'args_str': "'--help' in $argv", 'args': ["'--help'", 'in', '$argv'], 'file_path': '@web.server', 'line_number': 26}, {'str': "mem not ('--help' in $argv)", 'command': 'mem', 'args_str': "not ('--help' in $argv)", 'args': ['not', "('--help'", 'in', '$argv)'], 'file_path': '<system>', 'line_number': 29}, {'str': 'gotoif tmplabelif47_2', 'command': 'gotoif', 'args_str': 'tmplabelif47_2', 'args': ['tmplabelif47_2'], 'file_path': '<system>', 'line_number': 29}, {'str': "println ('Serve a simple webserver for development environment')", 'command': 'println', 'args_str': "('Serve a simple webserver for development environment')", 'args': ["('Serve", 'a', 'simple', 'webserver', 'for', 'development', "environment')"], 'file_path': '@web.server', 'line_number': 27}, {'str': "println ('')", 'command': 'println', 'args_str': "('')", 'args': ["('')"], 'file_path': '@web.server', 'line_number': 28}, {'str': "println ('Usage:   pashmak @serve <port>')", 'command': 'println', 'args_str': "('Usage:   pashmak @serve <port>')", 'args': ["('Usage:", 'pashmak', '@serve', "<port>')"], 'file_path': '@web.server', 'line_number': 29}, {'str': "println ('         pashmak @serve <host> <port>')", 'command': 'println', 'args_str': "('         pashmak @serve <host> <port>')", 'args': ["('", 'pashmak', '@serve', '<host>', "<port>')"], 'file_path': '@web.server', 'line_number': 30}, {'str': "println ('         pashmak @serve <host> <port> <directory>')", 'command': 'println', 'args_str': "('         pashmak @serve <host> <port> <directory>')", 'args': ["('", 'pashmak', '@serve', '<host>', '<port>', "<directory>')"], 'file_path': '@web.server', 'line_number': 31}, {'str': "println ('         pashmak @serve <host> <port> <directory> <main-script: main file is request handler>')", 'command': 'println', 'args_str': "('         pashmak @serve <host> <port> <directory> <main-script: main file is request handler>')", 'args': ["('", 'pashmak', '@serve', '<host>', '<port>', '<directory>', '<main-script:', 'main', 'file', 'is', 'request', "handler>')"], 'file_path': '@web.server', 'line_number': 32}, {'str': "println ('Example: pashmak @serve 8080')", 'command': 'println', 'args_str': "('Example: pashmak @serve 8080')", 'args': ["('Example:", 'pashmak', '@serve', "8080')"], 'file_path': '@web.server', 'line_number': 33}, {'str': "println ('         pashmak @serve 0.0.0.0 8080')", 'command': 'println', 'args_str': "('         pashmak @serve 0.0.0.0 8080')", 'args': ["('", 'pashmak', '@serve', '0.0.0.0', "8080')"], 'file_path': '@web.server', 'line_number': 34}, {'str': "println ('         pashmak @serve 0.0.0.0 8080 path/to/public/html')", 'command': 'println', 'args_str': "('         pashmak @serve 0.0.0.0 8080 path/to/public/html')", 'args': ["('", 'pashmak', '@serve', '0.0.0.0', '8080', "path/to/public/html')"], 'file_path': '@web.server', 'line_number': 35}, {'str': "println ('         pashmak @serve 0.0.0.0 8080 path/to/public/html path/to/public/html/server.pashm')", 'command': 'println', 'args_str': "('         pashmak @serve 0.0.0.0 8080 path/to/public/html path/to/public/html/server.pashm')", 'args': ["('", 'pashmak', '@serve', '0.0.0.0', '8080', 'path/to/public/html', "path/to/public/html/server.pashm')"], 'file_path': '@web.server', 'line_number': 36}, {'str': 'exit ()', 'command': 'exit', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 37}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 38}, {'str': 'label tmplabelif47_2', 'command': 'label', 'args_str': 'tmplabelif47_2', 'args': ['tmplabelif47_2'], 'file_path': '<system>', 'line_number': 43}, {'str': 'label tmplabelif47_end', 'command': 'label', 'args_str': 'tmplabelif47_end', 'args': ['tmplabelif47_end'], 'file_path': '<system>', 'line_number': 43}, {'str': '$port = 8000', 'command': '$port', 'args_str': '= 8000', 'args': ['=', '8000'], 'file_path': '@web.server', 'line_number': 39}, {'str': "$host = 'localhost'", 'command': '$host', 'args_str': "= 'localhost'", 'args': ['=', "'localhost'"], 'file_path': '@web.server', 'line_number': 40}, {'str': '$dir = os.getcwd()', 'command': '$dir', 'args_str': '= os.getcwd()', 'args': ['=', 'os.getcwd()'], 'file_path': '@web.server', 'line_number': 41}, {'str': '$main = null', 'command': '$main', 'args_str': '= null', 'args': ['=', 'null'], 'file_path': '@web.server', 'line_number': 42}, {'str': 'if len($argv) > 2', 'command': 'if', 'args_str': 'len($argv) > 2', 'args': ['len($argv)', '>', '2'], 'file_path': '@web.server', 'line_number': 43}, {'str': 'mem not (len($argv) > 2)', 'command': 'mem', 'args_str': 'not (len($argv) > 2)', 'args': ['not', '(len($argv)', '>', '2)'], 'file_path': '<system>', 'line_number': 50}, {'str': 'gotoif tmplabelif48_2', 'command': 'gotoif', 'args_str': 'tmplabelif48_2', 'args': ['tmplabelif48_2'], 'file_path': '<system>', 'line_number': 50}, {'str': '$host = $argv[1]', 'command': '$host', 'args_str': '= $argv[1]', 'args': ['=', '$argv[1]'], 'file_path': '@web.server', 'line_number': 44}, {'str': '$port = int($argv[2])', 'command': '$port', 'args_str': '= int($argv[2])', 'args': ['=', 'int($argv[2])'], 'file_path': '@web.server', 'line_number': 45}, {'str': 'if len($argv) > 3', 'command': 'if', 'args_str': 'len($argv) > 3', 'args': ['len($argv)', '>', '3'], 'file_path': '@web.server', 'line_number': 46}, {'str': 'mem not (len($argv) > 3)', 'command': 'mem', 'args_str': 'not (len($argv) > 3)', 'args': ['not', '(len($argv)', '>', '3)'], 'file_path': '<system>', 'line_number': 55}, {'str': 'gotoif tmplabelif49_2', 'command': 'gotoif', 'args_str': 'tmplabelif49_2', 'args': ['tmplabelif49_2'], 'file_path': '<system>', 'line_number': 55}, {'str': '$dir = $argv[3]', 'command': '$dir', 'args_str': '= $argv[3]', 'args': ['=', '$argv[3]'], 'file_path': '@web.server', 'line_number': 47}, {'str': 'if len($argv) > 4', 'command': 'if', 'args_str': 'len($argv) > 4', 'args': ['len($argv)', '>', '4'], 'file_path': '@web.server', 'line_number': 48}, {'str': 'mem not (len($argv) > 4)', 'command': 'mem', 'args_str': 'not (len($argv) > 4)', 'args': ['not', '(len($argv)', '>', '4)'], 'file_path': '<system>', 'line_number': 59}, {'str': 'gotoif tmplabelif50_2', 'command': 'gotoif', 'args_str': 'tmplabelif50_2', 'args': ['tmplabelif50_2'], 'file_path': '<system>', 'line_number': 59}, {'str': '$main = $argv[4]', 'command': '$main', 'args_str': '= $argv[4]', 'args': ['=', '$argv[4]'], 'file_path': '@web.server', 'line_number': 49}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 50}, {'str': 'label tmplabelif50_2', 'command': 'label', 'args_str': 'tmplabelif50_2', 'args': ['tmplabelif50_2'], 'file_path': '<system>', 'line_number': 63}, {'str': 'label tmplabelif50_end', 'command': 'label', 'args_str': 'tmplabelif50_end', 'args': ['tmplabelif50_end'], 'file_path': '<system>', 'line_number': 63}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 51}, {'str': 'label tmplabelif49_2', 'command': 'label', 'args_str': 'tmplabelif49_2', 'args': ['tmplabelif49_2'], 'file_path': '<system>', 'line_number': 66}, {'str': 'label tmplabelif49_end', 'command': 'label', 'args_str': 'tmplabelif49_end', 'args': ['tmplabelif49_end'], 'file_path': '<system>', 'line_number': 66}, {'str': 'elif len($argv) > 1', 'command': 'elif', 'args_str': 'len($argv) > 1', 'args': ['len($argv)', '>', '1'], 'file_path': '@web.server', 'line_number': 52}, {'str': 'goto tmplabelif48_end', 'command': 'goto', 'args_str': 'tmplabelif48_end', 'args': ['tmplabelif48_end'], 'file_path': '<system>', 'line_number': 69}, {'str': 'label tmplabelif48_2', 'command': 'label', 'args_str': 'tmplabelif48_2', 'args': ['tmplabelif48_2'], 'file_path': '<system>', 'line_number': 69}, {'str': 'mem not (len($argv) > 1)', 'command': 'mem', 'args_str': 'not (len($argv) > 1)', 'args': ['not', '(len($argv)', '>', '1)'], 'file_path': '<system>', 'line_number': 69}, {'str': 'gotoif tmplabelif48_3', 'command': 'gotoif', 'args_str': 'tmplabelif48_3', 'args': ['tmplabelif48_3'], 'file_path': '<system>', 'line_number': 69}, {'str': '$port = int($argv[1])', 'command': '$port', 'args_str': '= int($argv[1])', 'args': ['=', 'int($argv[1])'], 'file_path': '@web.server', 'line_number': 53}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 54}, {'str': 'label tmplabelif48_3', 'command': 'label', 'args_str': 'tmplabelif48_3', 'args': ['tmplabelif48_3'], 'file_path': '<system>', 'line_number': 75}, {'str': 'label tmplabelif48_end', 'command': 'label', 'args_str': 'tmplabelif48_end', 'args': ['tmplabelif48_end'], 'file_path': '<system>', 'line_number': 75}, {'str': '$server = web.server.WebServer($host, $port)', 'command': '$server', 'args_str': '= web.server.WebServer($host, $port)', 'args': ['=', 'web.server.WebServer($host,', '$port)'], 'file_path': '@web.server', 'line_number': 55}, {'str': 'func get_handler($handler)', 'command': 'func', 'args_str': 'get_handler($handler)', 'args': ['get_handler($handler)'], 'file_path': '@web.server', 'line_number': 56}, {'str': "the_handler ($handler, 'GET')", 'command': 'the_handler', 'args_str': "($handler, 'GET')", 'args': ['($handler,', "'GET')"], 'file_path': '@web.server', 'line_number': 57}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 58}, {'str': 'func post_handler($handler)', 'command': 'func', 'args_str': 'post_handler($handler)', 'args': ['post_handler($handler)'], 'file_path': '@web.server', 'line_number': 59}, {'str': "the_handler ($handler, 'POST')", 'command': 'the_handler', 'args_str': "($handler, 'POST')", 'args': ['($handler,', "'POST')"], 'file_path': '@web.server', 'line_number': 60}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 61}, {'str': 'func the_handler($handler, string $request_method)', 'command': 'func', 'args_str': 'the_handler($handler, string $request_method)', 'args': ['the_handler($handler,', 'string', '$request_method)'], 'file_path': '@web.server', 'line_number': 62}, {'str': '$path = str($handler->path)', 'command': '$path', 'args_str': '= str($handler->path)', 'args': ['=', 'str($handler->path)'], 'file_path': '@web.server', 'line_number': 63}, {'str': "$path = $path->split('?', 1)", 'command': '$path', 'args_str': "= $path->split('?', 1)", 'args': ['=', "$path->split('?',", '1)'], 'file_path': '@web.server', 'line_number': 64}, {'str': "$query_string = ''", 'command': '$query_string', 'args_str': "= ''", 'args': ['=', "''"], 'file_path': '@web.server', 'line_number': 65}, {'str': 'if len($path) > 1', 'command': 'if', 'args_str': 'len($path) > 1', 'args': ['len($path)', '>', '1'], 'file_path': '@web.server', 'line_number': 66}, {'str': 'mem not (len($path) > 1)', 'command': 'mem', 'args_str': 'not (len($path) > 1)', 'args': ['not', '(len($path)', '>', '1)'], 'file_path': '<system>', 'line_number': 89}, {'str': 'gotoif tmplabelif51_2', 'command': 'gotoif', 'args_str': 'tmplabelif51_2', 'args': ['tmplabelif51_2'], 'file_path': '<system>', 'line_number': 89}, {'str': '$query_string = $path[1]', 'command': '$query_string', 'args_str': '= $path[1]', 'args': ['=', '$path[1]'], 'file_path': '@web.server', 'line_number': 67}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 68}, {'str': 'label tmplabelif51_2', 'command': 'label', 'args_str': 'tmplabelif51_2', 'args': ['tmplabelif51_2'], 'file_path': '<system>', 'line_number': 93}, {'str': 'label tmplabelif51_end', 'command': 'label', 'args_str': 'tmplabelif51_end', 'args': ['tmplabelif51_end'], 'file_path': '<system>', 'line_number': 93}, {'str': '$path = $path[0]', 'command': '$path', 'args_str': '= $path[0]', 'args': ['=', '$path[0]'], 'file_path': '@web.server', 'line_number': 69}, {'str': '$has_index = false', 'command': '$has_index', 'args_str': '= false', 'args': ['=', 'false'], 'file_path': '@web.server', 'line_number': 70}, {'str': "if os.path.isdir($dir + '/' + $path)", 'command': 'if', 'args_str': "os.path.isdir($dir + '/' + $path)", 'args': ['os.path.isdir($dir', '+', "'/'", '+', '$path)'], 'file_path': '@web.server', 'line_number': 71}, {'str': "mem not (os.path.isdir($dir + '/' + $path))", 'command': 'mem', 'args_str': "not (os.path.isdir($dir + '/' + $path))", 'args': ['not', '(os.path.isdir($dir', '+', "'/'", '+', '$path))'], 'file_path': '<system>', 'line_number': 98}, {'str': 'gotoif tmplabelif52_2', 'command': 'gotoif', 'args_str': 'tmplabelif52_2', 'args': ['tmplabelif52_2'], 'file_path': '<system>', 'line_number': 98}, {'str': "$allowed_indexes = ['index.pashm', 'index.pit', 'index.pashm.html', 'html']", 'command': '$allowed_indexes', 'args_str': "= ['index.pashm', 'index.pit', 'index.pashm.html', 'html']", 'args': ['=', "['index.pashm',", "'index.pit',", "'index.pashm.html',", "'html']"], 'file_path': '@web.server', 'line_number': 72}, {'str': '$z = 0', 'command': '$z', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web.server', 'line_number': 73}, {'str': 'while $z < len($allowed_indexes)', 'command': 'while', 'args_str': '$z < len($allowed_indexes)', 'args': ['$z', '<', 'len($allowed_indexes)'], 'file_path': '@web.server', 'line_number': 74}, {'str': "if os.path.isfile($dir + '/' + $path + '/' + $allowed_indexes[$z])", 'command': 'if', 'args_str': "os.path.isfile($dir + '/' + $path + '/' + $allowed_indexes[$z])", 'args': ['os.path.isfile($dir', '+', "'/'", '+', '$path', '+', "'/'", '+', '$allowed_indexes[$z])'], 'file_path': '@web.server', 'line_number': 75}, {'str': "mem not (os.path.isfile($dir + '/' + $path + '/' + $allowed_indexes[$z]))", 'command': 'mem', 'args_str': "not (os.path.isfile($dir + '/' + $path + '/' + $allowed_indexes[$z]))", 'args': ['not', '(os.path.isfile($dir', '+', "'/'", '+', '$path', '+', "'/'", '+', '$allowed_indexes[$z]))'], 'file_path': '<system>', 'line_number': 104}, {'str': 'gotoif tmplabelif53_2', 'command': 'gotoif', 'args_str': 'tmplabelif53_2', 'args': ['tmplabelif53_2'], 'file_path': '<system>', 'line_number': 104}, {'str': "$has_index = $dir + '/' + $path + '/' + $allowed_indexes[$z]", 'command': '$has_index', 'args_str': "= $dir + '/' + $path + '/' + $allowed_indexes[$z]", 'args': ['=', '$dir', '+', "'/'", '+', '$path', '+', "'/'", '+', '$allowed_indexes[$z]'], 'file_path': '@web.server', 'line_number': 76}, {'str': 'break ', 'command': 'break', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 77}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 78}, {'str': 'label tmplabelif53_2', 'command': 'label', 'args_str': 'tmplabelif53_2', 'args': ['tmplabelif53_2'], 'file_path': '<system>', 'line_number': 109}, {'str': 'label tmplabelif53_end', 'command': 'label', 'args_str': 'tmplabelif53_end', 'args': ['tmplabelif53_end'], 'file_path': '<system>', 'line_number': 109}, {'str': '$z = $z + 1', 'command': '$z', 'args_str': '= $z + 1', 'args': ['=', '$z', '+', '1'], 'file_path': '@web.server', 'line_number': 79}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 80}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 81}, {'str': 'label tmplabelif52_2', 'command': 'label', 'args_str': 'tmplabelif52_2', 'args': ['tmplabelif52_2'], 'file_path': '<system>', 'line_number': 114}, {'str': 'label tmplabelif52_end', 'command': 'label', 'args_str': 'tmplabelif52_end', 'args': ['tmplabelif52_end'], 'file_path': '<system>', 'line_number': 114}, {'str': "if os.path.isfile($dir + '/' + $path) or $main != null or $has_index", 'command': 'if', 'args_str': "os.path.isfile($dir + '/' + $path) or $main != null or $has_index", 'args': ['os.path.isfile($dir', '+', "'/'", '+', '$path)', 'or', '$main', '!=', 'null', 'or', '$has_index'], 'file_path': '@web.server', 'line_number': 82}, {'str': "mem not (os.path.isfile($dir + '/' + $path) or $main != null or $has_index)", 'command': 'mem', 'args_str': "not (os.path.isfile($dir + '/' + $path) or $main != null or $has_index)", 'args': ['not', '(os.path.isfile($dir', '+', "'/'", '+', '$path)', 'or', '$main', '!=', 'null', 'or', '$has_index)'], 'file_path': '<system>', 'line_number': 117}, {'str': 'gotoif tmplabelif54_2', 'command': 'gotoif', 'args_str': 'tmplabelif54_2', 'args': ['tmplabelif54_2'], 'file_path': '<system>', 'line_number': 117}, {'str': 'if $has_index', 'command': 'if', 'args_str': '$has_index', 'args': ['$has_index'], 'file_path': '@web.server', 'line_number': 83}, {'str': 'mem not ($has_index)', 'command': 'mem', 'args_str': 'not ($has_index)', 'args': ['not', '($has_index)'], 'file_path': '<system>', 'line_number': 120}, {'str': 'gotoif tmplabelif55_2', 'command': 'gotoif', 'args_str': 'tmplabelif55_2', 'args': ['tmplabelif55_2'], 'file_path': '<system>', 'line_number': 120}, {'str': '$full_path = $has_index', 'command': '$full_path', 'args_str': '= $has_index', 'args': ['=', '$has_index'], 'file_path': '@web.server', 'line_number': 84}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 85}, {'str': 'goto tmplabelif55_end', 'command': 'goto', 'args_str': 'tmplabelif55_end', 'args': ['tmplabelif55_end'], 'file_path': '<system>', 'line_number': 124}, {'str': 'label tmplabelif55_2', 'command': 'label', 'args_str': 'tmplabelif55_2', 'args': ['tmplabelif55_2'], 'file_path': '<system>', 'line_number': 124}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 124}, {'str': 'gotoif tmplabelif55_3', 'command': 'gotoif', 'args_str': 'tmplabelif55_3', 'args': ['tmplabelif55_3'], 'file_path': '<system>', 'line_number': 124}, {'str': "$full_path = os.path.abspath($dir + '/' + $path)", 'command': '$full_path', 'args_str': "= os.path.abspath($dir + '/' + $path)", 'args': ['=', 'os.path.abspath($dir', '+', "'/'", '+', '$path)'], 'file_path': '@web.server', 'line_number': 86}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 87}, {'str': 'label tmplabelif55_3', 'command': 'label', 'args_str': 'tmplabelif55_3', 'args': ['tmplabelif55_3'], 'file_path': '<system>', 'line_number': 130}, {'str': 'label tmplabelif55_end', 'command': 'label', 'args_str': 'tmplabelif55_end', 'args': ['tmplabelif55_end'], 'file_path': '<system>', 'line_number': 130}, {'str': "$full_path = $full_path->replace('//', '/')", 'command': '$full_path', 'args_str': "= $full_path->replace('//', '/')", 'args': ['=', "$full_path->replace('//',", "'/')"], 'file_path': '@web.server', 'line_number': 88}, {'str': "$full_path = $full_path->replace('//', '/')", 'command': '$full_path', 'args_str': "= $full_path->replace('//', '/')", 'args': ['=', "$full_path->replace('//',", "'/')"], 'file_path': '@web.server', 'line_number': 89}, {'str': '$mime = mimetypes.guess_type($full_path)[0]', 'command': '$mime', 'args_str': '= mimetypes.guess_type($full_path)[0]', 'args': ['=', 'mimetypes.guess_type($full_path)[0]'], 'file_path': '@web.server', 'line_number': 90}, {'str': "if $full_path->endswith('.pashm') or $full_path->endswith('.pit') or $full_path->endswith('.pashm.html') or $main != null", 'command': 'if', 'args_str': "$full_path->endswith('.pashm') or $full_path->endswith('.pit') or $full_path->endswith('.pashm.html') or $main != null", 'args': ["$full_path->endswith('.pashm')", 'or', "$full_path->endswith('.pit')", 'or', "$full_path->endswith('.pashm.html')", 'or', '$main', '!=', 'null'], 'file_path': '@web.server', 'line_number': 91}, {'str': "mem not ($full_path->endswith('.pashm') or $full_path->endswith('.pit') or $full_path->endswith('.pashm.html') or $main != null)", 'command': 'mem', 'args_str': "not ($full_path->endswith('.pashm') or $full_path->endswith('.pit') or $full_path->endswith('.pashm.html') or $main != null)", 'args': ['not', "($full_path->endswith('.pashm')", 'or', "$full_path->endswith('.pit')", 'or', "$full_path->endswith('.pashm.html')", 'or', '$main', '!=', 'null)'], 'file_path': '<system>', 'line_number': 136}, {'str': 'gotoif tmplabelif56_2', 'command': 'gotoif', 'args_str': 'tmplabelif56_2', 'args': ['tmplabelif56_2'], 'file_path': '<system>', 'line_number': 136}, {'str': 'if $main != null', 'command': 'if', 'args_str': '$main != null', 'args': ['$main', '!=', 'null'], 'file_path': '@web.server', 'line_number': 92}, {'str': 'mem not ($main != null)', 'command': 'mem', 'args_str': 'not ($main != null)', 'args': ['not', '($main', '!=', 'null)'], 'file_path': '<system>', 'line_number': 139}, {'str': 'gotoif tmplabelif57_2', 'command': 'gotoif', 'args_str': 'tmplabelif57_2', 'args': ['tmplabelif57_2'], 'file_path': '<system>', 'line_number': 139}, {'str': '$full_path = $main', 'command': '$full_path', 'args_str': '= $main', 'args': ['=', '$main'], 'file_path': '@web.server', 'line_number': 93}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 94}, {'str': 'label tmplabelif57_2', 'command': 'label', 'args_str': 'tmplabelif57_2', 'args': ['tmplabelif57_2'], 'file_path': '<system>', 'line_number': 143}, {'str': 'label tmplabelif57_end', 'command': 'label', 'args_str': 'tmplabelif57_end', 'args': ['tmplabelif57_end'], 'file_path': '<system>', 'line_number': 143}, {'str': '$command = [$sys.pashmakexe, repr($full_path)]', 'command': '$command', 'args_str': '= [$sys.pashmakexe, repr($full_path)]', 'args': ['=', '[$sys.pashmakexe,', 'repr($full_path)]'], 'file_path': '@web.server', 'line_number': 95}, {'str': "$f = open($full_path, 'r')", 'command': '$f', 'args_str': "= open($full_path, 'r')", 'args': ['=', 'open($full_path,', "'r')"], 'file_path': '@web.server', 'line_number': 96}, {'str': '$content = $f->read()', 'command': '$content', 'args_str': '= $f->read()', 'args': ['=', '$f->read()'], 'file_path': '@web.server', 'line_number': 97}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 98}, {'str': "if $content->split('\\n', 1)[0]->endswith('@pit') and $content->split('\\n', 1)[0]->startswith('#!/')", 'command': 'if', 'args_str': "$content->split('\\n', 1)[0]->endswith('@pit') and $content->split('\\n', 1)[0]->startswith('#!/')", 'args': ["$content->split('\\n',", "1)[0]->endswith('@pit')", 'and', "$content->split('\\n',", "1)[0]->startswith('#!/')"], 'file_path': '@web.server', 'line_number': 99}, {'str': "mem not ($content->split('\\n', 1)[0]->endswith('@pit') and $content->split('\\n', 1)[0]->startswith('#!/'))", 'command': 'mem', 'args_str': "not ($content->split('\\n', 1)[0]->endswith('@pit') and $content->split('\\n', 1)[0]->startswith('#!/'))", 'args': ['not', "($content->split('\\n',", "1)[0]->endswith('@pit')", 'and', "$content->split('\\n',", "1)[0]->startswith('#!/'))"], 'file_path': '<system>', 'line_number': 150}, {'str': 'gotoif tmplabelif58_2', 'command': 'gotoif', 'args_str': 'tmplabelif58_2', 'args': ['tmplabelif58_2'], 'file_path': '<system>', 'line_number': 150}, {'str': "$command->insert (1, '@pit')", 'command': '$command->insert', 'args_str': "(1, '@pit')", 'args': ['(1,', "'@pit')"], 'file_path': '@web.server', 'line_number': 100}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 101}, {'str': 'label tmplabelif58_2', 'command': 'label', 'args_str': 'tmplabelif58_2', 'args': ['tmplabelif58_2'], 'file_path': '<system>', 'line_number': 154}, {'str': 'label tmplabelif58_end', 'command': 'label', 'args_str': 'tmplabelif58_end', 'args': ['tmplabelif58_end'], 'file_path': '<system>', 'line_number': 154}, {'str': '$env = {                    "PASHMAKPATH": $os.env[\'PASHMAKPATH\'],                    "REQUEST_URI": $handler->path,                    "REQUEST_METHOD": $request_method,                    "REMOTE_ADDR": $handler->client_address[0],                    "REMOTE_PORT": str($handler->client_address[1]),                    "SERVER_PORT": str($handler->server->server_port),                    "SERVER_SOFTWARE": \'Pashmak Builtin Web Server (\' + $sys.pashmakinfo[\'version\'] + \')\',                    "SERVER_SIGNATURE": \'Pashmak Builtin Web Server (\' + $sys.pashmakinfo[\'version\'] + \')\',                    \'DOCUMENT_ROOT\': $dir,                    \'CONTEXT_DOCUMENT_ROOT\': $dir,                    \'SCRIPT_FILENAME\': $full_path,                    \'SCRIPT_NAME\': $path,                    \'QUERY_STRING\': $query_string,                    "SERVER_PROTOCOL": $handler->protocol_version,                    "REQUEST_SCHEME": \'http\',                    "SERVER_NAME": $host,                    "SERVER_ADDR": \'127.0.0.1\' if $host == \'localhost\' else $host,                }', 'command': '$env', 'args_str': '= {                    "PASHMAKPATH": $os.env[\'PASHMAKPATH\'],                    "REQUEST_URI": $handler->path,                    "REQUEST_METHOD": $request_method,                    "REMOTE_ADDR": $handler->client_address[0],                    "REMOTE_PORT": str($handler->client_address[1]),                    "SERVER_PORT": str($handler->server->server_port),                    "SERVER_SOFTWARE": \'Pashmak Builtin Web Server (\' + $sys.pashmakinfo[\'version\'] + \')\',                    "SERVER_SIGNATURE": \'Pashmak Builtin Web Server (\' + $sys.pashmakinfo[\'version\'] + \')\',                    \'DOCUMENT_ROOT\': $dir,                    \'CONTEXT_DOCUMENT_ROOT\': $dir,                    \'SCRIPT_FILENAME\': $full_path,                    \'SCRIPT_NAME\': $path,                    \'QUERY_STRING\': $query_string,                    "SERVER_PROTOCOL": $handler->protocol_version,                    "REQUEST_SCHEME": \'http\',                    "SERVER_NAME": $host,                    "SERVER_ADDR": \'127.0.0.1\' if $host == \'localhost\' else $host,                }', 'args': ['=', '{', '"PASHMAKPATH":', "$os.env['PASHMAKPATH'],", '"REQUEST_URI":', '$handler->path,', '"REQUEST_METHOD":', '$request_method,', '"REMOTE_ADDR":', '$handler->client_address[0],', '"REMOTE_PORT":', 'str($handler->client_address[1]),', '"SERVER_PORT":', 'str($handler->server->server_port),', '"SERVER_SOFTWARE":', "'Pashmak", 'Builtin', 'Web', 'Server', "('", '+', "$sys.pashmakinfo['version']", '+', "')',", '"SERVER_SIGNATURE":', "'Pashmak", 'Builtin', 'Web', 'Server', "('", '+', "$sys.pashmakinfo['version']", '+', "')',", "'DOCUMENT_ROOT':", '$dir,', "'CONTEXT_DOCUMENT_ROOT':", '$dir,', "'SCRIPT_FILENAME':", '$full_path,', "'SCRIPT_NAME':", '$path,', "'QUERY_STRING':", '$query_string,', '"SERVER_PROTOCOL":', '$handler->protocol_version,', '"REQUEST_SCHEME":', "'http',", '"SERVER_NAME":', '$host,', '"SERVER_ADDR":', "'127.0.0.1'", 'if', '$host', '==', "'localhost'", 'else', '$host,', '}'], 'file_path': '@web.server', 'line_number': 102}, {'str': "$request_headers = str($handler->headers)->strip()->split('\\n')", 'command': '$request_headers', 'args_str': "= str($handler->headers)->strip()->split('\\n')", 'args': ['=', "str($handler->headers)->strip()->split('\\n')"], 'file_path': '@web.server', 'line_number': 103}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web.server', 'line_number': 104}, {'str': 'while $i < len($request_headers)', 'command': 'while', 'args_str': '$i < len($request_headers)', 'args': ['$i', '<', 'len($request_headers)'], 'file_path': '@web.server', 'line_number': 105}, {'str': "$key = $request_headers[$i]->split(':', 1)", 'command': '$key', 'args_str': "= $request_headers[$i]->split(':', 1)", 'args': ['=', "$request_headers[$i]->split(':',", '1)'], 'file_path': '@web.server', 'line_number': 106}, {'str': '$value = $key[-1]', 'command': '$value', 'args_str': '= $key[-1]', 'args': ['=', '$key[-1]'], 'file_path': '@web.server', 'line_number': 107}, {'str': '$key = $key[0]', 'command': '$key', 'args_str': '= $key[0]', 'args': ['=', '$key[0]'], 'file_path': '@web.server', 'line_number': 108}, {'str': "$key = 'HTTP_' + $key->replace('-', '_')->upper()", 'command': '$key', 'args_str': "= 'HTTP_' + $key->replace('-', '_')->upper()", 'args': ['=', "'HTTP_'", '+', "$key->replace('-',", "'_')->upper()"], 'file_path': '@web.server', 'line_number': 109}, {'str': '$env[$key] = $value->strip()', 'command': '$env[$key]', 'args_str': '= $value->strip()', 'args': ['=', '$value->strip()'], 'file_path': '@web.server', 'line_number': 110}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web.server', 'line_number': 111}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 112}, {'str': "$post_data = ''", 'command': '$post_data', 'args_str': "= ''", 'args': ['=', "''"], 'file_path': '@web.server', 'line_number': 113}, {'str': "if $request_method == 'POST'", 'command': 'if', 'args_str': "$request_method == 'POST'", 'args': ['$request_method', '==', "'POST'"], 'file_path': '@web.server', 'line_number': 114}, {'str': "mem not ($request_method == 'POST')", 'command': 'mem', 'args_str': "not ($request_method == 'POST')", 'args': ['not', '($request_method', '==', "'POST')"], 'file_path': '<system>', 'line_number': 169}, {'str': 'gotoif tmplabelif59_2', 'command': 'gotoif', 'args_str': 'tmplabelif59_2', 'args': ['tmplabelif59_2'], 'file_path': '<system>', 'line_number': 169}, {'str': "$post_data = $handler->rfile->read(int($env['HTTP_CONTENT_LENGTH']))", 'command': '$post_data', 'args_str': "= $handler->rfile->read(int($env['HTTP_CONTENT_LENGTH']))", 'args': ['=', "$handler->rfile->read(int($env['HTTP_CONTENT_LENGTH']))"], 'file_path': '@web.server', 'line_number': 115}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 116}, {'str': 'label tmplabelif59_2', 'command': 'label', 'args_str': 'tmplabelif59_2', 'args': ['tmplabelif59_2'], 'file_path': '<system>', 'line_number': 173}, {'str': 'label tmplabelif59_end', 'command': 'label', 'args_str': 'tmplabelif59_end', 'args': ['tmplabelif59_end'], 'file_path': '<system>', 'line_number': 173}, {'str': "$result = subprocess.Popen(' '->join($command), stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, env=$env, shell=true)", 'command': '$result', 'args_str': "= subprocess.Popen(' '->join($command), stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, env=$env, shell=true)", 'args': ['=', "subprocess.Popen('", "'->join($command),", 'stdout=subprocess.PIPE,', 'stderr=subprocess.PIPE,', 'stdin=subprocess.PIPE,', 'env=$env,', 'shell=true)'], 'file_path': '@web.server', 'line_number': 117}, {'str': '$result = $result->communicate(input=$post_data)', 'command': '$result', 'args_str': '= $result->communicate(input=$post_data)', 'args': ['=', '$result->communicate(input=$post_data)'], 'file_path': '@web.server', 'line_number': 118}, {'str': '$result = $result[0]', 'command': '$result', 'args_str': '= $result[0]', 'args': ['=', '$result[0]'], 'file_path': '@web.server', 'line_number': 119}, {'str': '$headers = []', 'command': '$headers', 'args_str': '= []', 'args': ['=', '[]'], 'file_path': '@web.server', 'line_number': 120}, {'str': "$tmp_cookies = str($result->decode())->strip()->split('\\n\\n', 1)[0]->strip()->split('\\n')", 'command': '$tmp_cookies', 'args_str': "= str($result->decode())->strip()->split('\\n\\n', 1)[0]->strip()->split('\\n')", 'args': ['=', "str($result->decode())->strip()->split('\\n\\n',", "1)[0]->strip()->split('\\n')"], 'file_path': '@web.server', 'line_number': 121}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web.server', 'line_number': 122}, {'str': '$res_code = 200', 'command': '$res_code', 'args_str': '= 200', 'args': ['=', '200'], 'file_path': '@web.server', 'line_number': 123}, {'str': 'while $i < len($tmp_cookies)', 'command': 'while', 'args_str': '$i < len($tmp_cookies)', 'args': ['$i', '<', 'len($tmp_cookies)'], 'file_path': '@web.server', 'line_number': 124}, {'str': "$key = $tmp_cookies[$i]->split(':', 1)", 'command': '$key', 'args_str': "= $tmp_cookies[$i]->split(':', 1)", 'args': ['=', "$tmp_cookies[$i]->split(':',", '1)'], 'file_path': '@web.server', 'line_number': 125}, {'str': '$value = $key[-1]', 'command': '$value', 'args_str': '= $key[-1]', 'args': ['=', '$key[-1]'], 'file_path': '@web.server', 'line_number': 126}, {'str': '$key = $key[0]', 'command': '$key', 'args_str': '= $key[0]', 'args': ['=', '$key[0]'], 'file_path': '@web.server', 'line_number': 127}, {'str': "if $key == 'Status'", 'command': 'if', 'args_str': "$key == 'Status'", 'args': ['$key', '==', "'Status'"], 'file_path': '@web.server', 'line_number': 128}, {'str': "mem not ($key == 'Status')", 'command': 'mem', 'args_str': "not ($key == 'Status')", 'args': ['not', '($key', '==', "'Status')"], 'file_path': '<system>', 'line_number': 187}, {'str': 'gotoif tmplabelif60_2', 'command': 'gotoif', 'args_str': 'tmplabelif60_2', 'args': ['tmplabelif60_2'], 'file_path': '<system>', 'line_number': 187}, {'str': '$res_code = int($value)', 'command': '$res_code', 'args_str': '= int($value)', 'args': ['=', 'int($value)'], 'file_path': '@web.server', 'line_number': 129}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 130}, {'str': 'goto tmplabelif60_end', 'command': 'goto', 'args_str': 'tmplabelif60_end', 'args': ['tmplabelif60_end'], 'file_path': '<system>', 'line_number': 191}, {'str': 'label tmplabelif60_2', 'command': 'label', 'args_str': 'tmplabelif60_2', 'args': ['tmplabelif60_2'], 'file_path': '<system>', 'line_number': 191}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 191}, {'str': 'gotoif tmplabelif60_3', 'command': 'gotoif', 'args_str': 'tmplabelif60_3', 'args': ['tmplabelif60_3'], 'file_path': '<system>', 'line_number': 191}, {'str': '$headers->append ([$key->strip(), $value->strip()])', 'command': '$headers->append', 'args_str': '([$key->strip(), $value->strip()])', 'args': ['([$key->strip(),', '$value->strip()])'], 'file_path': '@web.server', 'line_number': 131}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 132}, {'str': 'label tmplabelif60_3', 'command': 'label', 'args_str': 'tmplabelif60_3', 'args': ['tmplabelif60_3'], 'file_path': '<system>', 'line_number': 197}, {'str': 'label tmplabelif60_end', 'command': 'label', 'args_str': 'tmplabelif60_end', 'args': ['tmplabelif60_end'], 'file_path': '<system>', 'line_number': 197}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web.server', 'line_number': 133}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 134}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web.server', 'line_number': 135}, {'str': '$handler->send_response ($res_code)', 'command': '$handler->send_response', 'args_str': '($res_code)', 'args': ['($res_code)'], 'file_path': '@web.server', 'line_number': 136}, {'str': 'while $i < len($headers)', 'command': 'while', 'args_str': '$i < len($headers)', 'args': ['$i', '<', 'len($headers)'], 'file_path': '@web.server', 'line_number': 137}, {'str': '$handler->send_header ($headers[$i][0], $headers[$i][1])', 'command': '$handler->send_header', 'args_str': '($headers[$i][0], $headers[$i][1])', 'args': ['($headers[$i][0],', '$headers[$i][1])'], 'file_path': '@web.server', 'line_number': 138}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web.server', 'line_number': 139}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 140}, {'str': '$handler->end_headers ()', 'command': '$handler->end_headers', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 141}, {'str': "$handler->wfile->write (                    str($result->decode())->strip()->split('\\n\\n', 1)[-1]->encode()                )", 'command': '$handler->wfile->write', 'args_str': "(                    str($result->decode())->strip()->split('\\n\\n', 1)[-1]->encode()                )", 'args': ['(', "str($result->decode())->strip()->split('\\n\\n',", '1)[-1]->encode()', ')'], 'file_path': '@web.server', 'line_number': 142}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 143}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 144}, {'str': 'label tmplabelif56_2', 'command': 'label', 'args_str': 'tmplabelif56_2', 'args': ['tmplabelif56_2'], 'file_path': '<system>', 'line_number': 211}, {'str': 'label tmplabelif56_end', 'command': 'label', 'args_str': 'tmplabelif56_end', 'args': ['tmplabelif56_end'], 'file_path': '<system>', 'line_number': 211}, {'str': 'try handle_file_error', 'command': 'try', 'args_str': 'handle_file_error', 'args': ['handle_file_error'], 'file_path': '@web.server', 'line_number': 145}, {'str': "$f = open($full_path, 'r')", 'command': '$f', 'args_str': "= open($full_path, 'r')", 'args': ['=', 'open($full_path,', "'r')"], 'file_path': '@web.server', 'line_number': 146}, {'str': '$content = $f->read()', 'command': '$content', 'args_str': '= $f->read()', 'args': ['=', '$f->read()'], 'file_path': '@web.server', 'line_number': 147}, {'str': '$f->read ()', 'command': '$f->read', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 148}, {'str': 'endtry ', 'command': 'endtry', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 149}, {'str': 'goto after_handle_file_error', 'command': 'goto', 'args_str': 'after_handle_file_error', 'args': ['after_handle_file_error'], 'file_path': '@web.server', 'line_number': 150}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0}, {'str': 'label handle_file_error', 'command': 'label', 'args_str': 'handle_file_error', 'args': ['handle_file_error'], 'file_path': '@web.server', 'line_number': 150}, {'str': '$handler->send_response (403)', 'command': '$handler->send_response', 'args_str': '(403)', 'args': ['(403)'], 'file_path': '@web.server', 'line_number': 151}, {'str': '$handler->send_header ("Content-type", "text/html")', 'command': '$handler->send_header', 'args_str': '("Content-type", "text/html")', 'args': ['("Content-type",', '"text/html")'], 'file_path': '@web.server', 'line_number': 152}, {'str': '$handler->end_headers ()', 'command': '$handler->end_headers', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 153}, {'str': '$handler->wfile->write (bytes(\'403 - Access Denied\', "utf-8"))', 'command': '$handler->wfile->write', 'args_str': '(bytes(\'403 - Access Denied\', "utf-8"))', 'args': ["(bytes('403", '-', 'Access', "Denied',", '"utf-8"))'], 'file_path': '@web.server', 'line_number': 154}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 155}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0}, {'str': 'label after_handle_file_error', 'command': 'label', 'args_str': 'after_handle_file_error', 'args': ['after_handle_file_error'], 'file_path': '@web.server', 'line_number': 156}, {'str': '$handler->send_response (200)', 'command': '$handler->send_response', 'args_str': '(200)', 'args': ['(200)'], 'file_path': '@web.server', 'line_number': 157}, {'str': 'if $mime == null', 'command': 'if', 'args_str': '$mime == null', 'args': ['$mime', '==', 'null'], 'file_path': '@web.server', 'line_number': 158}, {'str': 'mem not ($mime == null)', 'command': 'mem', 'args_str': 'not ($mime == null)', 'args': ['not', '($mime', '==', 'null)'], 'file_path': '<system>', 'line_number': 230}, {'str': 'gotoif tmplabelif61_2', 'command': 'gotoif', 'args_str': 'tmplabelif61_2', 'args': ['tmplabelif61_2'], 'file_path': '<system>', 'line_number': 230}, {'str': "$mime = 'text/plain'", 'command': '$mime', 'args_str': "= 'text/plain'", 'args': ['=', "'text/plain'"], 'file_path': '@web.server', 'line_number': 159}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 160}, {'str': 'label tmplabelif61_2', 'command': 'label', 'args_str': 'tmplabelif61_2', 'args': ['tmplabelif61_2'], 'file_path': '<system>', 'line_number': 234}, {'str': 'label tmplabelif61_end', 'command': 'label', 'args_str': 'tmplabelif61_end', 'args': ['tmplabelif61_end'], 'file_path': '<system>', 'line_number': 234}, {'str': '$handler->send_header ("Content-type", $mime)', 'command': '$handler->send_header', 'args_str': '("Content-type", $mime)', 'args': ['("Content-type",', '$mime)'], 'file_path': '@web.server', 'line_number': 161}, {'str': '$handler->end_headers ()', 'command': '$handler->end_headers', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 162}, {'str': '$handler->wfile->write (bytes($content, "utf-8"))', 'command': '$handler->wfile->write', 'args_str': '(bytes($content, "utf-8"))', 'args': ['(bytes($content,', '"utf-8"))'], 'file_path': '@web.server', 'line_number': 163}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 164}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 165}, {'str': 'goto tmplabelif54_end', 'command': 'goto', 'args_str': 'tmplabelif54_end', 'args': ['tmplabelif54_end'], 'file_path': '<system>', 'line_number': 241}, {'str': 'label tmplabelif54_2', 'command': 'label', 'args_str': 'tmplabelif54_2', 'args': ['tmplabelif54_2'], 'file_path': '<system>', 'line_number': 241}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 241}, {'str': 'gotoif tmplabelif54_3', 'command': 'gotoif', 'args_str': 'tmplabelif54_3', 'args': ['tmplabelif54_3'], 'file_path': '<system>', 'line_number': 241}, {'str': '$handler->send_response (404)', 'command': '$handler->send_response', 'args_str': '(404)', 'args': ['(404)'], 'file_path': '@web.server', 'line_number': 166}, {'str': '$handler->send_header ("Content-type", "text/html")', 'command': '$handler->send_header', 'args_str': '("Content-type", "text/html")', 'args': ['("Content-type",', '"text/html")'], 'file_path': '@web.server', 'line_number': 167}, {'str': '$handler->end_headers ()', 'command': '$handler->end_headers', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 168}, {'str': '$handler->wfile->write (bytes(\'404 - Not Found\', "utf-8"))', 'command': '$handler->wfile->write', 'args_str': '(bytes(\'404 - Not Found\', "utf-8"))', 'args': ["(bytes('404", '-', 'Not', "Found',", '"utf-8"))'], 'file_path': '@web.server', 'line_number': 169}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 170}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 171}, {'str': 'label tmplabelif54_3', 'command': 'label', 'args_str': 'tmplabelif54_3', 'args': ['tmplabelif54_3'], 'file_path': '<system>', 'line_number': 251}, {'str': 'label tmplabelif54_end', 'command': 'label', 'args_str': 'tmplabelif54_end', 'args': ['tmplabelif54_end'], 'file_path': '<system>', 'line_number': 251}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 172}, {'str': '$server->set_get (get_handler)', 'command': '$server->set_get', 'args_str': '(get_handler)', 'args': ['(get_handler)'], 'file_path': '@web.server', 'line_number': 173}, {'str': '$server->set_post (post_handler)', 'command': '$server->set_post', 'args_str': '(post_handler)', 'args': ['(post_handler)'], 'file_path': '@web.server', 'line_number': 174}, {'str': "println ('Serving the development server on http://' + $host + ':' + str($port) + ' - Do not use this on production')", 'command': 'println', 'args_str': "('Serving the development server on http://' + $host + ':' + str($port) + ' - Do not use this on production')", 'args': ["('Serving", 'the', 'development', 'server', 'on', "http://'", '+', '$host', '+', "':'", '+', 'str($port)', '+', "'", '-', 'Do', 'not', 'use', 'this', 'on', "production')"], 'file_path': '@web.server', 'line_number': 175}, {'str': '$server->serve ()', 'command': '$server->serve', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 176}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 177}, {'str': 'label tmplabelif46_2', 'command': 'label', 'args_str': 'tmplabelif46_2', 'args': ['tmplabelif46_2'], 'file_path': '<system>', 'line_number': 259}, {'str': 'label tmplabelif46_end', 'command': 'label', 'args_str': 'tmplabelif46_end', 'args': ['tmplabelif46_end'], 'file_path': '<system>', 'line_number': 259}]
modules["web.session"] = [{'str': 'namespace web', 'command': 'namespace', 'args_str': 'web', 'args': ['web'], 'file_path': '@web.session', 'line_number': 1}, {'str': "$session_dir = '/tmp'", 'command': '$session_dir', 'args_str': "= '/tmp'", 'args': ['=', "'/tmp'"], 'file_path': '@web.session', 'line_number': 2}, {'str': '@doc "    Generates a random session Id and returns it.    "', 'command': '@doc', 'args_str': '"    Generates a random session Id and returns it.    "', 'args': ['"', 'Generates', 'a', 'random', 'session', 'Id', 'and', 'returns', 'it.', '"'], 'file_path': '@web.session', 'line_number': 3}, {'str': 'func string::generate_random_session_id()', 'command': 'func', 'args_str': 'string::generate_random_session_id()', 'args': ['string::generate_random_session_id()'], 'file_path': '@web.session', 'line_number': 4}, {'str': "$uuid = py_load_module('uuid')", 'command': '$uuid', 'args_str': "= py_load_module('uuid')", 'args': ['=', "py_load_module('uuid')"], 'file_path': '@web.session', 'line_number': 5}, {'str': "$abc = 'abcdefghijknmlopqrstuvwxyz'", 'command': '$abc', 'args_str': "= 'abcdefghijknmlopqrstuvwxyz'", 'args': ['=', "'abcdefghijknmlopqrstuvwxyz'"], 'file_path': '@web.session', 'line_number': 6}, {'str': '$abc = $abc + $abc->upper()', 'command': '$abc', 'args_str': '= $abc + $abc->upper()', 'args': ['=', '$abc', '+', '$abc->upper()'], 'file_path': '@web.session', 'line_number': 7}, {'str': "$abc = $abc + '0123456789'", 'command': '$abc', 'args_str': "= $abc + '0123456789'", 'args': ['=', '$abc', '+', "'0123456789'"], 'file_path': '@web.session', 'line_number': 8}, {'str': "$a = str($uuid->uuid4())->replace('-', '')", 'command': '$a', 'args_str': "= str($uuid->uuid4())->replace('-', '')", 'args': ['=', "str($uuid->uuid4())->replace('-',", "'')"], 'file_path': '@web.session', 'line_number': 9}, {'str': "$t = str(time.time()).replace('.', '')", 'command': '$t', 'args_str': "= str(time.time()).replace('.', '')", 'args': ['=', "str(time.time()).replace('.',", "'')"], 'file_path': '@web.session', 'line_number': 10}, {'str': "$r = str(random.random())->replace('.', '')", 'command': '$r', 'args_str': "= str(random.random())->replace('.', '')", 'args': ['=', "str(random.random())->replace('.',", "'')"], 'file_path': '@web.session', 'line_number': 11}, {'str': '$result = $a + $t + $r + $abc', 'command': '$result', 'args_str': '= $a + $t + $r + $abc', 'args': ['=', '$a', '+', '$t', '+', '$r', '+', '$abc'], 'file_path': '@web.session', 'line_number': 12}, {'str': '$result = $result * 5', 'command': '$result', 'args_str': '= $result * 5', 'args': ['=', '$result', '*', '5'], 'file_path': '@web.session', 'line_number': 13}, {'str': "$result = ''->join(random.sample($result*3, len($result)*2))", 'command': '$result', 'args_str': "= ''->join(random.sample($result*3, len($result)*2))", 'args': ['=', "''->join(random.sample($result*3,", 'len($result)*2))'], 'file_path': '@web.session', 'line_number': 14}, {'str': "$result = $result->replace(' ', '')->replace('<', '')->replace('>', '')->replace('-', '')", 'command': '$result', 'args_str': "= $result->replace(' ', '')->replace('<', '')->replace('>', '')->replace('-', '')", 'args': ['=', "$result->replace('", "',", "'')->replace('<',", "'')->replace('>',", "'')->replace('-',", "'')"], 'file_path': '@web.session', 'line_number': 15}, {'str': "return 'pashmaksession' + $result[:200]", 'command': 'return', 'args_str': "'pashmaksession' + $result[:200]", 'args': ["'pashmaksession'", '+', '$result[:200]'], 'file_path': '@web.session', 'line_number': 16}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 17}, {'str': '@doc "Gets a session id and validates it. if it is valid, returns that.\\n    But if is not valid, returns a new id.    "', 'command': '@doc', 'args_str': '"Gets a session id and validates it. if it is valid, returns that.\\n    But if is not valid, returns a new id.    "', 'args': ['"Gets', 'a', 'session', 'id', 'and', 'validates', 'it.', 'if', 'it', 'is', 'valid,', 'returns', 'that.\\n', 'But', 'if', 'is', 'not', 'valid,', 'returns', 'a', 'new', 'id.', '"'], 'file_path': '@web.session', 'line_number': 18}, {'str': 'func string::validate_session_id(string $id)', 'command': 'func', 'args_str': 'string::validate_session_id(string $id)', 'args': ['string::validate_session_id(string', '$id)'], 'file_path': '@web.session', 'line_number': 19}, {'str': "if (            len($id) != 214 or             '.' in $id or             '/' in $id or             '\\\\' in $id or             '\\n' in $id        )", 'command': 'if', 'args_str': "(            len($id) != 214 or             '.' in $id or             '/' in $id or             '\\\\' in $id or             '\\n' in $id        )", 'args': ['(', 'len($id)', '!=', '214', 'or', "'.'", 'in', '$id', 'or', "'/'", 'in', '$id', 'or', "'\\\\'", 'in', '$id', 'or', "'\\n'", 'in', '$id', ')'], 'file_path': '@web.session', 'line_number': 20}, {'str': "mem not ((            len($id) != 214 or             '.' in $id or             '/' in $id or             '\\\\' in $id or             '\\n' in $id        ))", 'command': 'mem', 'args_str': "not ((            len($id) != 214 or             '.' in $id or             '/' in $id or             '\\\\' in $id or             '\\n' in $id        ))", 'args': ['not', '((', '', '', '', '', '', '', '', '', '', '', '', 'len($id)', '!=', '214', 'or', '', '', '', '', '', '', '', '', '', '', '', '', "'.'", 'in', '$id', 'or', '', '', '', '', '', '', '', '', '', '', '', '', "'/'", 'in', '$id', 'or', '', '', '', '', '', '', '', '', '', '', '', '', "'\\\\'", 'in', '$id', 'or', '', '', '', '', '', '', '', '', '', '', '', '', "'\\n'", 'in', '$id', '', '', '', '', '', '', '', '))'], 'file_path': '<system>', 'line_number': 19}, {'str': 'gotoif tmplabelif62_2', 'command': 'gotoif', 'args_str': 'tmplabelif62_2', 'args': ['tmplabelif62_2'], 'file_path': '<system>', 'line_number': 19}, {'str': 'return generate_random_session_id()', 'command': 'return', 'args_str': 'generate_random_session_id()', 'args': ['generate_random_session_id()'], 'file_path': '@web.session', 'line_number': 21}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 22}, {'str': 'label tmplabelif62_2', 'command': 'label', 'args_str': 'tmplabelif62_2', 'args': ['tmplabelif62_2'], 'file_path': '<system>', 'line_number': 23}, {'str': 'label tmplabelif62_end', 'command': 'label', 'args_str': 'tmplabelif62_end', 'args': ['tmplabelif62_end'], 'file_path': '<system>', 'line_number': 23}, {'str': 'return $id', 'command': 'return', 'args_str': '$id', 'args': ['$id'], 'file_path': '@web.session', 'line_number': 23}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 24}, {'str': '@doc "    Writes a new session and returns the ID.\\n    Also can get a optional custom ID.    Also can get a optional second argument named default value for session.    "', 'command': '@doc', 'args_str': '"    Writes a new session and returns the ID.\\n    Also can get a optional custom ID.    Also can get a optional second argument named default value for session.    "', 'args': ['"', 'Writes', 'a', 'new', 'session', 'and', 'returns', 'the', 'ID.\\n', 'Also', 'can', 'get', 'a', 'optional', 'custom', 'ID.', 'Also', 'can', 'get', 'a', 'optional', 'second', 'argument', 'named', 'default', 'value', 'for', 'session.', '"'], 'file_path': '@web.session', 'line_number': 25}, {'str': 'func string::write_session(string $custom_id=null, dict $default_value={})', 'command': 'func', 'args_str': 'string::write_session(string $custom_id=null, dict $default_value={})', 'args': ['string::write_session(string', '$custom_id=null,', 'dict', '$default_value={})'], 'file_path': '@web.session', 'line_number': 26}, {'str': 'if $custom_id is null', 'command': 'if', 'args_str': '$custom_id is null', 'args': ['$custom_id', 'is', 'null'], 'file_path': '@web.session', 'line_number': 27}, {'str': 'mem not ($custom_id is null)', 'command': 'mem', 'args_str': 'not ($custom_id is null)', 'args': ['not', '($custom_id', 'is', 'null)'], 'file_path': '<system>', 'line_number': 30}, {'str': 'gotoif tmplabelif63_2', 'command': 'gotoif', 'args_str': 'tmplabelif63_2', 'args': ['tmplabelif63_2'], 'file_path': '<system>', 'line_number': 30}, {'str': '$custom_id = generate_random_session_id()', 'command': '$custom_id', 'args_str': '= generate_random_session_id()', 'args': ['=', 'generate_random_session_id()'], 'file_path': '@web.session', 'line_number': 28}, {'str': "while os.path.isfile($session_dir + '/' + $custom_id)", 'command': 'while', 'args_str': "os.path.isfile($session_dir + '/' + $custom_id)", 'args': ['os.path.isfile($session_dir', '+', "'/'", '+', '$custom_id)'], 'file_path': '@web.session', 'line_number': 29}, {'str': '$custom_id = generate_random_session_id()', 'command': '$custom_id', 'args_str': '= generate_random_session_id()', 'args': ['=', 'generate_random_session_id()'], 'file_path': '@web.session', 'line_number': 30}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 31}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 32}, {'str': 'label tmplabelif63_2', 'command': 'label', 'args_str': 'tmplabelif63_2', 'args': ['tmplabelif63_2'], 'file_path': '<system>', 'line_number': 37}, {'str': 'label tmplabelif63_end', 'command': 'label', 'args_str': 'tmplabelif63_end', 'args': ['tmplabelif63_end'], 'file_path': '<system>', 'line_number': 37}, {'str': "$path = $session_dir + '/' + $custom_id", 'command': '$path', 'args_str': "= $session_dir + '/' + $custom_id", 'args': ['=', '$session_dir', '+', "'/'", '+', '$custom_id'], 'file_path': '@web.session', 'line_number': 33}, {'str': "$f = open($path, 'wb')", 'command': '$f', 'args_str': "= open($path, 'wb')", 'args': ['=', 'open($path,', "'wb')"], 'file_path': '@web.session', 'line_number': 34}, {'str': 'pickle.dump ($default_value, $f)', 'command': 'pickle.dump', 'args_str': '($default_value, $f)', 'args': ['($default_value,', '$f)'], 'file_path': '@web.session', 'line_number': 35}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@web.session', 'line_number': 36}, {'str': 'return $custom_id', 'command': 'return', 'args_str': '$custom_id', 'args': ['$custom_id'], 'file_path': '@web.session', 'line_number': 37}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 38}, {'str': '@doc "    Loads the session dictionary by unique id.    "', 'command': '@doc', 'args_str': '"    Loads the session dictionary by unique id.    "', 'args': ['"', 'Loads', 'the', 'session', 'dictionary', 'by', 'unique', 'id.', '"'], 'file_path': '@web.session', 'line_number': 39}, {'str': 'func dict::load_session_by_id(string $id)', 'command': 'func', 'args_str': 'dict::load_session_by_id(string $id)', 'args': ['dict::load_session_by_id(string', '$id)'], 'file_path': '@web.session', 'line_number': 40}, {'str': '$id = validate_session_id($id)', 'command': '$id', 'args_str': '= validate_session_id($id)', 'args': ['=', 'validate_session_id($id)'], 'file_path': '@web.session', 'line_number': 41}, {'str': "if not os.path.isfile($session_dir + '/' + $id)", 'command': 'if', 'args_str': "not os.path.isfile($session_dir + '/' + $id)", 'args': ['not', 'os.path.isfile($session_dir', '+', "'/'", '+', '$id)'], 'file_path': '@web.session', 'line_number': 42}, {'str': "mem not (not os.path.isfile($session_dir + '/' + $id))", 'command': 'mem', 'args_str': "not (not os.path.isfile($session_dir + '/' + $id))", 'args': ['not', '(not', 'os.path.isfile($session_dir', '+', "'/'", '+', '$id))'], 'file_path': '<system>', 'line_number': 49}, {'str': 'gotoif tmplabelif64_2', 'command': 'gotoif', 'args_str': 'tmplabelif64_2', 'args': ['tmplabelif64_2'], 'file_path': '<system>', 'line_number': 49}, {'str': 'write_session ($id)', 'command': 'write_session', 'args_str': '($id)', 'args': ['($id)'], 'file_path': '@web.session', 'line_number': 43}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 44}, {'str': 'label tmplabelif64_2', 'command': 'label', 'args_str': 'tmplabelif64_2', 'args': ['tmplabelif64_2'], 'file_path': '<system>', 'line_number': 53}, {'str': 'label tmplabelif64_end', 'command': 'label', 'args_str': 'tmplabelif64_end', 'args': ['tmplabelif64_end'], 'file_path': '<system>', 'line_number': 53}, {'str': "$f = open($session_dir + '/' + $id, 'rb')", 'command': '$f', 'args_str': "= open($session_dir + '/' + $id, 'rb')", 'args': ['=', 'open($session_dir', '+', "'/'", '+', '$id,', "'rb')"], 'file_path': '@web.session', 'line_number': 45}, {'str': '$content = pickle.load($f)', 'command': '$content', 'args_str': '= pickle.load($f)', 'args': ['=', 'pickle.load($f)'], 'file_path': '@web.session', 'line_number': 46}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@web.session', 'line_number': 47}, {'str': 'return $content', 'command': 'return', 'args_str': '$content', 'args': ['$content'], 'file_path': '@web.session', 'line_number': 48}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 49}, {'str': '@doc "    Starts the session.    "', 'command': '@doc', 'args_str': '"    Starts the session.    "', 'args': ['"', 'Starts', 'the', 'session.', '"'], 'file_path': '@web.session', 'line_number': 50}, {'str': 'func start_session()', 'command': 'func', 'args_str': 'start_session()', 'args': ['start_session()'], 'file_path': '@web.session', 'line_number': 51}, {'str': "if not is_defined('WEB_INITED')", 'command': 'if', 'args_str': "not is_defined('WEB_INITED')", 'args': ['not', "is_defined('WEB_INITED')"], 'file_path': '@web.session', 'line_number': 52}, {'str': "mem not (not is_defined('WEB_INITED'))", 'command': 'mem', 'args_str': "not (not is_defined('WEB_INITED'))", 'args': ['not', '(not', "is_defined('WEB_INITED'))"], 'file_path': '<system>', 'line_number': 63}, {'str': 'gotoif tmplabelif65_2', 'command': 'gotoif', 'args_str': 'tmplabelif65_2', 'args': ['tmplabelif65_2'], 'file_path': '<system>', 'line_number': 63}, {'str': "gset ('web.session', {})", 'command': 'gset', 'args_str': "('web.session', {})", 'args': ["('web.session',", '{})'], 'file_path': '@web.session', 'line_number': 53}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 54}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 55}, {'str': 'label tmplabelif65_2', 'command': 'label', 'args_str': 'tmplabelif65_2', 'args': ['tmplabelif65_2'], 'file_path': '<system>', 'line_number': 68}, {'str': 'label tmplabelif65_end', 'command': 'label', 'args_str': 'tmplabelif65_end', 'args': ['tmplabelif65_end'], 'file_path': '<system>', 'line_number': 68}, {'str': "if 'PASHMAK_SESSION' in list($web.cookies->keys())", 'command': 'if', 'args_str': "'PASHMAK_SESSION' in list($web.cookies->keys())", 'args': ["'PASHMAK_SESSION'", 'in', 'list($web.cookies->keys())'], 'file_path': '@web.session', 'line_number': 56}, {'str': "mem not ('PASHMAK_SESSION' in list($web.cookies->keys()))", 'command': 'mem', 'args_str': "not ('PASHMAK_SESSION' in list($web.cookies->keys()))", 'args': ['not', "('PASHMAK_SESSION'", 'in', 'list($web.cookies->keys()))'], 'file_path': '<system>', 'line_number': 71}, {'str': 'gotoif tmplabelif66_2', 'command': 'gotoif', 'args_str': 'tmplabelif66_2', 'args': ['tmplabelif66_2'], 'file_path': '<system>', 'line_number': 71}, {'str': "$id = $web.cookies['PASHMAK_SESSION']", 'command': '$id', 'args_str': "= $web.cookies['PASHMAK_SESSION']", 'args': ['=', "$web.cookies['PASHMAK_SESSION']"], 'file_path': '@web.session', 'line_number': 57}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 58}, {'str': 'goto tmplabelif66_end', 'command': 'goto', 'args_str': 'tmplabelif66_end', 'args': ['tmplabelif66_end'], 'file_path': '<system>', 'line_number': 75}, {'str': 'label tmplabelif66_2', 'command': 'label', 'args_str': 'tmplabelif66_2', 'args': ['tmplabelif66_2'], 'file_path': '<system>', 'line_number': 75}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 75}, {'str': 'gotoif tmplabelif66_3', 'command': 'gotoif', 'args_str': 'tmplabelif66_3', 'args': ['tmplabelif66_3'], 'file_path': '<system>', 'line_number': 75}, {'str': '$id = write_session()', 'command': '$id', 'args_str': '= write_session()', 'args': ['=', 'write_session()'], 'file_path': '@web.session', 'line_number': 59}, {'str': "set_cookie ({                'name': 'PASHMAK_SESSION',                'value': $id,            })", 'command': 'set_cookie', 'args_str': "({                'name': 'PASHMAK_SESSION',                'value': $id,            })", 'args': ['({', "'name':", "'PASHMAK_SESSION',", "'value':", '$id,', '})'], 'file_path': '@web.session', 'line_number': 60}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 61}, {'str': 'label tmplabelif66_3', 'command': 'label', 'args_str': 'tmplabelif66_3', 'args': ['tmplabelif66_3'], 'file_path': '<system>', 'line_number': 82}, {'str': 'label tmplabelif66_end', 'command': 'label', 'args_str': 'tmplabelif66_end', 'args': ['tmplabelif66_end'], 'file_path': '<system>', 'line_number': 82}, {'str': "define ('WEB_SESSION_ID', $id)", 'command': 'define', 'args_str': "('WEB_SESSION_ID', $id)", 'args': ["('WEB_SESSION_ID',", '$id)'], 'file_path': '@web.session', 'line_number': 62}, {'str': '$session = load_session_by_id($id)', 'command': '$session', 'args_str': '= load_session_by_id($id)', 'args': ['=', 'load_session_by_id($id)'], 'file_path': '@web.session', 'line_number': 63}, {'str': "gset ('web.session', $session)", 'command': 'gset', 'args_str': "('web.session', $session)", 'args': ["('web.session',", '$session)'], 'file_path': '@web.session', 'line_number': 64}, {'str': 'register_shutdown (end_session)', 'command': 'register_shutdown', 'args_str': '(end_session)', 'args': ['(end_session)'], 'file_path': '@web.session', 'line_number': 65}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 66}, {'str': '@doc "Re-Write the sessions"', 'command': '@doc', 'args_str': '"Re-Write the sessions"', 'args': ['"Re-Write', 'the', 'sessions"'], 'file_path': '@web.session', 'line_number': 67}, {'str': 'func end_session()', 'command': 'func', 'args_str': 'end_session()', 'args': ['end_session()'], 'file_path': '@web.session', 'line_number': 68}, {'str': "write_session (WEB_SESSION_ID, gget('web.session'))", 'command': 'write_session', 'args_str': "(WEB_SESSION_ID, gget('web.session'))", 'args': ['(WEB_SESSION_ID,', "gget('web.session'))"], 'file_path': '@web.session', 'line_number': 69}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 70}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 71}]
