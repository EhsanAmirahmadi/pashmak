#
# os.pashm
#
# The Pashmak Project
# This Pashmak module is created by mehan alavi majd <mehan.alavi.majd88@gmail.com> 
# Copyright 2020-2021 parsa shahmaleki <parsampsh@gmail.com>
# 
# This file is part of Pashmak.
#
# Pashmak is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Pashmak is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Pashmak.  If not, see <https://www.gnu.org/licenses/>.
#########################################################################

namespace os
    $env = python("self.mem = os.environ")

    @doc """\
    Changes program working directory to new path.\n\
    Gets path as string.\
    """
    func chdir($dirpath)
        python("os.chdir(self.get_var('dirpath')")
    endfunc

    @doc """\
    Returns CPU count.\
    """
    func cpu_count
        python("self.mem = os.cpu_count()")
    endfunc

    @doc """\
    Makes a directory.\n\
    Gets directory path as string.\
    """
    func mkdir($dirpath)
        python("os.mkdir(self.get_var('dirpath'))")
    endfunc

    $curdir = python("self.mem = os.curdir")

    @doc """\
    Kills a process.\n\
    First argument is process ID as int.\n\
    Second argument is the signal.\
    """
    func kill($pid, $signal=1)
        python("os.kill(self.get_var('pid'), self.get_var('signal'))")
    endfunc

    @doc """\
    Removes a directory.\n\
    Gets directory path as string.\
    """
    func rmdir($dirpath)
        python("os.rmdir(self.get_var('dirpath'))")
    endfunc

    $osname = python('self.mem = os.name')

    $pardir = python('self.mem = os.path.pardir')

    @doc """\
    Checks is a path directory.\n\
    Gets path as string.\n\
    Returns Boolean.\n\
    """
    func isdir($dirpath)
        python("self.mem = os.path.isdir(self.get_var('dirpath'))")
    endfunc

    @doc """\
    Checks is a path file.\n\
    Gets path as string.\n\
    Returns Boolean.\n\
    """
    func isfile($path)
        python("self.mem = os.path.isfile(self.get_var('path'))")
    endfunc

    @doc """\
    Checks a path exists.\n\
    Gets path as string.\n\
    Returns Boolean.\
    """
    func exists($path)
        python("self.mem = os.path.exists(self.get_var('path'))")
    endfunc

    @doc """\
    Returns program current working directory as string.\
    """
    func cwd
        python("self.mem = os.getcwd()")
    endfunc
endnamespace
