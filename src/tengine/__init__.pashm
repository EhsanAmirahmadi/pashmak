#
# __init__.pashm
#
# The Pashmak Project
# Copyright 2020-2021 parsa shahmaleki <parsampsh@gmail.com>
#
# This file is part of Pashmak.
#
# Pashmak is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Pashmak is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Pashmak.  If not, see <https://www.gnu.org/licenses/>.
#########################################################################

namespace tengine
	func include($args)
		$args = format_args($args)

		$path = $args[0]
		$htmldata = {}

		if len($args) > 1
			$htmldata = $args[1]
		endif

		tengine.run_file($path, True, $htmldata)
	endfunc

	func run_file($args)
		$args = format_args($args)
		$realtime_run = False
		$htmldata = {}
		$path = $args[0]
		if len($args) > 1
			$realtime_run = $args[1]
		endif
		if len($args) > 2
			$htmldata = $args[2]
		endif

		$f = fopen($path, 'r')
		$content = $f->read()
		$f->close()
		return tengine.run($content, $realtime_run, $path, $htmldata)
	endfunc

	func run($args)
		$args = format_args($args)
		$realtime_run = False
		$__htmldir__ = $__dir__
		$__htmlfile__ = $__htmldir__ + '/-'
		$content = $args[0]
		$content = $content->split('\\n', 1)
		if len($content) > 1
			if $content[0]->startswith('#!/')
				$content = $content[1]
			else
				$content = '\\n'->join($content)
			endif
		else
			$content = $content[0]
		endif
		if len($args) > 1
			$realtime_run = $args[1]
		endif
		if len($args) > 2
			$__htmlfile__ = os.path.abspath($args[2])
			$__htmldir__ = os.path.dirname($__htmlfile__)
		endif
		if len($args) > 3
			$htmldata = $args[3]
		endif

		$randstr_1 = '<<<therandomstringfortengine' + str(time.time()) + str(random.random()) + '>>>'
		$randstr_2 = '<<<therandomstringfortengine' + str(time.time()) + str(random.random()) + '>>>'
		$content = $content->replace('\{', $randstr_1)
		$content = $content->replace('\}', $randstr_2)
		$content = $content->replace('{{', '{=')
		$content = $content->replace('}}', '}')
		$parts = $content->split('{')
		$i = 0
		$new_parts = []
		section tengine_loop1
			$tmp = $parts[$i]->split('}', 1)
			if len($tmp) > 1
				$new_parts->append([True, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])
				$new_parts->append([False, $tmp[1]->replace($randstr_1, '{')->replace($randstr_2, '}')])
			else
				$new_parts->append([False, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])
			endif
			$i = $i + 1
		mem $i < len($parts); gotoif tengine_loop1
		
		$tengine_i = 0
		$tengine_parts = $new_parts
		$tengine_code = ''
		free $i $new_parts $parts $content $randstr_1 $randstr_2 $tmp
		section tengine_loop2
			if $tengine_parts[$tengine_i][0] == True
				if $tengine_parts[$tengine_i][1]
					if $tengine_parts[$tengine_i][1][0] == '='
						$tengine_code = $tengine_code + ('\\nprint(' + $tengine_parts[$tengine_i][1][1:] + ')')
					else
						$tengine_code = $tengine_code + ('\\n' + $tengine_parts[$tengine_i][1])
					endif
				endif
			else
				$tengine_code = $tengine_code + ('\\nprint(base64.b64decode("' + base64.b64encode($tengine_parts[$tengine_i][1]->encode())->decode() + '")->decode())')
			endif
			$tengine_i = $tengine_i + 1
		mem $tengine_i < len($tengine_parts); gotoif tengine_loop2

		free $tengine_i $tengine_parts

		if $realtime_run
			eval($tengine_code)
		else
			out_start()
			eval($tengine_code)
			out_end()
			return out_get_clean()
		endif
	endfunc
endns

if $__ismain__
	if len($argv) > 1
        tengine.run_file($argv[1], True)
	else
        println('tengine: File name is required')
        exit(1)
	endif
endif
