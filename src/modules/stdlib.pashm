#
# stdlib.pashm
#
# The Pashmak Project
# Copyright 2020 parsa shahmaleki <parsampsh@gmail.com>
#
# This file is part of Pashmak.
#
# Pashmak is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Pashmak is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Pashmak.  If not, see <https://www.gnu.org/licenses/>.
#########################################################################

class Object
    func __init__
    endfunc

    func __str__
        return '[PashmakClass name="' + $this->__name__ + '"]'
    endfunc
endclass

func print
    mem self.print(^)
endfunc

func import
    mem self.import_script(^)
endfunc

func import_once
    mem self.import_script(^, True)
endfunc

func exit($code)
    if typeof($code) != int
        $code = 0
    endif
    python("self.exit_program(self.get_var('code'))")
endfunc

func eval
    mem self.pashmak_eval(^)
endfunc

func endns
    endnamespace
endfunc

func raise($exdata)
	python("self.raise_error('" + str($exdata[0]) + "', '" + str($exdata[1]) + "', self.threads[-1]['commands'][self.threads[-1]['current_step']])")
endfunc

func assert($value)
    if not $value
        raise('AssertError', 'asserting that false is true')
    endif
endfunc

func gset($args)
	python('self.threads[0]["vars"]["' + str($args[0]) + '"] = self.get_var("args")[1]')
endfunc

func println($value)
    print(str($value) + '\\n')
endfunc

func printl($value)
    println($value)
endfunc

func cwd
    python("self.mem = os.getcwd()")
endfunc

func chdir($path)
    python("self.mem = os.chdir(self.get_var('path'))")
endfunc

func typeof($obj)
    python("self.mem = type(self.get_var('obj'))")
endfunc

func system($cmd)
    python("self.mem = os.system(self.get_var('cmd'))")
endfunc

func python
    rmem exec(^)
endfunc

func required
endfunc

func read
    read
endfunc
