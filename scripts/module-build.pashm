#!/usr/bin/env pashmak
# Mixes static pashmak internal modules from `modules/` directory to `src/core/modules.py` file

$modules = {}
$module_files = os.listdir($__dir__ + '/../src/modules')
$module_files->sort()

$i = 0
while $i < len($module_files)
    $f = open($__dir__ + '/../src/modules/' + $module_files[$i], 'r')
    $content = $f->read()
    $f->close()
    $module_name = $module_files[$i]->split('.')[0]
    $modules[$module_name] = $content
    $i = $i + 1
endwhile

$pycode = '""" Internal modules """\n\nmodules = {}\n'
$i = 0
$keys = list($modules->keys())
while $i < len($keys)
    $k = $keys[$i]
    $tmp_module_content = $modules[$k]->replace('\n\n', '\n')
    $tmp_module_content = $tmp_module_content->replace('\n\n', '\n')
    $new_module_content = ''

    $j = 0
    $lines = $tmp_module_content->strip()->split('\n')
    while $j < len($lines)
        $line = $lines[$j]
        if $line != ''
            $new_module_content = $new_module_content + $line + '\n'
        endif
        $j = $j + 1
    endwhile

    $new_module_content = $new_module_content->strip()
    $pycode = $pycode + '\nmodules["' + $k + '"] = """' + $new_module_content + '"""'

    $i = $i + 1
endwhile

$pycode = $pycode + '\n'

$f = open($__dir__ + '/../src/core/modules.py', 'w')
$f->write($pycode)
$f->close()

println("\033[32mall of modules mixed in 'src/core/modules.py' successfuly\033[0m")
